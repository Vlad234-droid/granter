{"version":3,"sources":["components/icons/index.js","core/actions/user.js","core/actions/registration.js","core/actions/projects.js","core/actions/claims.js","core/actions/index.js","core/services/registrationServices.js","core/services/userServices.js","core/services/loginServices.js","core/services/activeClameServices.js","core/services/futureCompletedClameServices.js","core/services/documentsServices.js","core/services/ProfileServices.js","assets/img/arrow-left.svg","assets/img/iceon-select-arrow.svg","assets/img/XLSX.svg","assets/img/DOCS.svg","core/constants.js","assets/img/icon-upload.svg","core/services/askAQuestion.js","components/LayoutDashboard/Aside/ModalAsk/index.js","components/LayoutDashboard/Aside/config.js","components/LayoutDashboard/Aside/index.js","components/headerCompanies/index.js","components/headerNotification/index.js","components/LayoutDashboard/Header/index.js","components/LayoutDashboard/Layout/index.js","assets/img/icon-pdf.svg","assets/img/PDF.svg","assets/img/icon-calendar.svg","assets/img/icon-arrow-dropdown.svg","core/actions/modal.js","assets/img/icon-file-s.svg","assets/img/icon-upload-blue.svg","assets/img/icon-upload-red.svg","assets/img/icon-skip.svg","assets/img/icon-download.svg","assets/img/header-logo.svg","assets/img/icon-undo.svg","assets/img/icon-add-project.svg","core/services/readNotiServices.js","core/services/logOut.js","core/services/getNotificationsForUser.js","assets/img/icon-comment.svg","assets/img/icon-file-b.svg","assets/img/icon-info.svg","assets/img/ask-photo.png","pages/LoadingPage/index.js","core/routes/PrivatRouter.js","core/routes/PrivatAdminRouter.js","pages/NotFound/notFound.jsx","pages/NotFound/index.js","core/routes/CoreRouter.js","components/LayoutGuest/Header/index.js","components/LayoutGuest/Footer/index.js","components/LayoutGuest/Layout/index.js","pages/WelcomePage/Steps/Step1/index.js","pages/WelcomePage/Steps/Step2/index.js","pages/WelcomePage/Steps/Step3/config.js","pages/WelcomePage/Steps/Step3/index.js","pages/WelcomePage/Steps/index.js","core/services/setUserToUnregister.js","pages/WelcomePage/Сonfirm/BenefitModal/index.js","pages/WelcomePage/Сonfirm/index.js","pages/WelcomePage/RegistrationForm/index.js","pages/WelcomePage/index.js","pages/Login/index.js","pages/ActiveClaimsPage/ActiveClaimsCards/index.js","components/UploadFile/index.js","pages/ActiveClaimsPage/ActiveClaimsSteps/CommonModalShadule/index.js","pages/ActiveClaimsPage/ActiveClaimsSteps/StepIntroduction/index.js","pages/ActiveClaimsPage/ActiveClaimsSteps/StepFinancial/index.js","components/Project/index.js","pages/ActiveClaimsPage/ActiveClaimsSteps/StepTechnical/index.js","pages/ActiveClaimsPage/ActiveClaimsSteps/StepDeliverables/index.js","pages/ActiveClaimsPage/ActiveClaimsSteps/StepSubmission/index.js","pages/ActiveClaimsPage/ActiveClaimsSteps/index.js","pages/ActiveClaimsPage/index.js","pages/FutureClaimsPage/index.js","components/DocumentViewer/index.js","components/Comment/Reply/index.js","components/Comment/index.js","pages/DocumentPage/index.js","components/ProjectFileListItem/index.js","pages/ProjectsPage/Project/index.js","pages/ProjectsPage/index.js","pages/ChangePasswordPage/index.js","pages/ResetPasswordPage/index.js","pages/CreatePasswordPage/index.js","pages/AddProjectPage/Steps/Step1/index.js","pages/AddProjectPage/Steps/Step2/index.js","pages/AddProjectPage/Steps/Step3/config.js","pages/AddProjectPage/Steps/Step3/index.js","pages/AddProjectPage/Steps/index.js","pages/AddProjectPage/Сonfirm/BenefitModal/index.js","pages/AddProjectPage/Сonfirm/index.js","pages/AddProjectPage/index.js","pages/DocumentsPage/DocumentRow/index.js","pages/DocumentsPage/OnDeleteModal/index.js","pages/DocumentsPage/index.js","pages/NoFoundDoc/index.js","core/adminServices/clientServices.js","core/adminServices/claimServices.js","core/adminServices/documentsServices.js","core/adminServices/projectServices.js","core/adminServices/settingsServices.js","core/adminServices/notificationsServices.js","components/AdminHeaderNotifications/index.js","components/LayOutAdmin/index.js","pages/AdminProfilePage/Company/index.js","components/AdminClientActionLog/index.js","pages/AdminProfilePage/index.js","pages/AdminActiveClaimsPage/AdminActiveClaimsCards/index.js","components/AdminUploadFile/index.js","pages/AdminActiveClaimsPage/AdminActiveClaimsSteps/CommonModalShadule/index.js","pages/AdminActiveClaimsPage/AdminActiveClaimsSteps/StepIntroduction/index.js","pages/AdminActiveClaimsPage/AdminActiveClaimsSteps/StepFinancial/index.js","components/AdminProject/index.js","pages/AdminActiveClaimsPage/AdminActiveClaimsSteps/StepTechnical/index.js","pages/AdminActiveClaimsPage/AdminActiveClaimsSteps/StepDeliverables/index.js","pages/AdminActiveClaimsPage/AdminActiveClaimsSteps/StepSubmission/index.js","pages/AdminActiveClaimsPage/AdminActiveClaimsSteps/index.js","pages/AdminActiveClaimsPage/AdminActiveClaimsDates/index.js","pages/AdminActiveClaimsPage/index.js","pages/AdminClientsPage/index.js","components/UploadPhoto/index.js","pages/AdminSettings/CreateAdminModal/index.js","pages/AdminSettings/DeleteAdminModal/index.js","pages/AdminSettings/index.js","pages/AdminAddClient/Steps/Step1/index.js","pages/AdminAddClient/Steps/Step2/index.js","pages/AdminAddClient/Steps/Step3/index.js","pages/AdminAddClient/Steps/index.js","pages/AdminAddClient/Сonfirm/BenefitModal/index.js","pages/AdminAddClient/Сonfirm/index.js","pages/AdminAddClient/RegistrationForm/index.js","pages/AdminAddClient/index.js","pages/AdminAddComany/Steps/Step1/index.js","pages/AdminAddComany/Steps/Step2/index.js","pages/AdminAddComany/Steps/Step3/config.js","pages/AdminAddComany/Steps/Step3/index.js","pages/AdminAddComany/Steps/index.js","pages/AdminAddComany/Сonfirm/BenefitModal/index.js","pages/AdminAddComany/Сonfirm/index.js","pages/AdminAddComany/RegistrationForm/index.js","pages/AdminAddComany/index.js","components/AdminComment/Reply/index.js","components/AdminComment/index.js","pages/AdminDocumentPage/index.js","pages/AdminProjectsPage/Project/index.js","pages/AdminProjectsPage/index.js","pages/DocSign/index.js","pages/CompletedClaimsPage/index.js","pages/CongratulationsPage/index.js","core/routes/index.js","core/reducers/userReducer.js","core/reducers/registrationReducer.js","core/reducers/modalReducer.js","core/reducers/projectsReducer.js","core/reducers/claimsReducer.js","core/reducers/index.js","store.js","components/Plug/index.js","index.js"],"names":["IconInfo","width","height","viewBox","fill","xmlns","className","d","IconWarning","IconPhone","IconMail","fillRule","clipRule","IconCompany","IconNotificationsLength","IconNotificationsEmpty","IconDeleteFile","IconComment","IconReply","IconEditPencil","IconAdd","IconDownload","IconFilter","CloseIconModal","style","padding","LogOutSVG","DeleteCompanySVG","SuffixShedulleCallIcon","NoFoundDocSVG","x","y","rx","transform","ColumnVisibilitySVG","AdminBackToTablesSVG","DeleteAdminSVG","cursor","CongrCard1","margin","CongrCard2","CongrCard3","AdminArrow","AdminCreateClose","EditPhotoAdmin","GranterLogo","DevicesOther","loginRequested","type","loginLoaded","newBooks","payload","loginError","error","userDataLoaded","data","userCompaniesLoaded","setUserCurrentCompany","setUserActiveClimeId","userLogOut","setUserIsAdmin","setPrevRout","rout","registrationFetchRequested","registrationFetchLoaded","registrationFetchError","registrationUpdateState","registrationSetAllIndustries","registrationChangeEstimate","addProjectsDetails","setStepStatus","claim","setFinalReport","actions","user","registration","modal","projects","claims","REACT_APP_API_URL","process","fetchCompanyHouse","q","body","Promise","resolve","reject","fetch","method","headers","Accept","JSON","stringify","then","resp","ok","json","notification","description","message","icon","Error","fetchRegistration","form","catch","fetchAllIndustries","dispatch","bindActionCreators","res","map","item","index","value","display_value","key","fetchUserData","token","lockr","get","Authorization","status","role_id","fetchUserCompanies","fetchResetPassword","email","formData","FormData","append","fetchCreatePassword","i","fetchLogin","loginData","history","rm","authDate","Date","set","push","profile","id_status","getActiveClaimData","companyId","id","getIntroductionClaimStep","claimId","getFinancialClaimStep","getTechnicalClaimStep","getDeliverablesClaimStep","getSubmissionClaimStep","setSkipFile","fileId","uploadFile","file","deleteFile","setNewProject","forEach","doc","editProject","projectId","addDocumentToProject","is_main","removeProject","removeDocumentFromProject","documentId","setApproveClime","claimid","sendApproveReport","getfutureClaimData","getCompletedClaimData","getDocumentComments","postNewVersionDocument","postNewComment","text","is_reply","comment_id","removeComment","commentId","getDocumentsManagerList","step","documents","getDownloadList","list","stage","fetchProfileData","postProfileData","postCompanyData","companyData","postCompanyLogo","logo","addNewCompany","company","el","n","fetchChacngePassword","module","exports","app","APP_NAME","API_URL","APP_URL","BUGSNAG_KEY","GOOGLE_MAPS_KEY","AUTH_KEY","LOCALSTORAGE_EXPIRES_KEY","LOCALSTORAGE_EXPIRES_TIME","validZero","askAQuestion","manager_id","phone","a","is_phone","success","TextArea","Input","ModalAsk","visibleModal","handleCancel","useState","askSelection","setAskSelection","Form","useForm","useDispatch","onAskSelectionChange","useCallback","e","target","visible","onCancel","cancelButtonProps","display","okButtonProps","closeIcon","labelCol","span","wrapperCol","name","onFinish","undefined","setFieldsValue","options","initialValues","src","AskPhoto","alt","Item","rules","required","min","rows","Group","onChange","pattern","placeholder","checkForPhoneRender","onClick","htmlType","activeItems","to","subMenuItems","SubMenu","Menu","Aside","location","useLocation","useSelector","state","currentCompany","currentMenu","setCurrentMenu","showSubMenu","closeSubMenu","isVisibleSubMenu","addSubClass","setAddSubClass","useEffect","pathname","includes","checkForAvatar","manager","avatar","onOpenChange","length","headerLogo","multiple","mode","selectedKeys","openKeys","title","onTitleClick","href","active","paragraph","Avatar","avatarShape","size","showModalAction","closeModalAction","logOut","HeaderCompanies","companies","currentId","filter","menu","placement","overlay","trigger","overlayClassName","getPopupContainer","document","querySelector","HeaderNotification","isVisibleNotifications","notiData","setNotiData","count","setCount","useHistory","getNotificationsForUser","checkForLinkTo","project_id","claim_id","document_id","readNoti","showModalNotifications","closeModalNotifications","closable","onClose","date","convertDate","inputFormat","pad","s","getDate","getMonth","getFullYear","join","created_at","getHours","getMinutes","Header","LayoutBoard","children","isVisibleModalDeleteDocs","isVisibleBlurSheduleCall","isVisibleActiveTechnical","isVisibleActiveSteps","Content","showModalDelete","closeModalDelete","showModalDeleteDocs","closeModalDeleteDocs","showBlurSheduleCall","closeBlurSheduleCall","showBlurActiveTechnicals","closeBlurActiveTechnicals","blurActiveSteps","blurActivePrPage","setIsBlur","setCurrentPageGLOBAL","compId","LoadingPage","PrivateRoute","Component","component","rest","isloggedIn","isAdmin","userData","CurrentComponent","render","props","PrivateAdminRoute","NotFound","view","DOM","this","CoreRouter","Footer","WelcomeStep1","goNextStep","slider","useRef","inputSearch","setOptions","companyName","setCompanyName","loader","setLoader","fetchCompanyHouseDelay","_","debounce","searchText","results","company_name","onSearch","onSelect","ref","dots","effect","swipe","layout","requiredMark","number","company_number","industry","industries","current","next","label","validateTrigger","validator","notFoundContent","getElementById","dropdownClassName","Search","loading","goTo","values","prev","WelcomeStep2","goPrevStep","setIndustry","sic_code","showSearch","showArrow","optionFilterProp","industriesList","option","filterOption","input","toLowerCase","indexOf","firstRow","suffix","secondRow","WelcomeStep3","setMinPrice","setMaxPrice","hight","hightPersent","check","percent","Math","max","checkForHighestPercent","staffing_costs","materials_costs","subcontracting_costs","software_costs","estimated_benefit","Number","floor","setToBenefitPriceHandler","gutter","Step","Steps","WelcomeSteps","currentStep","setCurrentStep","easing","color","lineHeight","textAlign","border","setUserToUnregister","modal_phone","modal_email","arrId","BenefitModal","isModalBenefit","setIsModalBenefit","updatedList","antIcon","LoadingOutlined","fontSize","spin","Сonfirm","maxPrice","minPrice","showEstimate","checkorForRenderBenefitModal","indicator","RegistrationForm","passwordError","setPasswordError","showPassword","setShowPassword","industryIds","industry_ids","password","onFieldsChange","changedFields","allFields","errors","onFinishFailed","EyeInvisibleOutlined","EyeOutlined","minLength","minScore","tooShortWord","scoreWords","changeCallback","score","isValid","validateFields","inputProps","autoComplete","hidden","WelcomePage","Layout","isLogged","LoginPage","ActiveClaimsCards","activeClaimData","days","newDate","setDate","estimated_benefit_start","toFixed","estimated_benefit_end","round","estimated_total_claim_benefit_percentage","estimated_total_claim_benefit_days","estimated_claim_completion","estimated_completion","Dragger","Upload","UploadFile","skipButton","removeButton","onRed","onAction","onRemoveDropdown","setOnRemoveDropdown","extension","setExtension","setLoading","activeClaimId","url","match","statusName","class","is_skipped","DOCSSVG","PDFSVG","XLSXSVG","checkForExt","has_unresolved_comments","disabled","onVisibleChange","iconComment","comments_count","customRequest","onSuccess","accept","showUploadList","iconUpload","slug","preventDefault","stopPropagation","iconUndo","iconSkip","iconUploadRed","CommonModalShadule","isVisibleModalSheduleCall","setIsVisibleModalSheduleCall","wrapClassName","use12Hours","format","suffixIcon","StepIntroduction","introductionStep","setIntroductionStep","detailsShow","setDetailsShow","setStatus","red","call_date","iconCalendar","arrowLeft","background","row","StepFinancial","financialStep","setFinancialStep","Panel","Collapse","Project","iconFileS","bordered","ghost","expandIcon","arrow","header","StepTechnical","technicalStep","setTechnicalStep","modalVisible","setModalVisible","result","start_date","end_date","iconAddProject","footer","main_document","setTimeout","iconFile","StepDeliverables","deliverablesStep","setDeliverablesStep","StepSubmission","submissionStep","setSubmissionStep","activeClaimIdStatus","activeClaimStatus","activeClaimIdDone","introduction","financial","technical","deliverables","submission","ActiveClaimsSteps","ActiveClaimsPage","setActiveClaimData","email_verified_at","FutureClaimsPage","futureClaimData","setFutureClaimData","DocumentViewer","setSrc","frameBorder","seamless","Reply","reply","onReplyDelete","updated_at","dangerouslySetInnerHTML","__html","replace","Comment","comment","onCommentDelete","onAddReply","replyForm","setReplyForm","replyLoader","setReplyLoader","checked","escape","onPressEnter","currentTarget","shiftKey","trim","replies","Option","Select","DocumentPage","useParams","climeId","commentsList","setCommentsList","setMode","setDocument","documentUploadLoader","setDocumentUploadLoader","newCommentForm","setNewCommentForm","newCommentLoader","setNewCommentLoader","comments","addReply","isCommentsApproved","iconBack","iconDownload","defaultValue","iconSelectArrow","dropdownMatchSelectWidth","sort","b","window","scrollTo","ProjectFileListItem","originNode","fileList","role","aria-label","rel","remove","project","onRemove","isRemoved","isRed","setIsRed","getFieldsValue","challenges","objectives","valuePropName","getValueFromEvent","Array","isArray","itemRender","currFileList","ProjectsPage","currentProject","setCurrentProject","setIsRemoved","formLength","projectsList","isVisibleProjectPage","initialValue","addProject","month","year","challanges","parse","docs","originFileObj","formValues","marginTop","doc_url","iconPdf","ChangePasswordPage","Password","ResetPasswordPage","CreatePasswordPage","setToken","search","split","password_confirmation","AddProjectPage","DocumentRow","onFileSelect","onDeleteFile","original_name","OnDeleteModal","deleteList","onDeleteList","danger","DocumentsPage","setFileList","filterList","setFilterList","isDisabled","setIsDisabled","isDisabledDelete","setIsDisabledDelete","getTime","open","zip","onValuesChange","changedValues","filters","isExtension","isClaimId","isStatus","NoFoundDoc","notFound","setNotFound","getContainer","getResource","postResource","dataBody","deleteResource","getAllClients","page","sort_by","sort_dir","slice","postClientCompanyEdits","getClient","clientID","getClientCompanies","getClientActions","postEditClient","deleteClient","deleteComany","clientId","getClaim","intro","approveDocument","appDoc","approveStep","stepNumber","uploadDocumentToClaim","deleteDocumentFromClaim","editClaimCards","editClaimData","getDocument","approveComment","unApproveComment","approveProject","createNewAdmin","newAdmin","getAllAdmins","allAdmins","deleteAdmin","adminId","delAdmin","getNotificationsForAdmin","getAdminInfo","readAdminNoti","modalNoti","setModalNoti","LayOutAdmin","activeLink","setActiveLink","isBlur","routeLi","AdminHeaderNotifications","Company","updateCompany","setModal","companyLogo","setCompanyLogo","editMode","setEditMode","logoLoader","setLogoLoader","loaderDelBtn","setLoaderDelBtn","companyForm","isDropDownDelete","setIsDropDownDelete","cleanupFunction","accountant_email","revenue","utr","sme_or_rdec","updateLogo","submit","AdminClientActionLog","ProfilePage","setUserData","editModeGeneral","setEditModeGeneral","profileFormLoader","setProfileFormLoader","companiesList","setCompaniesList","clientLogList","setClientLogList","isClientActionLog","setIsClientActionLog","appriveIdloading","setAppriveIdloading","removeClientModal","setRemoveClientModal","removeComanyModal","setRemoveComanyModal","removeComanyId","setRemoveComanyId","profileForm","team_role","address","enable_notifications","err","AdminActiveClaimsCards","onEdit","project_claim_completion","valuse","prefix","strokeColor","AdminUploadFile","checkForAllStatus","extensions","position","warning","duration","clone","AdminProject","onDelete","onChangeStatus","AdminActiveClaimsDates","startDate","setStartDate","endDate","setEndDate","AdminActiveClaimsPage","prevRout","goBack","AdminActiveClaimsSteps","dataColumns","dataIndex","sorter","AdminClientsPage","setVisible","dataSource","setDataSource","tableLoading","setTableLoading","totalCountPages","setTotalCountPages","currentPage","setCurrentPage","perPage","setPerPage","sorterType","setSorterType","currentColumnKey","setCurrentColumnKey","pageAdminClientsGLOBAL","columns","setColumns","defaultCheckedList","useMemo","setPageInfo","total_count","per_page","newData","client_name","client_id","active_claim_id","yearned","due_date","perStages","getActiveStage","progress","project_value","checkForValue","date_completed","progressComp","approvedClaims","Object","in_done","keys","flag","checkedProp","itemData","pagination","extra","order","columnKey","showSizeChanger","pageSize","total","showQuickJumper","showLessItems","UploadPhoto","edit","setEdit","avatarUrl","setAvatarUrl","URL","createObjectURL","CreateAdminModal","setDataTable","isCreateAdminModal","setIsCreateAdminModal","updatedInfo","admins","resetFields","DeleteAdminModal","setRecordId","recordId","filteredListAdmins","isDeleteAdminModal","setIsDeleteAdminModal","setFilteredListAdmins","AdminSettings","dataTable","align","record","filteredData","deleteHandler","defaultPageSize","goButton","AdminComment","AdminDocumentPage","AdminProjectsPage","DocSign","CompletedClaimsPage","completedClaimsData","setCompletedClaimsData","CongratulationsPage","isSended","setIsSended","finalReport","final_benefit_amount","time_taken_to_complete","estimated_payment_date","factory","React","lazy","preload","lazyWithPreload","routes","Suspense","fallback","exact","path","AdminProfilePage","AdminAddClient","AdminAddComany","require","default","initialState","aDate","milliseconds","flush","onlyAuthorisedAllowed","userReducer","action","registrationReducer","isVisibleModalDelete","modalReducer","projectsReducer","claimsReducer","appReducer","combineReducers","rootReducer","store","createStore","reducer","__REDUX_DEVTOOLS_EXTENSION__","subscribe","console","log","getState","Plug","ReactDOM","basename"],"mappings":"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","file":"static/js/main.db1cfd0e.chunk.js","sourcesContent":["import React from 'react';\n\nimport './icons.scss';\n\nconst IconInfo = () => {\n  return (\n    <svg\n      width=\"12\"\n      height=\"12\"\n      viewBox=\"0 0 12 12\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className=\"icon-info\">\n      <path d=\"M6 0C5.21207 -1.17411e-08 4.43185 0.155195 3.7039 0.456723C2.97595 0.758251 2.31451 1.20021 1.75736 1.75736C1.20021 2.31451 0.758251 2.97595 0.456723 3.7039C0.155195 4.43185 0 5.21207 0 6C0 6.78793 0.155195 7.56815 0.456723 8.2961C0.758251 9.02405 1.20021 9.68549 1.75736 10.2426C2.31451 10.7998 2.97595 11.2417 3.7039 11.5433C4.43185 11.8448 5.21207 12 6 12C7.5913 12 9.11742 11.3679 10.2426 10.2426C11.3679 9.11742 12 7.5913 12 6C12 4.4087 11.3679 2.88258 10.2426 1.75736C9.11742 0.632141 7.5913 2.37122e-08 6 0ZM6.75 3.5C6.75 3.69878 6.67104 3.88942 6.53048 4.02998C6.38992 4.17054 6.19928 4.2495 6.0005 4.2495C5.80172 4.2495 5.61108 4.17054 5.47052 4.02998C5.32996 3.88942 5.251 3.69878 5.251 3.5C5.251 3.30135 5.32991 3.11084 5.47038 2.97038C5.61084 2.82991 5.80135 2.751 6 2.751C6.19865 2.751 6.38916 2.82991 6.52962 2.97038C6.67009 3.11084 6.749 3.30135 6.749 3.5H6.75ZM6 5C6.13261 5 6.25979 5.05268 6.35355 5.14645C6.44732 5.24021 6.5 5.36739 6.5 5.5V8.5C6.5 8.63261 6.44732 8.75979 6.35355 8.85355C6.25979 8.94732 6.13261 9 6 9C5.86739 9 5.74021 8.94732 5.64645 8.85355C5.55268 8.75979 5.5 8.63261 5.5 8.5V5.5C5.5 5.36739 5.55268 5.24021 5.64645 5.14645C5.74021 5.05268 5.86739 5 6 5Z\" />\n    </svg>\n  );\n};\n\nconst IconClose = () => {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" className=\"icon-close\">\n      <defs>\n        <filter id=\"ueyyoz5sma\">\n          <feColorMatrix\n            in=\"SourceGraphic\"\n            values=\"0 0 0 0 0.117647 0 0 0 0 0.117647 0 0 0 0 0.235294 0 0 0 1.000000 0\"\n          />\n        </filter>\n      </defs>\n      <g fill=\"none\" fillRule=\"evenodd\">\n        <g>\n          <g>\n            <g\n              //filter='url(#ueyyoz5sma)'\n              transform=\"translate(-957 -24) translate(933) translate(24 24)\">\n              <path d=\"M0 0L24 0 24 24 0 24z\" />\n              <path\n                className=\"icon-close--fill\"\n                fillRule=\"nonzero\"\n                d=\"M18.3 5.71c-.39-.39-1.02-.39-1.41 0L12 10.59 7.11 5.7c-.39-.39-1.02-.39-1.41 0-.39.39-.39 1.02 0 1.41L10.59 12 5.7 16.89c-.39.39-.39 1.02 0 1.41.39.39 1.02.39 1.41 0L12 13.41l4.89 4.89c.39.39 1.02.39 1.41 0 .39-.39.39-1.02 0-1.41L13.41 12l4.89-4.89c.38-.38.38-1.02 0-1.4z\"\n              />\n            </g>\n          </g>\n        </g>\n      </g>\n    </svg>\n  );\n};\n\nconst IconWarning = ({ className }) => {\n  return (\n    <svg\n      width=\"16\"\n      height=\"16\"\n      viewBox=\"0 0 16 16\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className={`icon-warning ${className}`}>\n      <path\n        d=\"M6.9488 2.28163L1.7016 11.8216C1.60109 12.0043 1.54993 12.2101 1.55315 12.4186C1.55637 12.6271 1.61387 12.8311 1.71998 13.0106C1.82609 13.1902 1.97714 13.3389 2.15825 13.4423C2.33936 13.5456 2.54428 13.6 2.7528 13.6H13.248C13.4565 13.6 13.6614 13.5456 13.8426 13.4423C14.0237 13.3389 14.1747 13.1902 14.2808 13.0106C14.3869 12.8311 14.4444 12.6271 14.4477 12.4186C14.4509 12.2101 14.3997 12.0043 14.2992 11.8216L9.0512 2.28163C8.94761 2.09348 8.79543 1.93659 8.61052 1.82732C8.42562 1.71804 8.21478 1.6604 8 1.6604C7.78523 1.6604 7.57438 1.71804 7.38948 1.82732C7.20458 1.93659 7.05239 2.09348 6.9488 2.28163ZM8 5.40003C8.15913 5.40003 8.31175 5.46324 8.42427 5.57576C8.53679 5.68828 8.6 5.8409 8.6 6.00003V9.20003C8.6 9.35916 8.53679 9.51177 8.42427 9.62429C8.31175 9.73681 8.15913 9.80003 8 9.80003C7.84087 9.80003 7.68826 9.73681 7.57574 9.62429C7.46322 9.51177 7.4 9.35916 7.4 9.20003V6.00003C7.4 5.8409 7.46322 5.68828 7.57574 5.57576C7.68826 5.46324 7.84087 5.40003 8 5.40003ZM8.6 11C8.6 11.1592 8.53679 11.3118 8.42427 11.4243C8.31175 11.5368 8.15913 11.6 8 11.6C7.84087 11.6 7.68826 11.5368 7.57574 11.4243C7.46322 11.3118 7.4 11.1592 7.4 11C7.4 10.8409 7.46322 10.6883 7.57574 10.5758C7.68826 10.4632 7.84087 10.4 8 10.4C8.15913 10.4 8.31175 10.4632 8.42427 10.5758C8.53679 10.6883 8.6 10.8409 8.6 11Z\"\n        className=\"icon-fill\"\n      />\n    </svg>\n  );\n};\n\nconst IconPhone = () => {\n  return (\n    <svg\n      width=\"14\"\n      height=\"18\"\n      viewBox=\"0 0 14 18\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className=\"icon-phone\">\n      <path\n        className=\"icon-fill\"\n        d=\"M6.78624 6.54882L5.44625 7.77882C5.61809 8.39938 5.86579 8.99638 6.18374 9.55632C6.51275 10.1094 6.90542 10.6221 7.35374 11.0838L9.08999 10.5376C9.56508 10.3881 10.074 10.3838 10.5515 10.5255C11.029 10.6671 11.4533 10.9482 11.77 11.3326L12.76 12.5351C13.5912 13.5451 13.4937 15.0276 12.5362 15.9201C10.9237 17.4226 8.44124 17.9326 6.58124 16.4388C4.94178 15.117 3.55959 13.5047 2.50375 11.6826C1.2325 9.49757 0.656246 7.40507 0.406246 5.76007C0.0487461 3.40382 1.7375 1.51757 3.84125 0.875073C4.44604 0.690051 5.09862 0.742595 5.66601 1.022C6.23341 1.3014 6.67292 1.78663 6.89499 2.37882L7.4375 3.82882C7.61241 4.29547 7.64387 4.80376 7.52783 5.28842C7.41179 5.77307 7.15354 6.21199 6.78624 6.54882Z\"\n      />\n    </svg>\n  );\n};\n\nconst IconMail = () => {\n  return (\n    <svg\n      width=\"16\"\n      height=\"14\"\n      viewBox=\"0 0 16 14\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className=\"icon-mail\">\n      <path\n        className=\"icon-fill\"\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M0.5 4.82722V10.75C0.5 11.413 0.763392 12.0489 1.23223 12.5178C1.70107 12.9866 2.33696 13.25 3 13.25H13C13.663 13.25 14.2989 12.9866 14.7678 12.5178C15.2366 12.0489 15.5 11.413 15.5 10.75V4.82722L8.69725 8.39866C8.26067 8.62786 7.73933 8.62787 7.30275 8.39866L0.5 4.82722ZM15.5 3.69778V3.25C15.5 2.58696 15.2366 1.95107 14.7678 1.48223C14.2989 1.01339 13.663 0.75 13 0.75H3C2.33696 0.75 1.70107 1.01339 1.23223 1.48223C0.763392 1.95107 0.5 2.58696 0.5 3.25V3.69778L7.76758 7.51326C7.91311 7.58966 8.08689 7.58966 8.23242 7.51326L15.5 3.69778Z\"\n      />\n    </svg>\n  );\n};\n\nconst IconCompany = () => {\n  return (\n    <svg\n      width=\"16\"\n      height=\"16\"\n      viewBox=\"0 0 16 16\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className=\"icon-company\">\n      <path\n        className=\"icon-fill\"\n        d=\"M3 0H13C13.0733 2.74801e-05 13.1457 0.0161652 13.212 0.0472705C13.2784 0.0783759 13.3371 0.123688 13.384 0.18L15.884 3.18C16.001 3.32 16 3.391 16 3.482V5C16 5.888 15.614 6.687 15 7.236V15.5C15 15.6326 14.9473 15.7598 14.8536 15.8536C14.7598 15.9473 14.6326 16 14.5 16H8V9.5C8 9.36739 7.94732 9.24021 7.85355 9.14645C7.75979 9.05268 7.63261 9 7.5 9H3.5C3.36739 9 3.24021 9.05268 3.14645 9.14645C3.05268 9.24021 3 9.36739 3 9.5V16H1.5C1.36739 16 1.24021 15.9473 1.14645 15.8536C1.05268 15.7598 1 15.6326 1 15.5V7.236C0.386 6.686 0 5.888 0 5V3.5C5.26234e-05 3.38305 0.0410991 3.26982 0.116 3.18L2.616 0.18C2.6629 0.123688 2.72161 0.0783759 2.78797 0.0472705C2.85433 0.0161652 2.92671 2.74801e-05 3 0ZM1 4V5C1 5.53043 1.21071 6.03914 1.58579 6.41421C1.96086 6.78929 2.46957 7 3 7C3.53043 7 4.03914 6.78929 4.41421 6.41421C4.78929 6.03914 5 5.53043 5 5V4H1ZM6 4V5C6 5.53043 6.21071 6.03914 6.58579 6.41421C6.96086 6.78929 7.46957 7 8 7C8.53043 7 9.03914 6.78929 9.41421 6.41421C9.78929 6.03914 10 5.53043 10 5V4H6ZM11 4V5C11 5.53043 11.2107 6.03914 11.5858 6.41421C11.9609 6.78929 12.4696 7 13 7C13.5304 7 14.0391 6.78929 14.4142 6.41421C14.7893 6.03914 15 5.53043 15 5V4H11ZM3.234 1L1.568 3H5.14L5.806 1H3.234ZM9.806 3L9.14 1H6.86L6.194 3H9.806ZM10.86 3H14.433L12.766 1H10.194L10.86 3ZM9 9.5V12.5C9 12.6326 9.05268 12.7598 9.14645 12.8536C9.24021 12.9473 9.36739 13 9.5 13H12.5C12.6326 13 12.7598 12.9473 12.8536 12.8536C12.9473 12.7598 13 12.6326 13 12.5V9.5C13 9.36739 12.9473 9.24021 12.8536 9.14645C12.7598 9.05268 12.6326 9 12.5 9H9.5C9.36739 9 9.24021 9.05268 9.14645 9.14645C9.05268 9.24021 9 9.36739 9 9.5Z\"\n      />\n    </svg>\n  );\n};\n\nconst IconNotificationsLength = () => {\n  return (\n    <svg\n      width=\"18\"\n      height=\"21\"\n      viewBox=\"0 0 18 21\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className=\"icon-notifications\">\n      <path\n        className=\"icon-fill\"\n        d=\"M9.00002 0.9961C10.9466 0.993541 12.8178 1.74894 14.217 3.10226C15.6163 4.45557 16.4336 6.30048 16.496 8.2461L16.5 8.4961V12.5931L17.88 15.7491C17.9632 15.9393 17.9978 16.1473 17.9805 16.3542C17.9632 16.5611 17.8946 16.7604 17.781 16.9342C17.6674 17.108 17.5122 17.2507 17.3296 17.3495C17.147 17.4483 16.9426 17.5001 16.735 17.5001L12 17.5011C12.001 18.2821 11.6975 19.0327 11.1538 19.5934C10.6101 20.1541 9.86922 20.4807 9.08856 20.5037C8.30791 20.5268 7.54903 20.2445 6.97323 19.7168C6.39743 19.1892 6.05008 18.4578 6.00502 17.6781L6.00002 17.4991L1.27502 17.5001C1.06761 17.5002 0.86344 17.4487 0.680911 17.3502C0.498381 17.2517 0.343231 17.1093 0.229442 16.9359C0.115654 16.7625 0.0468043 16.5635 0.0290991 16.3568C0.0113938 16.1502 0.0453894 15.9423 0.128022 15.7521L1.50002 12.5941V8.4961C1.50002 4.3411 4.85202 0.9961 9.00002 0.9961ZM10.5 17.5001L7.50002 17.5021C7.49996 17.8874 7.64816 18.258 7.91391 18.5369C8.17967 18.8159 8.54259 18.982 8.92744 19.0006C9.31229 19.0192 9.68956 18.8891 9.98103 18.6371C10.2725 18.3851 10.4558 18.0306 10.493 17.6471L10.5 17.5001Z\"\n      />\n    </svg>\n  );\n};\nconst IconNotificationsEmpty = () => {\n  return (\n    <svg\n      width=\"18\"\n      height=\"21\"\n      viewBox=\"0 0 18 21\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className=\"icon-notifications\">\n      <path\n        className=\"icon-empty\"\n        d=\"M9.00002 0.9961C10.9466 0.993541 12.8178 1.74894 14.217 3.10226C15.6163 4.45557 16.4336 6.30048 16.496 8.2461L16.5 8.4961V12.5931L17.88 15.7491C17.9632 15.9393 17.9978 16.1473 17.9805 16.3542C17.9632 16.5611 17.8946 16.7604 17.781 16.9342C17.6674 17.108 17.5122 17.2507 17.3296 17.3495C17.147 17.4483 16.9426 17.5001 16.735 17.5001L12 17.5011C12.001 18.2821 11.6975 19.0327 11.1538 19.5934C10.6101 20.1541 9.86922 20.4807 9.08856 20.5037C8.30791 20.5268 7.54903 20.2445 6.97323 19.7168C6.39743 19.1892 6.05008 18.4578 6.00502 17.6781L6.00002 17.4991L1.27502 17.5001C1.06761 17.5002 0.86344 17.4487 0.680911 17.3502C0.498381 17.2517 0.343231 17.1093 0.229442 16.9359C0.115654 16.7625 0.0468043 16.5635 0.0290991 16.3568C0.0113938 16.1502 0.0453894 15.9423 0.128022 15.7521L1.50002 12.5941V8.4961C1.50002 4.3411 4.85202 0.9961 9.00002 0.9961ZM10.5 17.5001L7.50002 17.5021C7.49996 17.8874 7.64816 18.258 7.91391 18.5369C8.17967 18.8159 8.54259 18.982 8.92744 19.0006C9.31229 19.0192 9.68956 18.8891 9.98103 18.6371C10.2725 18.3851 10.4558 18.0306 10.493 17.6471L10.5 17.5001Z\"\n      />\n    </svg>\n  );\n};\n\nconst IconDeleteFile = () => {\n  return (\n    <svg\n      width=\"15\"\n      height=\"15\"\n      viewBox=\"0 0 18 18\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className=\"icon-delete-file\">\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M12 3H16.5C16.6989 3 16.8897 3.07902 17.0303 3.21967C17.171 3.36032 17.25 3.55109 17.25 3.75C17.25 3.94891 17.171 4.13968 17.0303 4.28033C16.8897 4.42098 16.6989 4.5 16.5 4.5H15.6705L14.5425 14.664C14.4406 15.5813 14.004 16.4288 13.3163 17.0443C12.6285 17.6598 11.738 18.0001 10.815 18H7.185C6.26205 18.0001 5.37148 17.6598 4.68373 17.0443C3.99599 16.4288 3.55939 15.5813 3.4575 14.664L2.328 4.5H1.5C1.30109 4.5 1.11032 4.42098 0.96967 4.28033C0.829018 4.13968 0.75 3.94891 0.75 3.75C0.75 3.55109 0.829018 3.36032 0.96967 3.21967C1.11032 3.07902 1.30109 3 1.5 3H6C6 2.20435 6.31607 1.44129 6.87868 0.87868C7.44129 0.31607 8.20435 0 9 0C9.79565 0 10.5587 0.31607 11.1213 0.87868C11.6839 1.44129 12 2.20435 12 3ZM9 1.5C8.60218 1.5 8.22064 1.65804 7.93934 1.93934C7.65804 2.22064 7.5 2.60218 7.5 3H10.5C10.5 2.60218 10.342 2.22064 10.0607 1.93934C9.77936 1.65804 9.39782 1.5 9 1.5ZM6.75 7.5V13.5C6.75 13.6989 6.82902 13.8897 6.96967 14.0303C7.11032 14.171 7.30109 14.25 7.5 14.25C7.69891 14.25 7.88968 14.171 8.03033 14.0303C8.17098 13.8897 8.25 13.6989 8.25 13.5V7.5C8.25 7.30109 8.17098 7.11032 8.03033 6.96967C7.88968 6.82902 7.69891 6.75 7.5 6.75C7.30109 6.75 7.11032 6.82902 6.96967 6.96967C6.82902 7.11032 6.75 7.30109 6.75 7.5ZM11.0303 6.96967C10.8897 6.82902 10.6989 6.75 10.5 6.75C10.3011 6.75 10.1103 6.82902 9.96967 6.96967C9.82902 7.11032 9.75 7.30109 9.75 7.5V13.5C9.75 13.6989 9.82902 13.8897 9.96967 14.0303C10.1103 14.171 10.3011 14.25 10.5 14.25C10.6989 14.25 10.8897 14.171 11.0303 14.0303C11.171 13.8897 11.25 13.6989 11.25 13.5V7.5C11.25 7.30109 11.171 7.11032 11.0303 6.96967Z\"\n        className=\"icon-fill\"\n      />\n    </svg>\n  );\n};\n\nconst IconComment = () => {\n  return (\n    <svg\n      width=\"16\"\n      height=\"16\"\n      viewBox=\"0 0 16 16\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className=\"icon-comment\">\n      <path\n        d=\"M2.33333 1H13C13.7333 1 14.3333 1.6 14.3333 2.33333V10.6695C14.3333 11.4028 13.7333 12.0028 13 12.0028H4.08088C3.81566 12.0028 3.56131 12.1082 3.37377 12.2957L1.68284 13.9866C1.43086 14.2386 1 14.0602 1 13.7038V2.33333C1 1.6 1.6 1 2.33333 1Z\"\n        className=\"icon-fill\"\n      />\n    </svg>\n  );\n};\n\nconst IconReply = () => {\n  return (\n    <svg\n      width=\"21\"\n      height=\"15\"\n      viewBox=\"0 0 21 15\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className=\"icon-reply\">\n      <path\n        d=\"M12.9742 0.777496C13.1645 0.968167 13.2801 1.2208 13.2999 1.48945C13.3197 1.75811 13.2425 2.02496 13.0822 2.2415L12.9742 2.3675L9.59024 5.75H11.3752C16.8517 5.75 20.5732 8.8655 20.7442 13.3055L20.7502 13.625C20.7502 13.9234 20.6317 14.2095 20.4207 14.4205C20.2098 14.6315 19.9236 14.75 19.6252 14.75C19.3269 14.75 19.0407 14.6315 18.8297 14.4205C18.6188 14.2095 18.5002 13.9234 18.5002 13.625C18.5002 10.433 15.9622 8.138 11.7607 8.006L11.3752 8H9.59024L12.9742 11.384C13.1755 11.5847 13.2934 11.8542 13.304 12.1383C13.3147 12.4224 13.2175 12.7 13.0318 12.9153C12.8462 13.1305 12.5859 13.2676 12.3033 13.2988C12.0208 13.33 11.7369 13.2531 11.5087 13.0835L11.3827 12.974L6.07874 7.6715L5.97674 7.5515L5.91674 7.4645L5.84174 7.322L5.79224 7.184L5.76974 7.0835L5.75474 6.9905L5.75024 6.8495L5.75624 6.761L5.77874 6.62L5.82374 6.47L5.89424 6.323L5.94674 6.2405L5.98574 6.1865L6.07874 6.08L11.3827 0.777496C11.5937 0.566821 11.8796 0.448486 12.1777 0.448486C12.4759 0.448486 12.7618 0.566821 12.9727 0.777496H12.9742ZM0.830237 6.08L6.08024 0.829997C6.28097 0.628707 6.55047 0.510876 6.83455 0.500194C7.11862 0.489511 7.39621 0.58677 7.6115 0.772415C7.82679 0.958061 7.96381 1.21833 7.99502 1.50088C8.02623 1.78344 7.94932 2.06734 7.77974 2.2955L7.67024 2.4215L3.21524 6.8765L7.67024 11.33C7.86967 11.531 7.98598 11.7998 7.99594 12.0828C8.00591 12.3658 7.9088 12.6421 7.724 12.8566C7.53919 13.0712 7.28029 13.2081 6.99896 13.2402C6.71762 13.2722 6.43455 13.197 6.20624 13.0295L6.08024 12.9215L0.830237 7.6715C0.639317 7.48093 0.523228 7.2281 0.503129 6.9591C0.483029 6.69009 0.560257 6.42282 0.720736 6.206L0.830237 6.08L6.08024 0.829997L0.830237 6.08V6.08Z\"\n        className=\"icon-fill\"\n      />\n    </svg>\n  );\n};\n\nconst IconEditPencil = () => {\n  return (\n    <svg\n      width=\"13\"\n      height=\"13\"\n      viewBox=\"0 0 13 13\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className=\"icon-edit-pencil\">\n      <path\n        d=\"M10.2415 5.58589L4.26946 11.5589C3.94911 11.879 3.54783 12.1061 3.10846 12.2159L0.817463 12.7889C0.733587 12.81 0.645663 12.809 0.562284 12.786C0.478905 12.763 0.402922 12.7188 0.341759 12.6576C0.280597 12.5964 0.236347 12.5204 0.213334 12.4371C0.190321 12.3537 0.189332 12.2658 0.210463 12.1819L0.783463 9.89189C0.893379 9.45206 1.12083 9.05039 1.44146 8.72989L7.41246 2.75689L10.2415 5.58589ZM11.6565 1.34389C12.0314 1.71894 12.242 2.22756 12.242 2.75789C12.242 3.28821 12.0314 3.79683 11.6565 4.17189L10.9485 4.87789L8.11946 2.04989L8.82746 1.34389C9.01319 1.15808 9.2337 1.01069 9.47641 0.910131C9.71911 0.809571 9.97925 0.757812 10.242 0.757812C10.5047 0.757812 10.7648 0.809571 11.0075 0.910131C11.2502 1.01069 11.4707 1.15808 11.6565 1.34389Z\"\n        className=\"icon-fill\"\n      />\n    </svg>\n  );\n};\n\nconst IconAdd = () => {\n  return (\n    <svg width=\"12\" height=\"12\" viewBox=\"0 0 12 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" className=\"icon-add\">\n      <path\n        d=\"M0 6C-1.17411e-08 5.21207 0.155195 4.43185 0.456723 3.7039C0.758251 2.97595 1.20021 2.31451 1.75736 1.75736C2.31451 1.20021 2.97595 0.758251 3.7039 0.456723C4.43185 0.155195 5.21207 0 6 0C6.78793 0 7.56815 0.155195 8.2961 0.456723C9.02405 0.758251 9.68549 1.20021 10.2426 1.75736C10.7998 2.31451 11.2417 2.97595 11.5433 3.7039C11.8448 4.43185 12 5.21207 12 6C12 7.5913 11.3679 9.11742 10.2426 10.2426C9.11742 11.3679 7.5913 12 6 12C4.4087 12 2.88258 11.3679 1.75736 10.2426C0.632141 9.11742 2.37122e-08 7.5913 0 6ZM6 3C5.86739 3 5.74021 3.05268 5.64645 3.14645C5.55268 3.24021 5.5 3.36739 5.5 3.5V5.5H3.5C3.36739 5.5 3.24021 5.55268 3.14645 5.64645C3.05268 5.74021 3 5.86739 3 6C3 6.13261 3.05268 6.25979 3.14645 6.35355C3.24021 6.44732 3.36739 6.5 3.5 6.5H5.5V8.5C5.5 8.63261 5.55268 8.75979 5.64645 8.85355C5.74021 8.94732 5.86739 9 6 9C6.13261 9 6.25979 8.94732 6.35355 8.85355C6.44732 8.75979 6.5 8.63261 6.5 8.5V6.5H8.5C8.63261 6.5 8.75979 6.44732 8.85355 6.35355C8.94732 6.25979 9 6.13261 9 6C9 5.86739 8.94732 5.74021 8.85355 5.64645C8.75979 5.55268 8.63261 5.5 8.5 5.5H6.5V3.5C6.5 3.36739 6.44732 3.24021 6.35355 3.14645C6.25979 3.05268 6.13261 3 6 3Z\"\n        className=\"icon-fill\"\n      />\n    </svg>\n  );\n};\n\nconst IconDownload = () => {\n  return (\n    <svg\n      width=\"12\"\n      height=\"14\"\n      viewBox=\"0 0 12 14\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className=\"icon-download\">\n      <path\n        d=\"M1.49977 12H10.4998C10.6898 12.0001 10.8727 12.0722 11.0116 12.202C11.1504 12.3317 11.2348 12.5093 11.2478 12.6989C11.2607 12.8885 11.2013 13.0759 11.0813 13.2233C10.9614 13.3707 10.79 13.4671 10.6018 13.493L10.4998 13.5H1.49977C1.30975 13.4999 1.12683 13.4278 0.98798 13.298C0.849129 13.1683 0.764697 12.9907 0.751745 12.8011C0.738793 12.6115 0.798287 12.4241 0.918204 12.2767C1.03812 12.1293 1.20952 12.0329 1.39777 12.007L1.49977 12H10.4998H1.49977ZM5.89777 0.00699997L5.99977 0C6.18101 7.6429e-06 6.35611 0.0656428 6.4927 0.184767C6.62929 0.303892 6.71812 0.468446 6.74277 0.648L6.74977 0.75V8.438L9.00477 6.184C9.13194 6.05687 9.30056 5.97966 9.47989 5.96645C9.65922 5.95323 9.83734 6.00489 9.98177 6.112L10.0658 6.184C10.1929 6.31117 10.2701 6.47979 10.2833 6.65912C10.2965 6.83845 10.2449 7.01657 10.1378 7.161L10.0658 7.245L6.52977 10.78C6.40278 10.907 6.23443 10.9842 6.05532 10.9976C5.87621 11.011 5.69824 10.9597 5.55377 10.853L5.46977 10.78L1.93377 7.245C1.79958 7.11118 1.72102 6.93151 1.7139 6.74213C1.70678 6.55274 1.77162 6.36768 1.89538 6.22416C2.01915 6.08063 2.19266 5.98928 2.38103 5.96848C2.5694 5.94767 2.75867 5.99895 2.91077 6.112L2.99477 6.184L5.24977 8.44V0.75C5.24978 0.568762 5.31541 0.393658 5.43454 0.257069C5.55366 0.120481 5.71822 0.0316483 5.89777 0.00699997L5.99977 0L5.89777 0.00699997Z\"\n        className=\"icon-fill\"\n      />\n    </svg>\n  );\n};\n\nconst IconFilter = () => {\n  return (\n    <svg\n      width=\"12\"\n      height=\"10\"\n      viewBox=\"0 0 12 10\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className=\"icon-filter\">\n      <path\n        d=\"M4.49983 8.00061H7.50027C7.69145 8.00082 7.87535 8.07403 8.01437 8.20528C8.15339 8.33652 8.23705 8.5159 8.24826 8.70676C8.25946 8.89762 8.19736 9.08555 8.07465 9.23216C7.95194 9.37878 7.77788 9.473 7.58803 9.49558L7.50027 9.50083H4.49983C4.30864 9.50062 4.12475 9.42741 3.98573 9.29616C3.8467 9.16492 3.76304 8.98554 3.75184 8.79468C3.74063 8.60382 3.80273 8.41589 3.92544 8.26928C4.04815 8.12266 4.22222 8.02844 4.41207 8.00586L4.49983 8.00061H7.50027H4.49983ZM2.99961 4.25006H9.00049C9.19167 4.25027 9.37556 4.32348 9.51459 4.45473C9.65361 4.58597 9.73727 4.76535 9.74847 4.95621C9.75968 5.14707 9.69758 5.335 9.57487 5.48162C9.45216 5.62823 9.2781 5.72245 9.08825 5.74503L9.00049 5.75028H2.99961C2.80842 5.75007 2.62453 5.67686 2.48551 5.54561C2.34648 5.41437 2.26282 5.23499 2.25162 5.04413C2.24042 4.85327 2.30251 4.66534 2.42522 4.51873C2.54793 4.37211 2.722 4.27789 2.91184 4.25531L2.99961 4.25006H9.00049H2.99961ZM0.749279 0.499512H11.2508C11.442 0.499724 11.6259 0.572932 11.7649 0.704178C11.9039 0.835424 11.9876 1.0148 11.9988 1.20566C12.01 1.39652 11.9479 1.58446 11.8252 1.73107C11.7025 1.87768 11.5284 1.9719 11.3386 1.99448L11.2508 1.99973H0.749279C0.558091 1.99952 0.374199 1.92631 0.235177 1.79507C0.0961545 1.66382 0.0124947 1.48444 0.00129022 1.29358C-0.00991426 1.10272 0.0521825 0.914788 0.174893 0.768177C0.297604 0.621565 0.471666 0.527344 0.661516 0.504762L0.749279 0.499512H11.2508H0.749279Z\"\n        className=\"icon-fill\"\n      />\n    </svg>\n  );\n};\n\nconst CloseIconModal = () => {\n  return (\n    <div style={{ padding: '5px 5px 5px 5px' }}>\n      <svg width=\"12\" height=\"12\" viewBox=\"0 0 12 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n          d=\"M0.396914 0.553943L0.469914 0.469943C0.596902 0.342925 0.765256 0.265697 0.944365 0.252301C1.12347 0.238904 1.30144 0.290229 1.44591 0.396943L1.52991 0.469943L5.99991 4.93894L10.4699 0.468943C10.5391 0.397344 10.6219 0.340247 10.7134 0.300984C10.805 0.261721 10.9034 0.241078 11.003 0.24026C11.1026 0.239442 11.2013 0.258465 11.2935 0.296219C11.3856 0.333973 11.4693 0.389702 11.5397 0.460154C11.6101 0.530607 11.6657 0.614372 11.7034 0.706561C11.7411 0.798751 11.76 0.897519 11.7591 0.997103C11.7582 1.09669 11.7375 1.19509 11.6981 1.28658C11.6588 1.37806 11.6016 1.46079 11.5299 1.52994L7.06091 5.99994L11.5309 10.4699C11.6578 10.5971 11.7348 10.7655 11.748 10.9446C11.7613 11.1237 11.7098 11.3016 11.6029 11.4459L11.5299 11.5299C11.4029 11.657 11.2346 11.7342 11.0555 11.7476C10.8764 11.761 10.6984 11.7097 10.5539 11.6029L10.4699 11.5299L5.99991 7.06094L1.52991 11.5309C1.3884 11.6675 1.19891 11.743 1.00226 11.7412C0.805615 11.7394 0.617542 11.6604 0.47855 11.5213C0.339559 11.3822 0.260771 11.194 0.259156 10.9974C0.25754 10.8007 0.333227 10.6113 0.469914 10.4699L4.93891 5.99994L0.468914 1.52994C0.342046 1.40283 0.265002 1.23441 0.251789 1.0553C0.238577 0.876199 0.290072 0.698298 0.396914 0.553943L0.469914 0.469943L0.396914 0.553943Z\"\n          fill=\"#3C4252\"\n        />\n      </svg>\n    </div>\n  );\n};\nconst UpVector = () => {\n  return (\n    <svg\n      width=\"8\"\n      height=\"6\"\n      viewBox=\"0 0 8 6\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      style={{ marginBottom: '5px', marginLeft: '5px' }}>\n      <path\n        d=\"M1.07612 4.38279C1.15186 4.56547 1.28007 4.7216 1.44454 4.83142C1.60901 4.94124 1.80235 4.99984 2.00012 4.99979H6.00012C6.19787 4.99974 6.39116 4.94107 6.55557 4.83119C6.71998 4.7213 6.84812 4.56514 6.92379 4.38244C6.99946 4.19974 7.01927 3.99871 6.9807 3.80475C6.94213 3.6108 6.84693 3.43264 6.70712 3.29279L4.70712 1.29279C4.51959 1.10532 4.26528 1 4.00012 1C3.73495 1 3.48064 1.10532 3.29312 1.29279L1.29312 3.29279C1.15318 3.43263 1.05787 3.61084 1.01925 3.80486C0.98062 3.99889 1.00041 4.20001 1.07612 4.38279Z\"\n        fill=\"#10AC84\"\n      />\n      <path\n        d=\"M0.614174 4.57412L0.614242 4.57429C0.727858 4.84832 0.920176 5.0825 1.16688 5.24724C1.41355 5.41195 1.70351 5.49984 2.00012 5.49979C2.00016 5.49979 2.0002 5.49979 2.00024 5.49979H6.00012H6.00022C6.29685 5.49972 6.58679 5.41172 6.83341 5.24689C7.08002 5.08206 7.27223 4.84782 7.38574 4.57377C7.49925 4.29972 7.52895 3.99817 7.4711 3.70724C7.41325 3.41631 7.27044 3.14906 7.06072 2.93929L7.06067 2.93923L5.06067 0.939233L5.06062 0.93918C4.77932 0.657973 4.39786 0.5 4.00012 0.5C3.60237 0.5 3.22091 0.657973 2.93962 0.93918L2.93956 0.939233L0.939673 2.93912C0.939636 2.93916 0.939599 2.9392 0.939563 2.93923C0.729724 3.14898 0.586801 3.41625 0.52887 3.70724C0.47093 3.99828 0.500616 4.29996 0.614174 4.57412Z\"\n        stroke=\"white\"\n        strokeOpacity=\"0.5\"\n      />\n    </svg>\n  );\n};\n\nconst LogOutSVG = () => {\n  return (\n    <svg width=\"16\" height=\"16\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        d=\"M8.39407 9.84439C8.17915 9.97872 8.07168 10.1936 8.07168 10.4354C8.04482 11.3757 7.29257 12.1011 6.37913 12.1011C5.49255 12.1011 4.60598 12.1011 3.74627 12.1011C3.58507 12.1011 3.42388 12.0743 3.26268 12.0205C2.48357 11.7787 2.02685 11.134 2.02685 10.328C2.02685 8.79662 2.02685 7.29213 2.02685 5.76077C2.02685 5.03539 2.02685 4.33687 2.02685 3.61149C2.02685 2.67118 2.77909 1.91894 3.7194 1.91894C4.60598 1.91894 5.46569 1.91894 6.35226 1.91894C6.51346 1.91894 6.67465 1.9458 6.83585 1.99954C7.5881 2.24133 8.01795 2.83238 8.07168 3.61149C8.07168 3.69209 8.09855 3.77269 8.12541 3.85329C8.23288 4.14881 8.5284 4.31001 8.82393 4.25628C9.11945 4.20254 9.33438 3.93388 9.33438 3.63836C9.33438 3.2891 9.28065 2.96671 9.17319 2.64432C8.74333 1.46222 7.66869 0.683105 6.40599 0.683105C5.51942 0.683105 4.60598 0.683105 3.7194 0.683105C3.34328 0.683105 2.99402 0.763703 2.67163 0.898033C1.5164 1.38162 0.791016 2.42939 0.791016 3.69209C0.791016 4.79359 0.791016 5.92196 0.791016 7.02347C0.791016 8.15184 0.791016 9.25334 0.791016 10.3817C0.791016 10.6504 0.817881 10.919 0.898479 11.1608C1.24774 12.4504 2.40297 13.3638 3.74627 13.3638C4.63284 13.3638 5.51942 13.3638 6.40599 13.3638C7.2657 13.3638 7.99108 13.0414 8.55527 12.4235C9.09259 11.8593 9.36125 11.1608 9.36125 10.3817C9.33438 9.89812 8.79706 9.6026 8.39407 9.84439Z\"\n        fill=\"#305FF5\"\n      />\n      <path\n        d=\"M13.7668 6.48611C13.3638 6.16372 12.9609 5.84133 12.5579 5.51894C12.1011 5.16968 11.6713 4.79356 11.2146 4.4443C10.919 4.20251 10.4892 4.2831 10.2743 4.6055C10.1131 4.87416 10.1668 5.22341 10.4086 5.43834C10.7579 5.73387 11.1071 6.00252 11.4564 6.29805C11.4832 6.32492 11.5101 6.35178 11.537 6.37865V6.40551C11.5101 6.40551 11.4564 6.40551 11.4295 6.40551C10.1131 6.40551 8.79664 6.40551 7.48021 6.40551C7.10408 6.40551 6.72796 6.40551 6.32497 6.40551C5.89512 6.40551 5.4384 6.40551 5.00854 6.40551C4.65928 6.40551 4.41749 6.70104 4.39062 7.0503C4.39062 7.37269 4.71302 7.66821 5.00854 7.66821C5.22347 7.66821 5.46526 7.66821 5.68019 7.66821C6.02945 7.66821 6.3787 7.66821 6.72796 7.66821C7.07722 7.66821 7.42648 7.66821 7.77573 7.66821C8.20559 7.66821 8.60858 7.66821 9.03843 7.66821C9.49515 7.66821 9.95187 7.66821 10.4086 7.66821C10.731 7.66821 11.0265 7.66821 11.3489 7.66821C11.4026 7.66821 11.4564 7.66821 11.537 7.69508C11.5101 7.72194 11.5101 7.74881 11.4832 7.74881C11.1071 8.04434 10.731 8.33986 10.3817 8.63539C10.2205 8.76972 10.1399 8.98464 10.1668 9.19957C10.2474 9.71002 10.8116 9.89809 11.1877 9.57569C12.0206 8.90405 12.8803 8.20553 13.7131 7.53388C13.7668 7.48015 13.8474 7.42642 13.8743 7.34582C14.0892 7.0503 14.0086 6.70104 13.7668 6.48611Z\"\n        fill=\"#305FF5\"\n      />\n    </svg>\n  );\n};\n\nconst DeleteCompanySVG = () => {\n  return (\n    <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M10 4H13C13.1326 4 13.2598 4.05268 13.3536 4.14645C13.4473 4.24021 13.5 4.36739 13.5 4.5C13.5 4.63261 13.4473 4.75979 13.3536 4.85355C13.2598 4.94732 13.1326 5 13 5H12.447L11.695 11.776C11.6271 12.3875 11.336 12.9525 10.8775 13.3629C10.419 13.7732 9.8253 14.0001 9.21 14H6.79C6.1747 14.0001 5.58098 13.7732 5.12249 13.3629C4.664 12.9525 4.37293 12.3875 4.305 11.776L3.552 5H3C2.86739 5 2.74021 4.94732 2.64645 4.85355C2.55268 4.75979 2.5 4.63261 2.5 4.5C2.5 4.36739 2.55268 4.24021 2.64645 4.14645C2.74021 4.05268 2.86739 4 3 4H6C6 3.46957 6.21071 2.96086 6.58579 2.58579C6.96086 2.21071 7.46957 2 8 2C8.53043 2 9.03914 2.21071 9.41421 2.58579C9.78929 2.96086 10 3.46957 10 4ZM8 3C7.73478 3 7.48043 3.10536 7.29289 3.29289C7.10536 3.48043 7 3.73478 7 4H9C9 3.73478 8.89464 3.48043 8.70711 3.29289C8.51957 3.10536 8.26522 3 8 3ZM6.5 7V11C6.5 11.1326 6.55268 11.2598 6.64645 11.3536C6.74021 11.4473 6.86739 11.5 7 11.5C7.13261 11.5 7.25979 11.4473 7.35355 11.3536C7.44732 11.2598 7.5 11.1326 7.5 11V7C7.5 6.86739 7.44732 6.74021 7.35355 6.64645C7.25979 6.55268 7.13261 6.5 7 6.5C6.86739 6.5 6.74021 6.55268 6.64645 6.64645C6.55268 6.74021 6.5 6.86739 6.5 7ZM9.35355 6.64645C9.25979 6.55268 9.13261 6.5 9 6.5C8.86739 6.5 8.74021 6.55268 8.64645 6.64645C8.55268 6.74021 8.5 6.86739 8.5 7V11C8.5 11.1326 8.55268 11.2598 8.64645 11.3536C8.74021 11.4473 8.86739 11.5 9 11.5C9.13261 11.5 9.25979 11.4473 9.35355 11.3536C9.44732 11.2598 9.5 11.1326 9.5 11V7C9.5 6.86739 9.44732 6.74021 9.35355 6.64645Z\"\n        fill=\"#3C4252\"\n      />\n    </svg>\n  );\n};\n\nconst PDFSVG = () => {\n  return (\n    <svg width=\"18\" height=\"20\" viewBox=\"0 0 18 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        d=\"M9 0V6C8.99984 6.50458 9.19041 6.99057 9.5335 7.36055C9.87659 7.73053 10.3468 7.95716 10.85 7.995L11 8H17V8.668C17.546 8.928 17.936 9.461 17.993 10.091L18 10.25V15.75C18 16.0556 17.92 16.3559 17.7679 16.621C17.6158 16.8861 17.3969 17.1068 17.133 17.261L17 17.331V18C17.0002 18.5046 16.8096 18.9906 16.4665 19.3605C16.1234 19.7305 15.6532 19.9572 15.15 19.995L15 20H3C2.49542 20.0002 2.00943 19.8096 1.63945 19.4665C1.26947 19.1234 1.04284 18.6532 1.005 18.15L1 18V17.332C0.72511 17.2015 0.488962 17.0017 0.314834 16.7522C0.140706 16.5026 0.0346088 16.212 0.00699997 15.909L0 15.75V10.25C0 9.606 0.348 9.043 0.867 8.739L1 8.669V2C0.99984 1.49542 1.19041 1.00943 1.5335 0.639452C1.87659 0.269471 2.34684 0.0428433 2.85 0.00500011L3 0H9ZM16.25 10H1.75C1.6837 10 1.62011 10.0263 1.57322 10.0732C1.52634 10.1201 1.5 10.1837 1.5 10.25V15.75C1.5 15.888 1.612 16 1.75 16H16.25C16.3163 16 16.3799 15.9737 16.4268 15.9268C16.4737 15.8799 16.5 15.8163 16.5 15.75V10.25C16.5 10.1837 16.4737 10.1201 16.4268 10.0732C16.3799 10.0263 16.3163 10 16.25 10ZM5.5 11.002C5.88723 10.999 6.26061 11.146 6.54199 11.412C6.82338 11.678 6.99097 12.0426 7.0097 12.4294C7.02844 12.8162 6.89686 13.1952 6.6425 13.4872C6.38813 13.7792 6.03071 13.9615 5.645 13.996L5.5 14.003H5.003V14.503C5.00298 14.6279 4.95624 14.7482 4.87198 14.8403C4.78772 14.9325 4.67204 14.9898 4.54768 15.0009C4.42332 15.0121 4.29929 14.9763 4.19997 14.9006C4.10066 14.825 4.03325 14.7149 4.011 14.592L4.003 14.502V11.502C4.00296 11.385 4.04397 11.2716 4.11889 11.1817C4.19381 11.0918 4.29789 11.0311 4.413 11.01L4.503 11.002H5.5ZM14.003 11.002C14.1356 11.002 14.2628 11.0547 14.3566 11.1484C14.4503 11.2422 14.503 11.3694 14.503 11.502C14.503 11.6346 14.4503 11.7618 14.3566 11.8556C14.2628 11.9493 14.1356 12.002 14.003 12.002H12.997L12.996 13.004H14.003C14.1356 13.004 14.2628 13.0567 14.3566 13.1504C14.4503 13.2442 14.503 13.3714 14.503 13.504C14.503 13.6366 14.4503 13.7638 14.3566 13.8576C14.2628 13.9513 14.1356 14.004 14.003 14.004H12.996L12.998 14.501C12.9981 14.5667 12.9853 14.6317 12.9603 14.6924C12.9353 14.7531 12.8986 14.8083 12.8523 14.8548C12.7587 14.9488 12.6316 15.0017 12.499 15.002C12.3664 15.0023 12.2391 14.9498 12.1452 14.8563C12.0512 14.7627 11.9983 14.6356 11.998 14.503L11.995 13.503L11.998 11.501C11.9983 11.3686 12.0511 11.2416 12.1448 11.1481C12.2385 11.0545 12.3656 11.002 12.498 11.002H14.003ZM8.998 11.002C9.51689 11 10.0163 11.1997 10.3907 11.5589C10.765 11.9182 10.9852 12.4089 11.0045 12.9274C11.0238 13.446 10.8409 13.9517 10.4943 14.3379C10.1477 14.724 9.6646 14.9604 9.147 14.997L8.997 15.002H8.5C8.38297 15.002 8.26964 14.961 8.17974 14.8861C8.08984 14.8112 8.02907 14.7071 8.008 14.592L8 14.502V11.502C7.99996 11.385 8.04097 11.2716 8.11589 11.1817C8.19081 11.0918 8.29489 11.0311 8.41 11.01L8.5 11.002H8.998ZM9 12.002V14.002C9.2548 14.0015 9.49978 13.9037 9.68492 13.7286C9.87007 13.5536 9.98141 13.3145 9.99621 13.0601C10.011 12.8057 9.92817 12.5553 9.76458 12.36C9.601 12.1646 9.36901 12.0391 9.116 12.009L9 12.002ZM5.5 12.002H5.003V13.002H5.5C5.62495 13.0022 5.74545 12.9557 5.83778 12.8715C5.93012 12.7873 5.98759 12.6716 5.99888 12.5472C6.01017 12.4227 5.97446 12.2986 5.89878 12.1992C5.8231 12.0997 5.71295 12.0323 5.59 12.01L5.5 12.002ZM10.5 0.5L16.5 6.5H11C10.8674 6.5 10.7402 6.44732 10.6464 6.35355C10.5527 6.25979 10.5 6.13261 10.5 6V0.5Z\"\n        fill=\"#F65747\"\n      />\n    </svg>\n  );\n};\n\nconst DOCSSVG = () => {\n  return (\n    <svg width=\"18\" height=\"20\" viewBox=\"0 0 18 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        d=\"M8.99977 0V6C8.99879 6.50391 9.18808 6.98962 9.52977 7.36C9.87444 7.72913 10.346 7.95419 10.8498 7.99H16.9998V8.66C17.2774 8.78668 17.5164 8.98497 17.6922 9.23451C17.8679 9.48406 17.9741 9.77587 17.9998 10.08V15.74C18.0007 16.0452 17.9214 16.3452 17.7698 16.61C17.6207 16.8791 17.3989 17.1009 17.1298 17.25L16.9998 17.32V18C17.0007 18.5039 16.8115 18.9896 16.4698 19.36C16.1267 19.7328 15.6549 19.9616 15.1498 20H2.99977C2.49585 20.001 2.01014 19.8117 1.63977 19.47C1.26694 19.1269 1.03821 18.6552 0.999766 18.15V17.33C0.725235 17.1969 0.48812 16.9976 0.309766 16.75C0.137214 16.5015 0.0336924 16.2116 0.00976562 15.91V10.25C0.0102283 9.94424 0.0907939 9.64394 0.243438 9.379C0.396081 9.11407 0.615475 8.89375 0.879766 8.74L0.999766 8.67V2C0.998793 1.49609 1.18808 1.01038 1.52977 0.64C1.87282 0.267176 2.34459 0.0384414 2.84977 0H8.99977ZM16.2498 10H1.74977C1.71656 9.99858 1.68342 10.0041 1.65245 10.0161C1.62147 10.0282 1.59335 10.0466 1.56984 10.0701C1.54634 10.0936 1.52797 10.1217 1.51591 10.1527C1.50385 10.1837 1.49835 10.2168 1.49977 10.25V15.75C1.49977 15.8163 1.5261 15.8799 1.57299 15.9268C1.61987 15.9737 1.68346 16 1.74977 16H16.2498C16.283 16.0014 16.3161 15.9959 16.3471 15.9839C16.3781 15.9718 16.4062 15.9534 16.4297 15.9299C16.4532 15.9064 16.4716 15.8783 16.4836 15.8473C16.4957 15.8163 16.5012 15.7832 16.4998 15.75V10.25C16.5012 10.2168 16.4957 10.1837 16.4836 10.1527C16.4716 10.1217 16.4532 10.0936 16.4297 10.0701C16.4062 10.0466 16.3781 10.0282 16.3471 10.0161C16.3161 10.0041 16.283 9.99858 16.2498 10ZM10.4998 0.5L16.4998 6.5H10.9998C10.868 6.49744 10.7423 6.44394 10.649 6.35072C10.5558 6.2575 10.5023 6.13181 10.4998 6V0.5Z\"\n        fill=\"#305FF5\"\n      />\n    </svg>\n  );\n};\nconst XLSXSVG = () => {\n  return (\n    <svg width=\"34\" height=\"12\" viewBox=\"0 0 34 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        d=\"M4.40234 4.86133L6.78809 1.04688H8.33301L5.18848 5.98242L8.4082 11H6.84961L4.40234 7.11719L1.94141 11H0.389648L3.61621 5.98242L0.464844 1.04688H2.00293L4.40234 4.86133ZM11.252 9.92676H15.9688V11H9.93262V1.04688H11.252V9.92676ZM20.3984 6.56348C19.2728 6.23991 18.4525 5.84342 17.9375 5.37402C17.4271 4.90007 17.1719 4.31673 17.1719 3.62402C17.1719 2.84017 17.484 2.19303 18.1084 1.68262C18.7373 1.16764 19.5531 0.910156 20.5557 0.910156C21.2393 0.910156 21.8477 1.04232 22.3809 1.30664C22.9186 1.57096 23.3333 1.93555 23.625 2.40039C23.9212 2.86523 24.0693 3.37337 24.0693 3.9248H22.75C22.75 3.32324 22.5586 2.85156 22.1758 2.50977C21.793 2.16341 21.2529 1.99023 20.5557 1.99023C19.9085 1.99023 19.4027 2.13379 19.0381 2.4209C18.6781 2.70345 18.498 3.09766 18.498 3.60352C18.498 4.00911 18.6689 4.35319 19.0107 4.63574C19.3571 4.91374 19.9427 5.16895 20.7676 5.40137C21.597 5.63379 22.2441 5.89128 22.709 6.17383C23.1784 6.45182 23.5247 6.77767 23.748 7.15137C23.9759 7.52507 24.0898 7.96484 24.0898 8.4707C24.0898 9.27734 23.7754 9.92448 23.1465 10.4121C22.5176 10.8952 21.6768 11.1367 20.624 11.1367C19.9404 11.1367 19.3024 11.0068 18.71 10.7471C18.1175 10.4827 17.6595 10.1227 17.3359 9.66699C17.0169 9.21126 16.8574 8.69401 16.8574 8.11523H18.1768C18.1768 8.7168 18.3978 9.19303 18.8398 9.54395C19.2865 9.8903 19.8812 10.0635 20.624 10.0635C21.3167 10.0635 21.8477 9.9222 22.2168 9.63965C22.5859 9.3571 22.7705 8.97201 22.7705 8.48438C22.7705 7.99674 22.5996 7.62077 22.2578 7.35645C21.916 7.08757 21.2962 6.82324 20.3984 6.56348ZM29.0254 4.86133L31.4111 1.04688H32.9561L29.8115 5.98242L33.0312 11H31.4727L29.0254 7.11719L26.5645 11H25.0127L28.2393 5.98242L25.0879 1.04688H26.626L29.0254 4.86133Z\"\n        fill=\"#3C4252\"\n      />\n    </svg>\n  );\n};\n\nconst SuffixShedulleCallIcon = () => {\n  return (\n    <svg width=\"15\" height=\"15\" viewBox=\"0 0 10 6\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        d=\"M0.200094 0.740094C0.267064 0.667859 0.347607 0.609524 0.437123 0.56842C0.52664 0.527316 0.623376 0.504248 0.721809 0.500533C0.820242 0.496819 0.918442 0.512531 1.0108 0.546772C1.10316 0.581013 1.18787 0.633112 1.26009 0.700094L5.00009 4.22709L8.74009 0.700094C8.81232 0.63312 8.89703 0.581028 8.98939 0.546792C9.08175 0.512556 9.17995 0.496847 9.27838 0.500561C9.37681 0.504275 9.47354 0.527341 9.56306 0.56844C9.65258 0.609539 9.73312 0.667867 9.80009 0.740094C9.86707 0.812321 9.91916 0.897033 9.9534 0.989392C9.98763 1.08175 10.0033 1.17995 9.99963 1.27838C9.99591 1.37681 9.97285 1.47354 9.93175 1.56306C9.89065 1.65258 9.83232 1.73312 9.76009 1.80009L5.51009 5.80009C5.37141 5.92872 5.18924 6.00019 5.00009 6.00019C4.81095 6.00019 4.62878 5.92872 4.49009 5.80009L0.240094 1.80009C0.167859 1.73313 0.109524 1.65258 0.06842 1.56307C0.0273159 1.47355 0.00424789 1.37681 0.000533453 1.27838C-0.00318098 1.17995 0.012531 1.08175 0.0467719 0.989387C0.0810128 0.897027 0.133112 0.812317 0.200094 0.740094Z\"\n        fill=\"#3C4252\"\n      />\n    </svg>\n  );\n};\n\nconst NoFoundDocSVG = () => {\n  return (\n    <svg width=\"48\" height=\"48\" viewBox=\"0 0 48 48\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        d=\"M13.2 4H25.2C25.3872 3.99994 25.5686 4.06487 25.7124 4.18349C25.8563 4.30211 25.9535 4.4669 25.9872 4.64917L26 4.79167V16.6667C26 18.3355 27.3056 19.7035 28.96 19.8254L29.2 19.8333H41.2C41.3872 19.8333 41.5686 19.8982 41.7124 20.0168C41.8563 20.1354 41.9535 20.3002 41.9872 20.4825L42 20.625V38.8333C41.9999 39.6321 41.6948 40.4014 41.146 40.9871C40.5971 41.5729 39.8449 41.9318 39.04 41.9921L38.8 42H13.2C12.3928 41.9999 11.6154 41.698 11.0235 41.1549C10.4316 40.6117 10.0689 39.8674 10.008 39.0708L10 38.8333V7.16667C10 5.49783 11.3056 4.12983 12.96 4.00792L13.2 4H25.2H13.2ZM28.4 16.6667V5.36483C28.3999 5.32417 28.4104 5.28417 28.4304 5.24866C28.4504 5.21315 28.4793 5.18332 28.5143 5.16203C28.5493 5.14073 28.5893 5.12869 28.6303 5.12705C28.6714 5.12541 28.7122 5.13423 28.7488 5.15267L28.8096 5.197L40.7904 17.053C40.8195 17.0818 40.8407 17.1174 40.8519 17.1566C40.8631 17.1958 40.8639 17.2372 40.8542 17.2768C40.8446 17.3164 40.8248 17.3529 40.7968 17.3827C40.7689 17.4126 40.7336 17.4348 40.6944 17.4473L40.6208 17.4583H29.2C29.0128 17.4584 28.8314 17.3935 28.6876 17.2748C28.5437 17.1562 28.4465 16.9914 28.4128 16.8092L28.4 16.6667V5.36483V16.6667Z\"\n        fill=\"#C0C4CB\"\n      />\n      <rect\n        x=\"8.82837\"\n        y=\"3.54297\"\n        width=\"53.6543\"\n        height=\"4\"\n        rx=\"2\"\n        transform=\"rotate(45 8.82837 3.54297)\"\n        fill=\"white\"\n      />\n      <rect\n        x=\"3.35181\"\n        y=\"3.02344\"\n        width=\"58.4248\"\n        height=\"4\"\n        rx=\"2\"\n        transform=\"rotate(45 3.35181 3.02344)\"\n        fill=\"#C0C4CB\"\n      />\n    </svg>\n  );\n};\nconst ColumnVisibilitySVG = () => {\n  return (\n    <svg width=\"19\" height=\"19\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        d=\"M6.66667 6.68H10V14H6.66667V6.68ZM11.3333 14H13.3333C14.0667 14 14.6667 13.4 14.6667 12.6667V6.66667H11.3333V14ZM13.3333 2H3.33333C2.6 2 2 2.6 2 3.33333V5.33333H14.6667V3.33333C14.6667 2.6 14.0667 2 13.3333 2ZM2 12.6667C2 13.4 2.6 14 3.33333 14H5.33333V6.66667H2V12.6667Z\"\n        fill=\"#305FF5\"\n      />\n    </svg>\n  );\n};\nconst AdminBackToTablesSVG = () => {\n  return (\n    <svg width=\"16\" height=\"14\" viewBox=\"0 0 14 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        d=\"M6.0274 0.450839C6.13573 0.347192 6.28046 0.290272 6.43037 0.292352C6.58028 0.294432 6.72337 0.355346 6.82878 0.461958C6.93419 0.568569 6.99348 0.712339 6.99387 0.862264C6.99425 1.01219 6.9357 1.15626 6.83083 1.26341L2.61598 5.42855H12.716C12.8675 5.42855 13.0129 5.48876 13.12 5.59592C13.2272 5.70308 13.2874 5.84843 13.2874 5.99998C13.2874 6.15153 13.2272 6.29688 13.12 6.40404C13.0129 6.51121 12.8675 6.57141 12.716 6.57141H2.61712L6.83083 10.7348C6.93866 10.8414 6.99975 10.9864 7.00066 11.138C7.00157 11.2896 6.94223 11.4353 6.83569 11.5431C6.72915 11.651 6.58414 11.712 6.43255 11.713C6.28097 11.7139 6.13523 11.6545 6.0274 11.548L0.926261 6.50741C0.859054 6.44098 0.805696 6.36187 0.769279 6.27467C0.732863 6.18747 0.714111 6.09391 0.714111 5.99941C0.714111 5.90491 0.732863 5.81135 0.769279 5.72415C0.805696 5.63695 0.859054 5.55784 0.926261 5.49141L6.0274 0.450839Z\"\n        fill=\"#3C4252\"\n      />\n    </svg>\n  );\n};\n\nconst DeleteAdminSVG = () => {\n  return (\n    <svg\n      style={{ cursor: 'pointer' }}\n      width=\"12\"\n      height=\"12\"\n      viewBox=\"0 0 12 12\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M8 2H11C11.1326 2 11.2598 2.05268 11.3536 2.14645C11.4473 2.24021 11.5 2.36739 11.5 2.5C11.5 2.63261 11.4473 2.75979 11.3536 2.85355C11.2598 2.94732 11.1326 3 11 3H10.447L9.695 9.776C9.62707 10.3875 9.336 10.9525 8.87751 11.3629C8.41902 11.7732 7.8253 12.0001 7.21 12H4.79C4.1747 12.0001 3.58098 11.7732 3.12249 11.3629C2.664 10.9525 2.37293 10.3875 2.305 9.776L1.552 3H1C0.867392 3 0.740215 2.94732 0.646447 2.85355C0.552679 2.75979 0.5 2.63261 0.5 2.5C0.5 2.36739 0.552679 2.24021 0.646447 2.14645C0.740215 2.05268 0.867392 2 1 2H4C4 1.46957 4.21071 0.960859 4.58579 0.585786C4.96086 0.210714 5.46957 0 6 0C6.53043 0 7.03914 0.210714 7.41421 0.585786C7.78929 0.960859 8 1.46957 8 2ZM6 1C5.73478 1 5.48043 1.10536 5.29289 1.29289C5.10536 1.48043 5 1.73478 5 2H7C7 1.73478 6.89464 1.48043 6.70711 1.29289C6.51957 1.10536 6.26522 1 6 1ZM4.5 5V9C4.5 9.13261 4.55268 9.25979 4.64645 9.35355C4.74021 9.44732 4.86739 9.5 5 9.5C5.13261 9.5 5.25979 9.44732 5.35355 9.35355C5.44732 9.25979 5.5 9.13261 5.5 9V5C5.5 4.86739 5.44732 4.74021 5.35355 4.64645C5.25979 4.55268 5.13261 4.5 5 4.5C4.86739 4.5 4.74021 4.55268 4.64645 4.64645C4.55268 4.74021 4.5 4.86739 4.5 5ZM7.35355 4.64645C7.25979 4.55268 7.13261 4.5 7 4.5C6.86739 4.5 6.74021 4.55268 6.64645 4.64645C6.55268 4.74021 6.5 4.86739 6.5 5V9C6.5 9.13261 6.55268 9.25979 6.64645 9.35355C6.74021 9.44732 6.86739 9.5 7 9.5C7.13261 9.5 7.25979 9.44732 7.35355 9.35355C7.44732 9.25979 7.5 9.13261 7.5 9V5C7.5 4.86739 7.44732 4.74021 7.35355 4.64645Z\"\n        fill=\"#3C4252\"\n      />\n    </svg>\n  );\n};\n\nconst CongrCard1 = () => {\n  return (\n    <svg\n      style={{ margin: '21px' }}\n      width=\"34\"\n      height=\"26\"\n      viewBox=\"0 0 34 26\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        d=\"M10.7501 10.9167C10.7501 9.81159 11.1891 8.75179 11.9705 7.97039C12.7519 7.18899 13.8117 6.75 14.9167 6.75C16.0218 6.75 17.0816 7.18899 17.863 7.97039C18.6444 8.75179 19.0834 9.81159 19.0834 10.9167C19.0834 12.0217 18.6444 13.0815 17.863 13.8629C17.0816 14.6443 16.0218 15.0833 14.9167 15.0833C13.8117 15.0833 12.7519 14.6443 11.9705 13.8629C11.1891 13.0815 10.7501 12.0217 10.7501 10.9167ZM14.9167 8.83333C14.3642 8.83333 13.8343 9.05282 13.4436 9.44352C13.0529 9.83422 12.8334 10.3641 12.8334 10.9167C12.8334 11.4692 13.0529 11.9991 13.4436 12.3898C13.8343 12.7805 14.3642 13 14.9167 13C15.4693 13 15.9992 12.7805 16.3899 12.3898C16.7806 11.9991 17.0001 11.4692 17.0001 10.9167C17.0001 10.3641 16.7806 9.83422 16.3899 9.44352C15.9992 9.05282 15.4693 8.83333 14.9167 8.83333Z\"\n        fill=\"#BB6BD9\"\n      />\n      <path\n        d=\"M3.45843 0.5C2.62963 0.5 1.83477 0.829239 1.24872 1.41529C0.662675 2.00134 0.333435 2.79619 0.333435 3.62499V18.2083C0.333435 19.0371 0.662675 19.8319 1.24872 20.418C1.83477 21.004 2.62963 21.3333 3.45843 21.3333H26.375C27.2038 21.3333 27.9987 21.004 28.5847 20.418C29.1708 19.8319 29.5 19.0371 29.5 18.2083V3.62499C29.5 2.79619 29.1708 2.00134 28.5847 1.41529C27.9987 0.829239 27.2038 0.5 26.375 0.5H3.45843ZM2.41676 3.62499C2.41676 3.34873 2.52651 3.08377 2.72186 2.88842C2.91721 2.69307 3.18216 2.58333 3.45843 2.58333H6.58342V4.66666C6.58342 5.21919 6.36393 5.74909 5.97323 6.13979C5.58253 6.53049 5.05263 6.74998 4.50009 6.74998H2.41676V3.62499ZM2.41676 8.83331H4.50009C5.60516 8.83331 6.66496 8.39433 7.44636 7.61293C8.22776 6.83153 8.66675 5.77172 8.66675 4.66666V2.58333H21.1667V4.66666C21.1667 5.77172 21.6057 6.83153 22.3871 7.61293C23.1685 8.39433 24.2283 8.83331 25.3334 8.83331H27.4167V13H25.3334C24.2283 13 23.1685 13.439 22.3871 14.2204C21.6057 15.0018 21.1667 16.0616 21.1667 17.1666V19.25H8.66675V17.1666C8.66675 16.0616 8.22776 15.0018 7.44636 14.2204C6.66496 13.439 5.60516 13 4.50009 13H2.41676V8.83331ZM23.2501 2.58333H26.375C26.6513 2.58333 26.9163 2.69307 27.1116 2.88842C27.307 3.08377 27.4167 3.34873 27.4167 3.62499V6.74998H25.3334C24.7808 6.74998 24.2509 6.53049 23.8602 6.13979C23.4695 5.74909 23.2501 5.21919 23.2501 4.66666V2.58333ZM27.4167 15.0833V18.2083C27.4167 18.4846 27.307 18.7495 27.1116 18.9449C26.9163 19.1402 26.6513 19.25 26.375 19.25H23.2501V17.1666C23.2501 16.6141 23.4695 16.0842 23.8602 15.6935C24.2509 15.3028 24.7808 15.0833 25.3334 15.0833H27.4167ZM6.58342 19.25H3.45843C3.18216 19.25 2.91721 19.1402 2.72186 18.9449C2.52651 18.7495 2.41676 18.4846 2.41676 18.2083V15.0833H4.50009C5.05263 15.0833 5.58253 15.3028 5.97323 15.6935C6.36393 16.0842 6.58342 16.6141 6.58342 17.1666V19.25Z\"\n        fill=\"#BB6BD9\"\n      />\n      <path\n        d=\"M31.5833 18.2083C31.5833 19.5896 31.0345 20.9144 30.0578 21.8911C29.081 22.8679 27.7563 23.4166 26.375 23.4166H4.67709C4.8926 24.0262 5.29185 24.5539 5.81982 24.927C6.34779 25.3001 6.97849 25.5003 7.625 25.5H26.375C28.3088 25.5 30.1635 24.7317 31.5309 23.3643C32.8984 21.9968 33.6666 20.1422 33.6666 18.2083V7.79166C33.6669 7.14515 33.4668 6.51445 33.0936 5.98647C32.7205 5.4585 32.1928 5.05925 31.5833 4.84375V18.2083Z\"\n        fill=\"#BB6BD9\"\n      />\n    </svg>\n  );\n};\nconst CongrCard2 = () => {\n  return (\n    <svg\n      style={{ margin: '21px' }}\n      width=\"30\"\n      height=\"30\"\n      viewBox=\"0 0 30 30\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        d=\"M24.5833 0C26.0199 0 27.3977 0.570683 28.4135 1.5865C29.4293 2.60233 30 3.98008 30 5.41667V24.5833C30 26.0199 29.4293 27.3977 28.4135 28.4135C27.3977 29.4293 26.0199 30 24.5833 30H5.41667C3.98008 30 2.60233 29.4293 1.5865 28.4135C0.570683 27.3977 0 26.0199 0 24.5833V5.41667C0 3.98008 0.570683 2.60233 1.5865 1.5865C2.60233 0.570683 3.98008 0 5.41667 0H24.5833ZM27.5 9.16667H2.5V24.5833C2.5 26.1933 3.80667 27.5 5.41667 27.5H24.5833C25.3569 27.5 26.0987 27.1927 26.6457 26.6457C27.1927 26.0987 27.5 25.3569 27.5 24.5833V9.16667ZM7.91667 19.1667C8.4692 19.1667 8.9991 19.3862 9.38981 19.7769C9.78051 20.1676 10 20.6975 10 21.25C10 21.8025 9.78051 22.3324 9.38981 22.7231C8.9991 23.1138 8.4692 23.3333 7.91667 23.3333C7.36413 23.3333 6.83423 23.1138 6.44353 22.7231C6.05283 22.3324 5.83333 21.8025 5.83333 21.25C5.83333 20.6975 6.05283 20.1676 6.44353 19.7769C6.83423 19.3862 7.36413 19.1667 7.91667 19.1667ZM15 19.1667C15.5525 19.1667 16.0824 19.3862 16.4731 19.7769C16.8638 20.1676 17.0833 20.6975 17.0833 21.25C17.0833 21.8025 16.8638 22.3324 16.4731 22.7231C16.0824 23.1138 15.5525 23.3333 15 23.3333C14.4475 23.3333 13.9176 23.1138 13.5269 22.7231C13.1362 22.3324 12.9167 21.8025 12.9167 21.25C12.9167 20.6975 13.1362 20.1676 13.5269 19.7769C13.9176 19.3862 14.4475 19.1667 15 19.1667ZM7.91667 12.5C8.4692 12.5 8.9991 12.7195 9.38981 13.1102C9.78051 13.5009 10 14.0308 10 14.5833C10 15.1359 9.78051 15.6658 9.38981 16.0565C8.9991 16.4472 8.4692 16.6667 7.91667 16.6667C7.36413 16.6667 6.83423 16.4472 6.44353 16.0565C6.05283 15.6658 5.83333 15.1359 5.83333 14.5833C5.83333 14.0308 6.05283 13.5009 6.44353 13.1102C6.83423 12.7195 7.36413 12.5 7.91667 12.5ZM15 12.5C15.5525 12.5 16.0824 12.7195 16.4731 13.1102C16.8638 13.5009 17.0833 14.0308 17.0833 14.5833C17.0833 15.1359 16.8638 15.6658 16.4731 16.0565C16.0824 16.4472 15.5525 16.6667 15 16.6667C14.4475 16.6667 13.9176 16.4472 13.5269 16.0565C13.1362 15.6658 12.9167 15.1359 12.9167 14.5833C12.9167 14.0308 13.1362 13.5009 13.5269 13.1102C13.9176 12.7195 14.4475 12.5 15 12.5ZM22.0833 12.5C22.6359 12.5 23.1658 12.7195 23.5565 13.1102C23.9472 13.5009 24.1667 14.0308 24.1667 14.5833C24.1667 15.1359 23.9472 15.6658 23.5565 16.0565C23.1658 16.4472 22.6359 16.6667 22.0833 16.6667C21.5308 16.6667 21.0009 16.4472 20.6102 16.0565C20.2195 15.6658 20 15.1359 20 14.5833C20 14.0308 20.2195 13.5009 20.6102 13.1102C21.0009 12.7195 21.5308 12.5 22.0833 12.5ZM24.5833 2.5H5.41667C4.64312 2.5 3.90125 2.80729 3.35427 3.35427C2.80729 3.90125 2.5 4.64312 2.5 5.41667V6.66667H27.5V5.41667C27.5 4.64312 27.1927 3.90125 26.6457 3.35427C26.0987 2.80729 25.3569 2.5 24.5833 2.5Z\"\n        fill=\"#F9A648\"\n      />\n    </svg>\n  );\n};\nconst CongrCard3 = () => {\n  return (\n    <svg\n      style={{ margin: '20px' }}\n      width=\"34\"\n      height=\"30\"\n      viewBox=\"0 0 34 30\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        d=\"M26.9984 3.31766e-07C27.1947 -0.000142685 27.3883 0.0459547 27.5635 0.134559C27.7386 0.223163 27.8905 0.351783 28.0067 0.51L28.0984 0.655L33.5367 10.7017L33.6 10.8567L33.62 10.9233L33.6534 11.0933L33.6634 11.25C33.6635 11.3626 33.6483 11.4748 33.6184 11.5833L33.54 11.7917L33.4767 11.9067C33.4399 11.9667 33.398 12.0236 33.3517 12.0767L33.4517 11.9467L33.41 12.005L17.9934 29.5133C17.8653 29.6836 17.6946 29.817 17.4984 29.9L17.335 29.955L17.205 29.9833L17 30L16.8334 29.99L16.6367 29.9467C16.5349 29.9174 16.4373 29.8749 16.3467 29.82L16.3317 29.8083C16.2526 29.7597 16.1798 29.7015 16.115 29.635L0.631707 12.0583L0.588374 12.005L0.521707 11.9067C0.427275 11.7542 0.367003 11.583 0.345041 11.405L0.333374 11.25L0.338374 11.14L0.360041 10.9917C0.370425 10.9431 0.383783 10.8952 0.400041 10.8483L0.436707 10.75L0.483374 10.655L5.90004 0.655C5.99343 0.48243 6.12613 0.334269 6.2874 0.222504C6.44868 0.11074 6.634 0.0385128 6.82837 0.0116669L6.99837 3.31766e-07H26.9984ZM21.995 12.5H11.9967L16.9967 25.3117L21.995 12.5ZM9.31504 12.5H4.34837L13.2667 22.6233L9.31504 12.5ZM29.645 12.5H24.68L20.7334 22.6167L29.645 12.5ZM11.9517 2.5H7.74171L3.67837 10H9.55171L11.9517 2.5ZM19.4184 2.5H14.5767L12.175 10H21.8167L19.4167 2.5H19.4184ZM26.2517 2.5H22.0434L24.4434 10H30.3134L26.2534 2.5H26.2517Z\"\n        fill=\"#305FF5\"\n      />\n    </svg>\n  );\n};\n\nconst AdminArrow = () => {\n  return (\n    <div className=\"adminArrow\">\n      <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n          d=\"M3.20009 5.73997C3.26706 5.66774 3.34761 5.6094 3.43712 5.5683C3.52664 5.52719 3.62338 5.50413 3.72181 5.50041C3.82024 5.4967 3.91844 5.51241 4.0108 5.54665C4.10316 5.58089 4.18787 5.63299 4.26009 5.69997L8.00009 9.22697L11.7401 5.69997C11.8123 5.633 11.897 5.58091 11.9894 5.54667C12.0817 5.51243 12.1799 5.49672 12.2784 5.50044C12.3768 5.50415 12.4735 5.52722 12.5631 5.56832C12.6526 5.60942 12.7331 5.66774 12.8001 5.73997C12.8671 5.8122 12.9192 5.89691 12.9534 5.98927C12.9876 6.08163 13.0033 6.17983 12.9996 6.27826C12.9959 6.37669 12.9728 6.47342 12.9317 6.56294C12.8906 6.65245 12.8323 6.733 12.7601 6.79997L8.51009 10.8C8.37141 10.9286 8.18924 11.0001 8.00009 11.0001C7.81095 11.0001 7.62878 10.9286 7.49009 10.8L3.24009 6.79997C3.16786 6.733 3.10952 6.65246 3.06842 6.56294C3.02732 6.47343 3.00425 6.37669 3.00053 6.27826C2.99682 6.17983 3.01253 6.08162 3.04677 5.98926C3.08101 5.89691 3.13311 5.81219 3.20009 5.73997Z\"\n          fill=\"#3C4252\"\n        />\n      </svg>\n    </div>\n  );\n};\n\nconst AdminCreateClose = () => {\n  return (\n    <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        d=\"M2.39716 2.55394L2.47016 2.46994C2.59715 2.34293 2.7655 2.2657 2.94461 2.2523C3.12372 2.2389 3.30169 2.29023 3.44616 2.39694L3.53016 2.46994L8.00016 6.93894L12.4702 2.46894C12.5394 2.39734 12.6222 2.34025 12.7137 2.30098C12.8052 2.26172 12.9036 2.24108 13.0032 2.24026C13.1028 2.23944 13.2015 2.25846 13.2937 2.29622C13.3859 2.33397 13.4696 2.3897 13.54 2.46015C13.6103 2.53061 13.666 2.61437 13.7037 2.70656C13.7413 2.79875 13.7603 2.89752 13.7593 2.9971C13.7584 3.09669 13.7377 3.19509 13.6983 3.28658C13.659 3.37806 13.6018 3.46079 13.5302 3.52994L9.06116 7.99994L13.5312 12.4699C13.658 12.5971 13.7351 12.7655 13.7483 12.9446C13.7615 13.1237 13.71 13.3016 13.6032 13.4459L13.5302 13.5299C13.4032 13.657 13.2348 13.7342 13.0557 13.7476C12.8766 13.761 12.6986 13.7097 12.5542 13.6029L12.4702 13.5299L8.00016 9.06094L3.53016 13.5309C3.38864 13.6675 3.19915 13.743 3.00251 13.7412C2.80586 13.7394 2.61779 13.6604 2.47879 13.5213C2.3398 13.3822 2.26102 13.194 2.2594 12.9974C2.25778 12.8007 2.33347 12.6113 2.47016 12.4699L6.93916 7.99994L2.46916 3.52994C2.34229 3.40283 2.26525 3.23441 2.25203 3.0553C2.23882 2.8762 2.29032 2.6983 2.39716 2.55394L2.47016 2.46994L2.39716 2.55394Z\"\n        fill=\"#3C4252\"\n      />\n    </svg>\n  );\n};\n\nconst EditPhotoAdmin = () => {\n  return (\n    <svg width=\"19\" height=\"19\" viewBox=\"0 0 19 19\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        d=\"M15.3632 7.87907L6.40517 16.8386C5.92465 17.3187 5.32272 17.6594 4.66367 17.8241L1.22717 18.6836C1.10136 18.7153 0.969472 18.7138 0.844403 18.6793C0.719334 18.6447 0.605359 18.5784 0.513615 18.4866C0.421871 18.3949 0.355497 18.2809 0.320977 18.1558C0.286458 18.0308 0.284974 17.8989 0.316671 17.7731L1.17617 14.3381C1.34104 13.6783 1.68222 13.0758 2.16317 12.5951L11.1197 3.63557L15.3632 7.87907ZM17.4857 1.51607C18.0481 2.07866 18.364 2.84158 18.364 3.63707C18.364 4.43256 18.0481 5.19549 17.4857 5.75807L16.4237 6.81707L12.1802 2.57507L13.2422 1.51607C13.5208 1.23737 13.8515 1.01628 14.2156 0.865441C14.5796 0.7146 14.9699 0.636963 15.3639 0.636963C15.758 0.636963 16.1482 0.7146 16.5123 0.865441C16.8763 1.01628 17.2071 1.23737 17.4857 1.51607Z\"\n        fill=\"#3C4252\"\n      />\n    </svg>\n  );\n};\n\nconst GranterLogo = () => {\n  return (\n    <svg width=\"25\" height=\"24\" viewBox=\"0 0 25 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        d=\"M12.5425 24C19.1635 24 24.5308 18.6274 24.5308 12C24.5308 5.37255 19.1635 0 12.5425 0C5.92151 0 0.554199 5.37255 0.554199 12C0.554199 18.6274 5.92151 24 12.5425 24Z\"\n        fill=\"#305FF5\"\n      />\n      <path\n        d=\"M7.72675 12.5759C7.72675 12.5759 4.11985 9.72212 7.1792 5.95876C8.70453 4.2433 11.5466 3.74969 13.1088 3.78184C14.6709 3.81398 16.3133 3.95798 16.67 3.76911C17.0574 3.56394 17.2182 3.23375 17.3645 3.02658C17.5106 2.8194 17.8924 2.21104 18.3846 2.54457C18.8767 2.87789 18.4094 3.47107 18.227 3.7104C18.1081 3.86667 17.5286 4.3681 16.8531 4.63265C16.8531 4.63265 19.9184 6.17733 19.4971 9.19212C19.0756 12.2069 16.2721 13.9324 12.0304 13.7844C9.58529 13.7143 8.68891 13.0675 8.68891 13.0675C8.68891 13.0675 7.73834 13.2973 8.26493 14.1316C8.49599 14.416 8.64587 14.4263 9.66982 14.4901C10.6935 14.5542 16.111 14.5582 16.7656 14.677C17.261 14.7669 19 15.5916 18.1902 17.4243C17.8349 18.3693 14.3181 20.7298 10.9998 21.9434C10.9998 21.9434 14.9051 18.9826 15.2856 18.4247C15.6659 17.867 15.3835 17.6906 14.5286 17.752C13.6739 17.8132 10.7937 18.2343 9.03863 18.1217C7.2838 18.0092 5.51247 16.5775 6.26677 14.3363C6.53552 13.6196 7.28893 12.9164 7.72675 12.5759ZM14.2547 10.5004C14.2547 10.5004 15.9027 9.57142 17.0772 7.35275C17.8627 5.86902 17.0583 4.66033 14.823 5.39974C12.5878 6.13937 11.6974 6.85981 10.8071 7.52353C9.91672 8.18726 8.69338 9.6471 8.32961 10.5004C7.96562 11.3536 8.19289 12.9465 10.3904 12.3587C12.5878 11.7709 14.2547 10.5004 14.2547 10.5004Z\"\n        fill=\"white\"\n      />\n    </svg>\n  );\n};\n\nconst DevicesOther = () => {\n  return (\n    <svg width=\"80\" height=\"80\" viewBox=\"0 0 80 80\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        d=\"M9.99992 23.333C9.99992 21.4997 11.4999 19.9997 13.3333 19.9997H66.6666C68.4999 19.9997 69.9999 18.4997 69.9999 16.6663C69.9999 14.833 68.4999 13.333 66.6666 13.333H9.99992C6.33325 13.333 3.33325 16.333 3.33325 19.9997V59.9997C3.33325 63.6663 6.33325 66.6663 9.99992 66.6663H39.9999C41.8332 66.6663 43.3332 65.1663 43.3332 63.333C43.3332 61.4997 41.8332 59.9997 39.9999 59.9997H13.3333C11.4999 59.9997 9.99992 58.4997 9.99992 56.6663V23.333ZM73.3332 26.6663H53.3332C51.6666 26.6663 49.9999 28.333 49.9999 29.9997V63.333C49.9999 64.9997 51.6666 66.6663 53.3332 66.6663H73.3332C74.9999 66.6663 76.6666 64.9997 76.6666 63.333V29.9997C76.6666 28.333 74.9999 26.6663 73.3332 26.6663ZM69.9999 59.9997H56.6666V33.333H69.9999V59.9997Z\"\n        fill=\"#C0C4CB\"\n      />\n    </svg>\n  );\n};\nexport {\n  IconInfo,\n  IconClose,\n  IconWarning,\n  IconPhone,\n  IconMail,\n  IconCompany,\n  IconNotificationsLength,\n  IconNotificationsEmpty,\n  IconDeleteFile,\n  IconComment,\n  IconReply,\n  IconEditPencil,\n  IconAdd,\n  IconDownload,\n  IconFilter,\n  CloseIconModal,\n  UpVector,\n  LogOutSVG,\n  DeleteCompanySVG,\n  PDFSVG,\n  DOCSSVG,\n  XLSXSVG,\n  SuffixShedulleCallIcon,\n  NoFoundDocSVG,\n  ColumnVisibilitySVG,\n  AdminBackToTablesSVG,\n  DeleteAdminSVG,\n  CongrCard1,\n  CongrCard2,\n  CongrCard3,\n  AdminArrow,\n  AdminCreateClose,\n  EditPhotoAdmin,\n  GranterLogo,\n  DevicesOther,\n};\n","const loginRequested = () => {\n  return {\n    type: 'FETCH_LOGIN_REQUEST',\n  };\n};\n\nconst loginLoaded = (newBooks) => {\n  return {\n    type: 'FETCH_LOGIN_SUCCESS',\n    payload: newBooks,\n  };\n};\n\nconst loginError = (error) => {\n  return {\n    type: 'FETCH_LOGIN_FAILURE',\n    payload: error,\n  };\n};\n\nconst userDataLoaded = (data) => {\n  return {\n    type: 'FETCH_USER_DATA_SUCCESS',\n    payload: data,\n  };\n};\n\nconst userCompaniesLoaded = (data) => {\n  return {\n    type: 'FETCH_USER_COMPANIES_SUCCESS',\n    payload: data,\n  };\n};\n\nconst setUserCurrentCompany = (data) => {\n  return {\n    type: 'SET_USER_CURRENT_COMPANY',\n    payload: data,\n  };\n};\n\nconst setUserActiveClimeId = (data) => {\n  return {\n    type: 'SET-USER-ACTIVE-CLIME-ID',\n    payload: data,\n  };\n};\n\nconst userLogOut = (data) => {\n  return {\n    type: 'USER-LOG-OUT',\n    payload: data,\n  };\n};\n\nconst setUserIsAdmin = () => {\n  return {\n    type: 'SET_USER_IS_ADMIN',\n  };\n};\n\nconst setPrevRout = (rout) => {\n  return {\n    type: 'SET_PREV_ROUT',\n    payload: rout,\n  };\n};\n\nexport {\n  loginRequested,\n  loginLoaded,\n  loginError,\n  userDataLoaded,\n  userCompaniesLoaded,\n  setUserActiveClimeId,\n  setUserCurrentCompany,\n  userLogOut,\n  setUserIsAdmin,\n  setPrevRout,\n};\n","const registrationFetchRequested = () => {\n  return {\n    type: 'FETCH_REGISTER_REQUEST',\n  };\n};\n\nconst registrationFetchLoaded = (newBooks) => {\n  return {\n    type: 'FETCH_REGISTER_SUCCESS',\n    payload: newBooks,\n  };\n};\n\nconst registrationFetchError = (error) => {\n  return {\n    type: 'FETCH_REGISTER_FAILURE',\n    payload: error,\n  };\n};\n\nconst registrationUpdateState = (data) => {\n  return {\n    type: 'FETCH_REGISTER_UPDATE_STATE',\n    payload: data,\n  };\n};\n\nconst registrationSetAllIndustries = (data) => {\n  return {\n    type: 'REGISTER_SET_ALL_INDUSTRIES',\n    payload: data,\n  };\n};\nconst registrationChangeEstimate = (payload) => {\n  return {\n    type: 'REGISTRATION_CHANGE_ESTIMATE',\n    payload,\n  };\n};\n\nexport {\n  registrationFetchRequested,\n  registrationFetchLoaded,\n  registrationFetchError,\n  registrationUpdateState,\n  registrationSetAllIndustries,\n  registrationChangeEstimate,\n};\n","const addProjectsDetails = (data) => {\n  return {\n    type: 'ADD_PROJECTS_DETAILS',\n    payload: data,\n  };\n};\n\nexport { addProjectsDetails };\n","const setStepStatus = (claim) => ({\n  type: 'SET_STEP_STATUS',\n  payload: claim,\n});\n\nconst setFinalReport = (claim) => ({\n  type: 'SET_FINAL_REPORT',\n  payload: claim,\n});\n\nexport { setStepStatus, setFinalReport };\n","import * as user from './user';\nimport * as registration from './registration';\nimport * as modal from './modal';\nimport * as projects from './projects';\nimport * as claims from './claims';\n\nconst actions = { ...user, ...registration, ...modal, ...projects, ...claims };\n\nexport default actions;\n","import React from 'react';\nimport actions from '../actions';\nimport { bindActionCreators } from 'redux';\nimport { notification } from 'antd';\n\nimport { IconWarning } from '../../components/icons';\n\nconst { REACT_APP_API_URL } = process.env;\n\nconst fetchCompanyHouse = (q) => {\n  let body = {\n    q: q,\n  };\n\n  return new Promise((resolve, reject) => {\n    fetch(`${REACT_APP_API_URL}/core/find-company`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n      },\n      body: JSON.stringify(body),\n    })\n      .then((resp) => {\n        if (resp.ok) {\n          return resp.json();\n        } else {\n          return resp.json().then((json) => {\n            notification.error({\n              className: 'error-message',\n              description: json.message,\n              icon: <IconWarning />,\n            });\n            throw new Error(json);\n          });\n        }\n      })\n      .then((data) => {\n        resolve(data.data);\n      });\n  });\n};\n\nconst fetchRegistration = (form) => {\n  let body = form;\n  return new Promise((resolve, reject) => {\n    fetch(`${REACT_APP_API_URL}/register`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n        //Authorization: `Bearer ${token}`,\n      },\n      body: JSON.stringify(body),\n    })\n      .then((resp) => {\n        if (resp.ok) {\n          return resp.json();\n        } else {\n          return resp.json().then((json) => {\n            notification.error({\n              className: 'error-message',\n              description: json.message,\n              icon: <IconWarning />,\n            });\n            throw new Error(json);\n          });\n        }\n      })\n      .then((data) => {\n        resolve(data.data);\n      })\n      .catch(() => {\n        reject();\n      });\n  });\n};\n\nconst fetchAllIndustries = (dispatch) => {\n  const { registrationSetAllIndustries } = bindActionCreators(actions, dispatch);\n\n  fetch(`${REACT_APP_API_URL}/core/industries`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n    },\n  })\n    .then((resp) => {\n      if (resp.ok) {\n        return resp.json();\n      } else {\n        return resp.json().then((json) => {\n          notification.error({\n            className: 'error-message',\n            description: json.message,\n            icon: <IconWarning />,\n          });\n          throw new Error(json);\n        });\n      }\n    })\n    .then((data) => {\n      const res = data.data.map((item, index) => {\n        item.value = item.display_value;\n        item.key = `ind-${index}`;\n        return item;\n      });\n      registrationSetAllIndustries(res);\n    });\n};\n\nexport { fetchCompanyHouse, fetchAllIndustries, fetchRegistration };\n","import React from 'react';\nimport actions from '../actions';\nimport lockr from 'lockr';\nimport { bindActionCreators } from 'redux';\nimport { notification } from 'antd';\n\nimport { IconWarning } from '../../components/icons';\n\nconst { REACT_APP_API_URL } = process.env;\n\nconst fetchUserData = (dispatch) => {\n  const { loginRequested, userDataLoaded, loginError, setUserIsAdmin } = bindActionCreators(actions, dispatch);\n  const token = lockr.get('auth-key');\n  loginRequested();\n  return new Promise((resolve, reject) => {\n    fetch(`${REACT_APP_API_URL}/user`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then((resp) => {\n        if (resp.ok) {\n          return resp.json();\n        } else {\n          return resp.json().then((json) => {\n            loginError(json.message);\n            if (resp.status !== 401) {\n              notification.error({\n                className: 'error-message',\n                description: json.message,\n                icon: <IconWarning />,\n              });\n            }\n            throw new Error(json);\n          });\n        }\n      })\n      .then((data) => {\n        if (data.data.role_id === 1) setUserIsAdmin();\n        userDataLoaded(data.data);\n        resolve(data.data);\n      })\n      .catch(reject);\n  });\n};\n\nconst fetchUserCompanies = (dispatch) => {\n  const { loginRequested, userCompaniesLoaded, loginError } = bindActionCreators(actions, dispatch);\n  const token = lockr.get('auth-key');\n  loginRequested();\n  return new Promise((resolve, reject) => {\n    fetch(`${REACT_APP_API_URL}/core/companies`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then((resp) => {\n        if (resp.ok) {\n          return resp.json();\n        } else {\n          return resp.json().then((json) => {\n            loginError(json.message);\n            if (resp.status !== 401) {\n              notification.error({\n                className: 'error-message',\n                description: json.message,\n                icon: <IconWarning />,\n              });\n            }\n            throw new Error(json);\n          });\n        }\n      })\n      .then((data) => {\n        resolve(data.data);\n        userCompaniesLoaded(data.data);\n      })\n      .catch(reject);\n  });\n};\n\nconst fetchResetPassword = (email) => {\n  const token = lockr.get('auth-key');\n  const formData = new FormData();\n  formData.append('email', email);\n\n  return new Promise((resolve, reject) => {\n    fetch(`${REACT_APP_API_URL}/password/forgot`, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n      body: formData,\n    })\n      .then((resp) => {\n        if (resp.ok) {\n          return resp.json();\n        } else {\n          return resp.json().then((json) => {\n            // notification.error({\n            //   className: 'error-message',\n            //   description: json.message,\n            //   icon: <IconWarning />,\n            // });\n            throw new Error(json);\n          });\n        }\n      })\n      .then((data) => {\n        resolve(data.data);\n        //userDataLoaded(data.data);\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n};\n\nconst fetchCreatePassword = (form) => {\n  const token = lockr.get('auth-key');\n\n  const formData = new FormData();\n  for (let i in form) {\n    formData.append(i, form[i]);\n  }\n\n  return new Promise((resolve, reject) => {\n    fetch(`${REACT_APP_API_URL}/password/reset-password`, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n      body: formData,\n    })\n      .then((resp) => {\n        if (resp.ok) {\n          return resp.json();\n        } else {\n          return resp.json().then((json) => {\n            // notification.error({\n            //   className: 'error-message',\n            //   description: json.message,\n            //   icon: <IconWarning />,\n            // });\n            throw new Error(json);\n          });\n        }\n      })\n      .then((data) => {\n        resolve(data.data);\n        //userDataLoaded(data.data);\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n};\n\nexport { fetchUserData, fetchUserCompanies, fetchResetPassword, fetchCreatePassword };\n","import React from 'react';\nimport actions from '../actions';\nimport lockr from 'lockr';\nimport { bindActionCreators } from 'redux';\nimport { notification } from 'antd';\nimport { fetchUserData } from './userServices';\nimport { IconWarning } from '../../components/icons';\n\nconst { REACT_APP_API_URL } = process.env;\n\nconst fetchLogin = (dispatch, loginData, history) => {\n  const { loginLoaded, setUserIsAdmin } = bindActionCreators(actions, dispatch);\n  return new Promise((resolve, reject) => {\n    fetch(`${REACT_APP_API_URL}/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n        //Authorization: `Bearer ${token}`,\n      },\n      body: JSON.stringify(loginData),\n    })\n      .then((resp) => {\n        if (resp.ok) {\n          return resp.json();\n        } else {\n          return resp.json().then((json) => {\n            if (resp.status !== 401) {\n              notification.error({\n                className: 'error-message',\n                description: json.message,\n                icon: <IconWarning />,\n              });\n            }\n            throw new Error(json);\n          });\n        }\n      })\n      .then((data) => {\n        lockr.rm('current-company-id');\n        const authDate = new Date();\n        lockr.set('auth-key', data.data.token);\n        lockr.set('session-token-expiry', authDate);\n        loginLoaded(true);\n        fetchUserData(dispatch).then((data) => {\n          if (data.role_id === 1) {\n            setUserIsAdmin();\n            history.push('/admin/clients');\n            resolve(data.data);\n          }\n          if (data.role_id === 2) {\n            history.push('/active-claims/');\n            resolve(data.data);\n          }\n          if (!data.profile?.id_status) {\n            history.push('/docSign');\n            resolve(data.data);\n          }\n        });\n      })\n      .catch(() => {\n        reject();\n      });\n  });\n};\n\nexport { fetchLogin };\n","import React from 'react';\nimport actions from '../actions';\nimport lockr from 'lockr';\nimport { bindActionCreators } from 'redux';\nimport { notification } from 'antd';\n\nimport { IconWarning } from '../../components/icons';\n\nconst { REACT_APP_API_URL } = process.env;\n\nconst getActiveClaimData = (dispatch, companyId) => {\n  const token = lockr.get('auth-key');\n\n  const { setUserActiveClimeId } = bindActionCreators(actions, dispatch);\n\n  return new Promise((resolve, reject) => {\n    fetch(`${REACT_APP_API_URL}/claims/active/${companyId}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then((resp) => {\n        if (resp.ok) {\n          return resp.json();\n        } else {\n          return resp.json().then((json) => {\n            if (resp.status !== 401) {\n              notification.error({\n                className: 'error-message',\n                description: json.message,\n                icon: <IconWarning />,\n              });\n            }\n            throw new Error(resp);\n          });\n        }\n      })\n      .then((data) => {\n        resolve(data.data);\n        setUserActiveClimeId(data.data.id);\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n};\n\nconst getIntroductionClaimStep = (claimId) => {\n  const token = lockr.get('auth-key');\n  return new Promise((resolve, reject) => {\n    fetch(`${REACT_APP_API_URL}/claims/stage/introduction/${claimId}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then((resp) => {\n        if (resp.ok) {\n          return resp.json();\n        } else {\n          return resp.json().then((json) => {\n            if (resp.status !== 401) {\n              notification.error({\n                className: 'error-message',\n                description: json.message,\n                icon: <IconWarning />,\n              });\n            }\n            throw new Error(json);\n          });\n        }\n      })\n      .then((data) => {\n        resolve(data.data);\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n};\n\nconst getFinancialClaimStep = (claimId) => {\n  const token = lockr.get('auth-key');\n  return new Promise((resolve, reject) => {\n    fetch(`${REACT_APP_API_URL}/claims/stage/financial/${claimId}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then((resp) => {\n        if (resp.ok) {\n          return resp.json();\n        } else {\n          return resp.json().then((json) => {\n            if (resp.status !== 401) {\n              notification.error({\n                className: 'error-message',\n                description: json.message,\n                icon: <IconWarning />,\n              });\n            }\n            throw new Error(json);\n          });\n        }\n      })\n      .then((data) => {\n        resolve(data.data);\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n};\n\nconst getTechnicalClaimStep = (claimId) => {\n  const token = lockr.get('auth-key');\n  return new Promise((resolve, reject) => {\n    fetch(`${REACT_APP_API_URL}/claims/stage/technical/${claimId}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then((resp) => {\n        if (resp.ok) {\n          return resp.json();\n        } else {\n          return resp.json().then((json) => {\n            if (resp.status !== 401) {\n              notification.error({\n                className: 'error-message',\n                description: json.message,\n                icon: <IconWarning />,\n              });\n            }\n            throw new Error(json);\n          });\n        }\n      })\n      .then((data) => {\n        resolve(data.data);\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n};\n\nconst getDeliverablesClaimStep = (claimId) => {\n  const token = lockr.get('auth-key');\n  return new Promise((resolve, reject) => {\n    fetch(`${REACT_APP_API_URL}/claims/stage/deliverables/${claimId}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then((resp) => {\n        if (resp.ok) {\n          return resp.json();\n        } else {\n          return resp.json().then((json) => {\n            if (resp.status !== 401) {\n              notification.error({\n                className: 'error-message',\n                description: json.message,\n                icon: <IconWarning />,\n              });\n            }\n            throw new Error(json);\n          });\n        }\n      })\n      .then((data) => {\n        resolve(data.data);\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n};\n\nconst getSubmissionClaimStep = (claimId) => {\n  const token = lockr.get('auth-key');\n  return new Promise((resolve, reject) => {\n    fetch(`${REACT_APP_API_URL}/claims/stage/submissions/${claimId}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then((resp) => {\n        if (resp.ok) {\n          return resp.json();\n        } else {\n          return resp.json().then((json) => {\n            if (resp.status !== 401) {\n              notification.error({\n                className: 'error-message',\n                description: json.message,\n                icon: <IconWarning />,\n              });\n            }\n            throw new Error(json);\n          });\n        }\n      })\n      .then((data) => {\n        resolve(data.data);\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n};\n\nconst setSkipFile = (claimId, fileId) => {\n  const token = lockr.get('auth-key');\n  return new Promise((resolve, reject) => {\n    fetch(`${REACT_APP_API_URL}/documents/skip/${claimId}/${fileId}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then((resp) => {\n        if (resp.ok) {\n          return resp.json();\n        } else {\n          return resp.json().then((json) => {\n            if (resp.status !== 401) {\n              notification.error({\n                className: 'error-message',\n                description: json.message,\n                icon: <IconWarning />,\n              });\n            }\n            throw new Error(json);\n          });\n        }\n      })\n      .then((data) => {\n        resolve(data.data);\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n};\n\nconst uploadFile = (claimId, fileId, file) => {\n  const token = lockr.get('auth-key');\n  const formData = new FormData();\n  formData.append('file', file);\n  return new Promise((resolve, reject) => {\n    fetch(`${REACT_APP_API_URL}/documents/upload/${claimId}/${fileId}`, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n      body: formData,\n    })\n      .then((resp) => {\n        if (resp.ok) {\n          return resp.json();\n        } else {\n          return resp.json().then((json) => {\n            if (resp.status !== 401) {\n              notification.error({\n                className: 'error-message',\n                description: json.message,\n                icon: <IconWarning />,\n              });\n            }\n            throw new Error(json);\n          });\n        }\n      })\n      .then((data) => {\n        resolve(data.data);\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n};\n\nconst deleteFile = (claimId, fileId) => {\n  const token = lockr.get('auth-key');\n  return new Promise((resolve, reject) => {\n    fetch(`${REACT_APP_API_URL}/documents/delete/${claimId}/${fileId}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then((resp) => {\n        if (resp.ok) {\n          return resp.json();\n        } else {\n          return resp.json().then((json) => {\n            if (resp.status !== 401) {\n              notification.error({\n                className: 'error-message',\n                description: json.message,\n                icon: <IconWarning />,\n              });\n            }\n            throw new Error(json);\n          });\n        }\n      })\n      .then((data) => {\n        resolve(data.data);\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n};\n\nconst setNewProject = (claimId, form) => {\n  const token = lockr.get('auth-key');\n  const formData = new FormData();\n\n  for (let i in form) {\n    if (i === 'documents') {\n      form[i].forEach((doc, index) => {\n        formData.append(`${i}[${index}]`, doc);\n      });\n    } else {\n      if (form[i]) formData.append(i, form[i]);\n    }\n  }\n\n  return new Promise((resolve, reject) => {\n    fetch(`${REACT_APP_API_URL}/projects/add/${claimId}`, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n      body: formData,\n    })\n      .then((resp) => {\n        if (resp.ok) {\n          return resp.json();\n        } else {\n          return resp.json().then((json) => {\n            if (resp.status !== 401) {\n              notification.error({\n                className: 'error-message',\n                description: json.message,\n                icon: <IconWarning />,\n              });\n            }\n            throw new Error(json);\n          });\n        }\n      })\n      .then((data) => {\n        resolve(data.data);\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n};\n\nconst editProject = (claimId, projectId, form) => {\n  const token = lockr.get('auth-key');\n  const formData = new FormData();\n\n  for (let i in form) {\n    if (form[i]) formData.append(i, form[i]);\n  }\n\n  return new Promise((resolve, reject) => {\n    fetch(`${REACT_APP_API_URL}/projects/edit/${claimId}/${projectId}`, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n      body: formData,\n    })\n      .then((resp) => {\n        if (resp.ok) {\n          return resp.json();\n        } else {\n          return resp.json().then((json) => {\n            if (resp.status !== 401) {\n              notification.error({\n                className: 'error-message',\n                description: json.message,\n                icon: <IconWarning />,\n              });\n            }\n            throw new Error(json);\n          });\n        }\n      })\n      .then((data) => {\n        resolve(data.data);\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n};\n\nconst addDocumentToProject = (claimId, projectId, file, is_main) => {\n  const token = lockr.get('auth-key');\n  const formData = new FormData();\n  formData.append('document', file);\n  if (is_main) formData.append('is_main', is_main);\n\n  return new Promise((resolve, reject) => {\n    fetch(`${REACT_APP_API_URL}/projects/add/document/${claimId}/${projectId}`, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n      body: formData,\n    })\n      .then((resp) => {\n        if (resp.ok) {\n          return resp.json();\n        } else {\n          return resp.json().then((json) => {\n            if (resp.status !== 401) {\n              notification.error({\n                className: 'error-message',\n                description: json.message,\n                icon: <IconWarning />,\n              });\n            }\n            throw new Error(json);\n          });\n        }\n      })\n      .then((data) => {\n        resolve(data.data);\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n};\n\nconst removeProject = (claimId, projectId) => {\n  const token = lockr.get('auth-key');\n  const formData = new FormData();\n\n  return new Promise((resolve, reject) => {\n    fetch(`${REACT_APP_API_URL}/projects/delete/${claimId}/${projectId}`, {\n      method: 'DELETE',\n      headers: {\n        Accept: 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n      body: formData,\n    })\n      .then((resp) => {\n        if (resp.ok) {\n          return resp.json();\n        } else {\n          return resp.json().then((json) => {\n            if (resp.status !== 401) {\n              notification.error({\n                className: 'error-message',\n                description: json.message,\n                icon: <IconWarning />,\n              });\n            }\n            throw new Error(json);\n          });\n        }\n      })\n      .then((data) => {\n        resolve(data.data);\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n};\n\nconst removeDocumentFromProject = (claimId, projectId, documentId) => {\n  const token = lockr.get('auth-key');\n\n  return new Promise((resolve, reject) => {\n    fetch(`${REACT_APP_API_URL}/projects/delete/document/${claimId}/${projectId}/${documentId}`, {\n      method: 'DELETE',\n      headers: {\n        Accept: 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then((resp) => {\n        if (resp.ok) {\n          return resp.json();\n        } else {\n          return resp.json().then((json) => {\n            if (resp.status !== 401) {\n              notification.error({\n                className: 'error-message',\n                description: json.message,\n                icon: <IconWarning />,\n              });\n            }\n            throw new Error(json);\n          });\n        }\n      })\n      .then((data) => {\n        resolve(data.data);\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n};\n\nconst setApproveClime = (claimid) => {\n  const token = lockr.get('auth-key');\n\n  return new Promise((resolve, reject) => {\n    fetch(`${REACT_APP_API_URL}/claims/approve/${claimid}`, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then((resp) => {\n        if (resp.ok) {\n          return resp.json();\n        } else {\n          return resp.json().then((json) => {\n            if (resp.status !== 401) {\n              notification.error({\n                className: 'error-message',\n                description: json.message,\n                icon: <IconWarning />,\n              });\n            }\n            throw new Error(json.message);\n          });\n        }\n      })\n      .then((data) => {\n        resolve(data.data);\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n};\n\nconst sendApproveReport = (claimid, form) => {\n  const token = lockr.get('auth-key');\n\n  const formData = new FormData();\n  for (let i in form) {\n    formData.append(i, form[i]);\n  }\n\n  return new Promise((resolve, reject) => {\n    fetch(`${REACT_APP_API_URL}/claims/send-to-accountant/${claimid}`, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n      body: formData,\n    })\n      .then((resp) => {\n        if (resp.ok) {\n          return resp.json();\n        } else {\n          return resp.json().then((json) => {\n            if (resp.status !== 401) {\n              notification.error({\n                className: 'error-message',\n                description: json.message,\n                icon: <IconWarning />,\n              });\n            }\n            throw new Error(json.message);\n          });\n        }\n      })\n      .then((data) => {\n        resolve(data.data);\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n};\n\nexport {\n  getActiveClaimData,\n  getIntroductionClaimStep,\n  getFinancialClaimStep,\n  getTechnicalClaimStep,\n  getDeliverablesClaimStep,\n  getSubmissionClaimStep,\n  setSkipFile,\n  deleteFile,\n  uploadFile,\n  setNewProject,\n  removeProject,\n  editProject,\n  addDocumentToProject,\n  removeDocumentFromProject,\n  setApproveClime,\n  sendApproveReport,\n};\n","import React from 'react';\nimport lockr from 'lockr';\nimport { notification } from 'antd';\nimport { IconWarning } from '../../components/icons';\nconst { REACT_APP_API_URL } = process.env;\n\nconst getfutureClaimData = (companyId) => {\n  const token = lockr.get('auth-key');\n  return new Promise((resolve, reject) => {\n    fetch(`${REACT_APP_API_URL}/claims/future/${companyId}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then((resp) => {\n        if (resp.ok) {\n          return resp.json();\n        } else {\n          return resp.json().then((json) => {\n            if (resp.status !== 401) {\n              notification.error({\n                className: 'error-message',\n                description: json.message,\n                icon: <IconWarning />,\n              });\n            }\n            throw new Error(json);\n          });\n        }\n      })\n      .then((data) => {\n        resolve(data.data);\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n};\n\nconst getCompletedClaimData = (companyId) => {\n  const token = lockr.get('auth-key');\n  return new Promise((resolve, reject) => {\n    fetch(`${REACT_APP_API_URL}/claims/completed/${companyId}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then((resp) => {\n        if (resp.ok) {\n          return resp.json();\n        } else {\n          return resp.json().then((json) => {\n            if (resp.status !== 401) {\n              notification.error({\n                className: 'error-message',\n                description: json.message,\n                icon: <IconWarning />,\n              });\n            }\n            throw new Error(json);\n          });\n        }\n      })\n      .then((data) => {\n        resolve(data.data);\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n};\n\nexport { getfutureClaimData, getCompletedClaimData };\n","import React from 'react';\nimport lockr from 'lockr';\nimport { notification } from 'antd';\nimport { IconWarning } from '../../components/icons';\n\nconst { REACT_APP_API_URL } = process.env;\n\nconst getDocumentComments = (claimId, id) => {\n  const token = lockr.get('auth-key');\n\n  return new Promise((resolve, reject) => {\n    fetch(`${REACT_APP_API_URL}/documents/comments/${claimId}/${id}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then((resp) => {\n        if (resp.ok) {\n          return resp.json();\n        } else {\n          return resp.json().then((json) => {\n            if (resp.status !== 401) {\n              notification.error({\n                className: 'error-message',\n                description: json.message,\n                icon: <IconWarning />,\n              });\n            }\n            throw new Error(json);\n          });\n        }\n      })\n      .then((data) => {\n        resolve(data.data);\n      })\n      .catch(() => {\n        reject();\n      });\n  });\n};\n\nconst postNewVersionDocument = (claimId, id, file) => {\n  const token = lockr.get('auth-key');\n\n  const formData = new FormData();\n  formData.append('file', file);\n\n  return new Promise((resolve, reject) => {\n    fetch(`${REACT_APP_API_URL}/documents/upload/${claimId}/${id}`, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n      body: formData,\n    })\n      .then((resp) => {\n        if (resp.ok) {\n          return resp.json();\n        } else {\n          return resp.json().then((json) => {\n            if (resp.status !== 401) {\n              notification.error({\n                className: 'error-message',\n                description: json.message,\n                icon: <IconWarning />,\n              });\n            }\n            throw new Error(json);\n          });\n        }\n      })\n      .then((data) => {\n        resolve(data.data);\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n};\n\nconst postNewComment = (claimId, id, text, is_reply, comment_id) => {\n  const token = lockr.get('auth-key');\n\n  const formData = new FormData();\n  formData.append('text', text);\n  formData.append('page', 1);\n  if (is_reply) {\n    formData.append('is_reply', is_reply);\n    formData.append('comment_id', comment_id);\n  }\n\n  return new Promise((resolve, reject) => {\n    fetch(`${REACT_APP_API_URL}/documents/comment/${claimId}/${id}`, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n      body: formData,\n    })\n      .then((resp) => {\n        if (resp.ok) {\n          return resp.json();\n        } else {\n          return resp.json().then((json) => {\n            if (resp.status !== 401) {\n              notification.error({\n                className: 'error-message',\n                description: json.message,\n                icon: <IconWarning />,\n              });\n            }\n            throw new Error(json);\n          });\n        }\n      })\n      .then((data) => {\n        resolve(data.data);\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n};\n\nconst removeComment = (claimId, documentId, commentId) => {\n  const token = lockr.get('auth-key');\n\n  return new Promise((resolve, reject) => {\n    fetch(`${REACT_APP_API_URL}/documents/delete/comment/${claimId}/${documentId}/${commentId}`, {\n      method: 'DELETE',\n      headers: {\n        Accept: 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then((resp) => {\n        if (resp.ok) {\n          return resp.json();\n        } else {\n          return resp.json().then((json) => {\n            if (resp.status !== 401) {\n              notification.error({\n                className: 'error-message',\n                description: json.message,\n                icon: <IconWarning />,\n              });\n            }\n            throw new Error(json);\n          });\n        }\n      })\n      .then((data) => {\n        resolve(data.data);\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n};\n\nconst getDocumentsManagerList = (step, companyId) => {\n  const token = lockr.get('auth-key');\n\n  return new Promise((resolve, reject) => {\n    fetch(`${REACT_APP_API_URL}/documents/get/${step}/${companyId}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then((resp) => {\n        if (resp.ok) {\n          return resp.json();\n        } else {\n          return resp.json().then((json) => {\n            if (resp.status !== 401) {\n              notification.error({\n                className: 'error-message',\n                description: json.message,\n                icon: <IconWarning />,\n              });\n            }\n            throw new Error(json);\n          });\n        }\n      })\n      .then((data) => {\n        resolve(data.data.documents);\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n};\n\nconst getDownloadList = (list, stage) => {\n  const token = lockr.get('auth-key');\n\n  const formData = new FormData();\n  list.forEach((file, i) => {\n    formData.append(`document_ids[${i}]`, file.id);\n  });\n  formData.append('stage', stage);\n\n  return new Promise((resolve, reject) => {\n    fetch(`${REACT_APP_API_URL}/documents/download/list`, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n      body: formData,\n    })\n      .then((resp) => {\n        if (resp.ok) {\n          return resp.json();\n        } else {\n          return resp.json().then((json) => {\n            if (resp.status !== 401) {\n              notification.error({\n                className: 'error-message',\n                description: json.message,\n                icon: <IconWarning />,\n              });\n            }\n            throw new Error(json);\n          });\n        }\n      })\n      .then((data) => {\n        resolve(data.data);\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n};\n\nexport {\n  getDocumentComments,\n  postNewVersionDocument,\n  postNewComment,\n  removeComment,\n  getDocumentsManagerList,\n  getDownloadList,\n};\n","import React from 'react';\nimport lockr from 'lockr';\nimport { notification } from 'antd';\nimport { IconWarning } from '../../components/icons';\nconst { REACT_APP_API_URL } = process.env;\n\nconst fetchProfileData = () => {\n  const token = lockr.get('auth-key');\n  return new Promise((resolve, reject) => {\n    fetch(`${REACT_APP_API_URL}/profile/user`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then((resp) => {\n        if (resp.ok) {\n          return resp.json();\n        } else {\n          return resp.json().then((json) => {\n            if (resp.status !== 401) {\n              notification.error({\n                className: 'error-message',\n                description: json.message,\n                icon: <IconWarning />,\n              });\n            }\n            throw new Error(json);\n          });\n        }\n      })\n      .then((data) => {\n        resolve(data.data);\n      })\n      .catch(reject);\n  });\n};\n\nconst postProfileData = (user) => {\n  const token = lockr.get('auth-key');\n\n  const formData = new FormData();\n  for (let i in user) {\n    formData.append(i, user[i]);\n  }\n\n  return new Promise((resolve, reject) => {\n    fetch(`${REACT_APP_API_URL}/profile/update/user`, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n      body: formData,\n    })\n      .then((resp) => {\n        if (resp.ok) {\n          return resp.json();\n        } else {\n          return resp.json().then((json) => {\n            if (resp.status !== 401) {\n              notification.error({\n                className: 'error-message',\n                description: json.message,\n                icon: <IconWarning />,\n              });\n            }\n            throw new Error(json);\n          });\n        }\n      })\n      .then((data) => {\n        resolve(data.data);\n      })\n      .catch(reject);\n  });\n};\n\nconst postCompanyData = (companyId, companyData) => {\n  const token = lockr.get('auth-key');\n\n  const formData = new FormData();\n  for (let i in companyData) {\n    formData.append(i, companyData[i]);\n  }\n\n  return new Promise((resolve, reject) => {\n    fetch(`${REACT_APP_API_URL}/profile/update/company/${companyId}`, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n      body: formData,\n    })\n      .then((resp) => {\n        if (resp.ok) {\n          return resp.json();\n        } else {\n          return resp.json().then((json) => {\n            if (resp.status !== 401) {\n              notification.error({\n                className: 'error-message',\n                description: json.message,\n                icon: <IconWarning />,\n              });\n            }\n            throw new Error(json);\n          });\n        }\n      })\n      .then((data) => {\n        resolve(data.data);\n      })\n      .catch(reject);\n  });\n};\n\nconst postCompanyLogo = (companyId, logo) => {\n  const token = lockr.get('auth-key');\n\n  const formData = new FormData();\n  formData.append('logo', logo);\n\n  return new Promise((resolve, reject) => {\n    fetch(`${REACT_APP_API_URL}/profile/update/company/logo/${companyId}`, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n      body: formData,\n    })\n      .then((resp) => {\n        if (resp.ok) {\n          return resp.json();\n        } else {\n          return resp.json().then((json) => {\n            if (resp.status !== 401) {\n              notification.error({\n                className: 'error-message',\n                description: json.message,\n                icon: <IconWarning />,\n              });\n            }\n            throw new Error(json);\n          });\n        }\n      })\n      .then((data) => {\n        resolve(data.data);\n      })\n      .catch(reject);\n  });\n};\n\nconst addNewCompany = (company) => {\n  const token = lockr.get('auth-key');\n  const formData = new FormData();\n  for (let i in company) {\n    if (i === 'industry_ids') {\n      company[i].forEach((el, n) => {\n        formData.append('industry_ids[' + n + ']', el.id);\n      });\n    } else {\n      formData.append(i, company[i]);\n    }\n  }\n  return new Promise((resolve, reject) => {\n    fetch(`${REACT_APP_API_URL}/profile/company/add`, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n      body: formData,\n    })\n      .then((resp) => {\n        if (resp.ok) {\n          return resp.json();\n        } else {\n          return resp.json().then((json) => {\n            if (resp.status !== 401) {\n              notification.error({\n                className: 'error-message',\n                description: json.message,\n                icon: <IconWarning />,\n              });\n            }\n            throw new Error(json);\n          });\n        }\n      })\n      .then((data) => {\n        resolve(data.data);\n      })\n      .catch(reject);\n  });\n};\n\nconst fetchChacngePassword = (company) => {\n  const token = lockr.get('auth-key');\n  const formData = new FormData();\n  for (let i in company) {\n    formData.append(i, company[i]);\n  }\n  return new Promise((resolve, reject) => {\n    fetch(`${REACT_APP_API_URL}/change-password`, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n      body: formData,\n    })\n      .then((resp) => {\n        if (resp.ok) {\n          return resp.json();\n        } else {\n          return resp.json().then((json) => {\n            if (resp.status !== 401) {\n              notification.error({\n                className: 'error-message',\n                description: json.message,\n                icon: <IconWarning />,\n              });\n            }\n            throw new Error(json);\n          });\n        }\n      })\n      .then((data) => {\n        resolve(data.message);\n      })\n      .catch(reject);\n  });\n};\n\nconst fetchResetPassword = (email) => {\n  const token = lockr.get('auth-key');\n  const formData = new FormData();\n  formData.append('email', email);\n\n  return new Promise((resolve, reject) => {\n    fetch(`${REACT_APP_API_URL}/password/forgot`, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n      body: formData,\n    })\n      .then((resp) => {\n        if (resp.ok) {\n          return resp.json();\n        } else {\n          return resp.json().then((json) => {\n            if (resp.status !== 401) {\n              notification.error({\n                className: 'error-message',\n                description: json.message,\n                icon: <IconWarning />,\n              });\n            }\n            throw new Error(json);\n          });\n        }\n      })\n      .then((data) => {\n        resolve(data.message);\n      })\n      .catch(reject);\n  });\n};\n\nexport {\n  fetchProfileData,\n  postProfileData,\n  postCompanyData,\n  postCompanyLogo,\n  addNewCompany,\n  fetchChacngePassword,\n  fetchResetPassword,\n};\n","module.exports = __webpack_public_path__ + \"static/media/arrow-left.0bf59866.svg\";","module.exports = __webpack_public_path__ + \"static/media/iceon-select-arrow.deba348a.svg\";","module.exports = __webpack_public_path__ + \"static/media/XLSX.0f7e91a9.svg\";","module.exports = __webpack_public_path__ + \"static/media/DOCS.5a6bb774.svg\";","// APP CONSTATNS\nconst app = {\n  APP_NAME: 'Angle2 React Boilerplate',\n\n  API_URL: process.env.APP_URL,\n\n  BUGSNAG_KEY: '',\n  GOOGLE_MAPS_KEY: '',\n\n  AUTH_KEY: 'auth-key',\n  LOCALSTORAGE_EXPIRES_KEY: 'session-token-expiry',\n  LOCALSTORAGE_EXPIRES_TIME: 1000, // minutes\n};\n\nexport const validZero = /^[1-9][0-9]*$/;\n\nexport default app;\n","module.exports = __webpack_public_path__ + \"static/media/icon-upload.16e298f3.svg\";","import lockr from 'lockr';\nconst { REACT_APP_API_URL } = process.env;\n\nexport const askAQuestion = async (manager_id, text, phone) => {\n  const token = lockr.get('auth-key');\n  const body = {\n    manager_id,\n    text,\n  };\n\n  if (!!phone) {\n    body.phone = phone;\n    body.is_phone = 1;\n  } else {\n    body.is_phone = 0;\n  }\n\n  try {\n    const res = await fetch(`${REACT_APP_API_URL}/claims/help-mail`, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n      body: JSON.stringify(body),\n    });\n    const resData = await res.json();\n    if (resData.success) return res;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n","import React, { useState, useCallback } from 'react';\nimport './style.scss';\nimport AskPhoto from '../../../../assets/img/ask-photo.png';\nimport { Form, Radio, Button, Modal, Input } from 'antd';\nimport { CloseIconModal } from '../../../icons/index';\nimport { useDispatch } from 'react-redux';\nimport { askAQuestion } from '../../../../core/services/askAQuestion';\n\nconst { TextArea } = Input;\n\nconst ModalAsk = ({ manager_id, visibleModal, handleCancel }) => {\n  const [askSelection, setAskSelection] = useState(null);\n  const [form] = Form.useForm();\n\n  const dispatch = useDispatch();\n  const formItemLayout = {\n    labelCol: {\n      span: 6,\n    },\n    wrapperCol: {\n      span: 14,\n    },\n  };\n  const onFinish = ({ text, phone }) => {\n    askAQuestion(manager_id, text, phone === undefined ? 0 : phone).then((data) => {\n      if (data.ok) {\n        form.setFieldsValue({\n          phone: '',\n          text: '',\n          options: 'email',\n        });\n        setAskSelection(() => null);\n        dispatch(handleCancel());\n      }\n    });\n  };\n  const onAskSelectionChange = useCallback(\n    (e) => {\n      setAskSelection(() => e.target.value);\n    },\n    [setAskSelection],\n  );\n\n  const checkForPhoneRender = () => {\n    if (askSelection === 'phone') {\n      return (\n        <Form.Item\n          name=\"phone\"\n          rules={[\n            {\n              required: true,\n              pattern: /^(\\+)(\\d+)$/,\n              message: 'Phone number must start with +, allowed characters is 0-9',\n            },\n          ]}>\n          <Input\n            placeholder=\"Please, leave your phone number\"\n            style={{ width: '85%', margin: '20px auto 10px auto' }}\n          />\n        </Form.Item>\n      );\n    }\n  };\n  return (\n    <Modal\n      visible={visibleModal}\n      onCancel={() => {\n        dispatch(handleCancel());\n      }}\n      cancelButtonProps={{ style: { display: 'none' } }}\n      okButtonProps={{ style: { display: 'none' } }}\n      width={900}\n      closeIcon={<CloseIconModal />}>\n      <Form\n        {...formItemLayout}\n        name=\"askForm\"\n        form={form}\n        onFinish={onFinish}\n        initialValues={{\n          options: 'email',\n        }}>\n        <div className=\"wrapper-info\">\n          <div className=\"info-img-text-info\">\n            <img src={AskPhoto} alt=\"Logo Photo\" />\n            <b>Have a Question? Our consultants are always on hand to help.</b>\n            <p>Type your message and your consultant will respond to you on email.</p>\n          </div>\n          <Form.Item\n            name=\"text\"\n            rules={[\n              {\n                required: true,\n                message: 'Please input your message.',\n              },\n              {\n                min: 5,\n                message: 'Message should be at least 5 characters.',\n              },\n            ]}>\n            <TextArea rows={9} style={{ width: '85%', margin: '0 auto' }} />\n          </Form.Item>\n          <div className=\"checkBox\">\n            <h3>Receive answer by:</h3>\n            <Form.Item name=\"options\">\n              <Radio.Group onChange={onAskSelectionChange}>\n                <Radio value=\"email\" name=\"email\">\n                  Email\n                </Radio>\n                <Radio value=\"phone\" name=\"phone\">\n                  Phone\n                </Radio>\n              </Radio.Group>\n            </Form.Item>\n          </div>\n          {checkForPhoneRender()}\n        </div>\n        <div className=\"wrapper-btn-modal\">\n          <Button\n            style={{ width: '89px' }}\n            type=\"button\"\n            onClick={() => {\n              dispatch(handleCancel());\n            }}>\n            Back\n          </Button>\n          <Button style={{ width: '89px' }} type=\"primary\" htmlType=\"submit\">\n            Ask\n          </Button>\n        </div>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default ModalAsk;\n","export const activeItems = [\n  {\n    key: 'active',\n    to: '/active-claims/',\n    text: 'Active',\n    className: '',\n  },\n  {\n    key: 'future',\n    to: '/future-claims/',\n    text: 'Future',\n    className: '',\n  },\n  {\n    key: 'completed',\n    to: '/completed-claims/',\n    text: 'Completed',\n    className: '',\n  },\n  {\n    key: 'profile',\n    to: '/profile',\n    text: 'Profile',\n    className: 'profile',\n  },\n];\nexport const subMenuItems = [\n  {\n    key: 'library-introduction',\n    to: '/documents/introduction',\n    text: 'Introduction',\n  },\n  {\n    key: 'library-financial',\n    to: '/documents/financial',\n    text: 'Financial',\n  },\n  {\n    key: 'library-technical',\n    to: '/documents/technical',\n    text: 'Technical',\n  },\n  {\n    key: 'library-submission',\n    to: '/documents/submission',\n    text: 'Submission',\n  },\n];\n","import React, { useEffect, useState, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Menu, Button } from 'antd';\nimport ModalAsk from './ModalAsk/index';\n//import ModalFeedBack from './ModalFeedBack/index';\nimport { useLocation } from 'react-router-dom';\nimport headerLogo from '../../../assets/img/header-logo.svg';\nimport { Skeleton } from 'antd';\nimport { bindActionCreators } from 'redux';\nimport { IconPhone, IconMail } from '../../icons';\nimport { showModalAction, closeModalAction } from '../../../core/actions/modal';\nimport actions from '../../../core/actions';\nimport { logOut } from '../../../core/services/logOut';\nimport { LogOutSVG } from '../../../components/icons';\nimport './style.scss';\nimport { activeItems, subMenuItems } from './config';\n\nconst { SubMenu, Item } = Menu;\n\nconst Aside = () => {\n  let location = useLocation();\n  const dispatch = useDispatch();\n  const { visibleModal } = useSelector((state) => state.modal);\n  const { currentCompany } = useSelector((state) => state.user);\n  const { id } = useSelector((state) => state.user?.data);\n  const [currentMenu, setCurrentMenu] = useState([]);\n  const { showSubMenu, closeSubMenu } = bindActionCreators(actions, dispatch);\n  const { isVisibleSubMenu } = useSelector((state) => state.modal); // []\n  const [addSubClass, setAddSubClass] = useState(false);\n\n  useEffect(() => {\n    switch (true) {\n      case location.pathname.includes('active-claims'):\n        setCurrentMenu(() => ['active']);\n        break;\n      case location.pathname.includes('future-claims'):\n        setCurrentMenu(() => ['future']);\n        break;\n      case location.pathname.includes('profile'):\n        setCurrentMenu(() => ['profile']);\n        break;\n      case location.pathname.includes('clients'):\n        setCurrentMenu(() => ['clients']);\n        break;\n      case location.pathname.includes('introduction'):\n        if (currentMenu[0] === 'library-introduction') return;\n        setCurrentMenu(() => ['library-introduction']);\n        setAddSubClass(() => true);\n        showSubMenu(['library']);\n        break;\n      case location.pathname.includes('financial'):\n        if (currentMenu[0] === 'library-financial') return;\n        setCurrentMenu(() => ['library-financial']);\n        setAddSubClass(() => true);\n        showSubMenu(['library']);\n\n        break;\n      case location.pathname.includes('technical'):\n        if (currentMenu[0] === 'library-technical') return;\n        setCurrentMenu(() => ['library-technical']);\n        setAddSubClass(() => true);\n        showSubMenu(['library']);\n\n        break;\n      case location.pathname.includes('submission'):\n        if (currentMenu[0] === 'library-submission') return;\n        setCurrentMenu(() => ['library-submission']);\n        setAddSubClass(() => true);\n        showSubMenu(['library']);\n        break;\n\n      default:\n        setCurrentMenu(() => []);\n        setAddSubClass(() => false);\n        break;\n    }\n    return () => {\n      setCurrentMenu(() => []);\n    };\n  }, [location.pathname]);\n\n  const checkForAvatar = useCallback(() => {\n    if (currentCompany) return currentCompany.manager?.avatar;\n  }, [currentCompany]);\n\n  const onOpenChange = useCallback(\n    (key) => {\n      if (!isVisibleSubMenu.length) {\n        showSubMenu(key);\n      } else {\n        closeSubMenu();\n      }\n    },\n    [isVisibleSubMenu],\n  );\n\n  const exit = () => {\n    logOut(dispatch);\n  };\n  return (\n    <aside className=\"nav-left\">\n      <div className=\"nav__logo\">\n        <Link to=\"/active-claims/\">\n          <img src={headerLogo} alt=\"logo\" />\n          <span>Granter</span>\n        </Link>\n      </div>\n      <div className=\"nav__scroll\">\n        <Menu\n          multiple={true}\n          mode=\"inline\"\n          selectedKeys={currentMenu}\n          onOpenChange={onOpenChange}\n          openKeys={isVisibleSubMenu}>\n          {activeItems.map(({ key, to, text, className }) => (\n            <Item key={key} className={className}>\n              <Link to={to}>{text}</Link>\n            </Item>\n          ))}\n          <SubMenu\n            key=\"library\"\n            title=\"Library\"\n            className={addSubClass ? 'active_subMenu' : ''}\n            onTitleClick={(key) => onOpenChange(key)}>\n            {subMenuItems.map(({ key, to, text }) => (\n              <Item key={key} style={{ height: '36px' }}>\n                <Link to={to}>{text}</Link>\n              </Item>\n            ))}\n          </SubMenu>\n        </Menu>\n\n        <div className=\"nav__help\">\n          <div className=\"nav__help_title\">Need Help?</div>\n          {!currentCompany ? (\n            <Skeleton active paragraph={{ rows: 1 }} />\n          ) : (\n            <>\n              <a\n                href={`tel:${\n                  currentCompany &&\n                  currentCompany.manager &&\n                  currentCompany.manager?.phone &&\n                  `${currentCompany.manager.phone}`\n                }`}>\n                <IconPhone />\n                <span>\n                  {currentCompany &&\n                    currentCompany.manager &&\n                    currentCompany.manager?.phone &&\n                    `${currentCompany.manager.phone}`}\n                </span>\n              </a>\n              <a\n                href={`mailto:${\n                  currentCompany &&\n                  currentCompany.manager &&\n                  currentCompany.manager?.email &&\n                  `${currentCompany.manager.email}`\n                }`}>\n                <IconMail />\n                <span>\n                  {currentCompany &&\n                    currentCompany.manager &&\n                    currentCompany.manager?.email &&\n                    `${currentCompany.manager.email}`}\n                </span>\n              </a>\n            </>\n          )}\n        </div>\n        <div className=\"nav__ask\">\n          <div className=\"nav__ask_manager\">\n            {!currentCompany ? (\n              <Skeleton.Avatar avatar active paragraph={false} avatarShape=\"circle\" size=\"large\" />\n            ) : (\n              <>\n                <img src={checkForAvatar()} alt=\"photo\" />\n                <div>\n                  <b>\n                    {currentCompany &&\n                      currentCompany.manager &&\n                      currentCompany.manager?.name &&\n                      `${currentCompany.manager.name}`}\n                  </b>\n                  <span>Your manager</span>\n                </div>\n              </>\n            )}\n          </div>\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              dispatch(showModalAction());\n            }}>\n            Ask a Question\n          </Button>\n          <ModalAsk manager_id={id} visibleModal={visibleModal} handleCancel={closeModalAction} />\n          {/* <ModalFeedBack\n            visibleModal={visibleModal}\n            handleCancel={closeModalAction}\n            currentCompany={currentCompany}\n            checkForAvatar={checkForAvatar}\n          /> */}\n        </div>\n        <div className=\"wrapper_container\">\n          <Button type=\"button\" onClick={exit}>\n            <div className=\"details__btn\">\n              <LogOutSVG />\n              <span>Log out</span>\n            </div>\n          </Button>\n        </div>\n      </div>\n    </aside>\n  );\n};\n\nexport default Aside;\n","import React, { useEffect } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchUserCompanies } from '../../core/services';\nimport lockr from 'lockr';\n\nimport { Dropdown, Menu, Tooltip } from 'antd';\nimport { IconCompany } from '../icons';\n\nimport actions from '../../core/actions';\n\nimport './style.scss';\n\nconst HeaderCompanies = () => {\n  const user = useSelector((state) => state.user);\n  const dispatch = useDispatch();\n  const { setUserCurrentCompany } = bindActionCreators(actions, dispatch);\n\n  useEffect(() => {\n    if (!user.companies) {\n      fetchUserCompanies(dispatch).then((data) => {\n        const currentId = lockr.get('current-company-id');\n        if (currentId) {\n          if (data.filter((item) => item.id === currentId).length) {\n            setUserCurrentCompany(data.filter((item) => item.id === currentId)[0]);\n          } else {\n            setUserCurrentCompany(data[0]);\n          }\n        } else {\n          setUserCurrentCompany(data[0]);\n          lockr.set('current-company-id', data[0].id);\n        }\n      });\n    }\n  }, [user.companies]);\n\n  const companyChange = (id) => {\n    setUserCurrentCompany(user.companies.filter((item) => item.id === id)[0]);\n    lockr.set('current-company-id', id);\n  };\n\n  const menu = (\n    <Menu>\n      {user.companies &&\n        user.currentCompany &&\n        user.companies.map((item, index) => {\n          if (item.id !== user.currentCompany.id) {\n            return (\n              <Menu.Item\n                key={`company-${index}`}\n                onClick={() => {\n                  companyChange(item.id);\n                }}>\n                <Tooltip title={item.name} placement=\"left\">\n                  <div className=\"header__company_icon yellow\">\n                    <IconCompany />\n                  </div>\n                  <div className=\"header__company_name\">{item.name}</div>\n                </Tooltip>\n              </Menu.Item>\n            );\n          }\n        })}\n    </Menu>\n  );\n  return (\n    <div className=\"header__company\">\n      {user.companies && user.companies.length > 1 && (\n        <Dropdown\n          overlay={menu}\n          trigger={['click']}\n          overlayClassName=\"header__company_select-dropdown\"\n          placement=\"bottomLeft\"\n          getPopupContainer={() => document.querySelector('header .header__company')}>\n          <div className=\"header__company_selected\">\n            <div className=\"header__company_icon blue\">\n              <IconCompany />\n            </div>\n            <div className=\"header__company_name\">{user.currentCompany?.name}</div>\n            <div className=\"header__company_dropdown-arrow\"></div>\n          </div>\n        </Dropdown>\n      )}\n\n      {user.companies && user.companies.length === 1 && (\n        <div className=\"header__company_selected\">\n          <div className=\"header__company_icon blue\">\n            <IconCompany />\n          </div>\n          <div className=\"header__company_name\">{user.currentCompany?.name}</div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default HeaderCompanies;\n","import React, { useEffect, useState, useCallback } from 'react';\nimport { Badge, Drawer } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\nimport { getNotificationsForUser } from '../../core/services/getNotificationsForUser';\nimport { IconNotificationsLength, IconNotificationsEmpty } from '../icons';\nimport './style.scss';\nimport { showModalNotifications, closeModalNotifications } from '../../core/actions/modal';\nimport { CloseIconModal } from '../icons/index';\nimport { IconCompany } from '../icons';\nimport { Tooltip } from 'antd';\nimport { readNoti } from '../../core/services/readNotiServices';\n\nconst HeaderNotification = () => {\n  const company = useSelector((state) => state.user.currentCompany);\n  const { isVisibleNotifications } = useSelector((state) => state.modal);\n  const dispatch = useDispatch();\n  const [notiData, setNotiData] = useState([]);\n  const [count, setCount] = useState('');\n  const history = useHistory();\n\n  useEffect(() => {\n    if (company) {\n      const { id } = company;\n      getNotificationsForUser(dispatch, id, history).then((data) => {\n        setNotiData(() => data);\n      });\n    }\n    return () => {\n      setNotiData(() => []);\n    };\n  }, [company]);\n\n  useEffect(() => {\n    if (notiData === undefined) {\n      return;\n    } else if (notiData.length) {\n      let count = notiData.filter((item) => item.status === 2).length;\n      setCount(() => count);\n    }\n    return () => setCount(() => '');\n  }, [notiData]);\n\n  const showDrawer = () => {\n    if (!!count) {\n      readNoti(company.id).then((data) => {\n        if (data.success) {\n          getNotificationsForUser(dispatch, company.id).then((data) => {\n            setNotiData(() => data);\n          });\n        }\n      });\n    }\n\n    if (!notiData.length) {\n      dispatch(closeModalNotifications());\n    } else {\n      dispatch(showModalNotifications());\n    }\n  };\n\n  const onClose = () => {\n    dispatch(closeModalNotifications());\n  };\n\n  const getTitle = () => {\n    return (\n      <>\n        {company && (\n          <>\n            <div className=\"header__company_icon blue\">\n              <IconCompany />\n            </div>\n            <div className=\"header__company_name\">{company.name}</div>\n          </>\n        )}\n      </>\n    );\n  };\n  const convertDate = (date) => {\n    function convertDate(inputFormat) {\n      function pad(s) {\n        return s < 10 ? '0' + s : s;\n      }\n      var d = new Date(inputFormat);\n      return [pad(d.getDate()), pad(d.getMonth() + 1), d.getFullYear()].join('/');\n    }\n    return convertDate(date);\n  };\n\n  const convertTime = (date) => {\n    function convertDate(inputFormat) {\n      function pad(s) {\n        return s < 10 ? '0' + s : s;\n      }\n      var d = new Date(inputFormat);\n      return [pad(d.getHours()), pad(d.getMinutes())].join(':');\n    }\n    return convertDate(date);\n  };\n\n  const checkForLinkTo = useCallback((item) => {\n    if (item.project_id === null) {\n      return `/document/${item.claim_id}/${item.document_id}/`;\n    }\n    if (item.document_id === null) {\n      return `/project/${item.claim_id}/${item.project_id}`;\n    }\n  }, []);\n\n  return (\n    <div className=\"header__notification\">\n      <button onClick={showDrawer}>\n        {notiData === undefined ? (\n          ''\n        ) : (\n          <>\n            {notiData.length ? (\n              <Badge count={count}>\n                <IconNotificationsLength />\n              </Badge>\n            ) : (\n              <Tooltip placement=\"left\" title=\"You don’t have any notifications yet\">\n                <span>\n                  <IconNotificationsEmpty />\n                </span>\n              </Tooltip>\n            )}\n          </>\n        )}\n      </button>\n      <Drawer\n        title={getTitle()}\n        className=\"header__notification_drawer\"\n        placement=\"right\"\n        closable={false}\n        onClose={onClose}\n        visible={isVisibleNotifications}\n        width={508}\n        closeIcon={<CloseIconModal />}\n        closable={true}>\n        <ul className=\"list_of_notif\">\n          {notiData === undefined ? (\n            ''\n          ) : (\n            <>\n              {notiData !== null ? (\n                notiData.map((item) => (\n                  <li className=\"wrapper_li\" key={item.id}>\n                    <div className=\"time_container\">\n                      <time className=\"created_at\">{convertDate(item.created_at)}</time>\n                      <time className=\"created_at\">{convertTime(item.created_at)}</time>\n                    </div>\n                    <div className=\"details_container\">\n                      <div className=\"item_li\">{item.title}</div>\n                      {item.claim_id !== null ? (\n                        <Link\n                          to={() => checkForLinkTo(item)}\n                          className=\"check_doc\"\n                          onClick={() => dispatch(closeModalNotifications())}>\n                          Check document\n                        </Link>\n                      ) : (\n                        ''\n                      )}\n                    </div>\n                  </li>\n                ))\n              ) : (\n                <div>The list is Empty</div>\n              )}\n            </>\n          )}\n        </ul>\n      </Drawer>\n    </div>\n  );\n};\n\nexport default HeaderNotification;\n","import React from 'react';\n\nimport './style.scss';\nimport HeaderSearch from '../../headerSearch';\nimport HeaderCompanies from '../../headerCompanies';\nimport HeaderNotification from '../../headerNotification';\n\nconst Header = () => {\n  return (\n    <header>\n      {/* <HeaderSearch /> */}\n      <HeaderCompanies />\n      <HeaderNotification />\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport { Layout } from 'antd';\nimport Aside from '../Aside';\nimport Header from '../Header';\nimport { useSelector } from 'react-redux';\n\nimport './style.scss';\n\nconst LayoutBoard = ({ children, className }) => {\n  const {\n    visibleModal,\n    isVisibleModalDeleteDocs,\n    isVisibleNotifications,\n    isVisibleBlurSheduleCall,\n    isVisibleActiveTechnical,\n    isVisibleActiveSteps,\n  } = useSelector((state) => state.modal);\n\n  return (\n    <div\n      className={`app-dashboard ${className}`}\n      style={{\n        filter:\n          visibleModal ||\n          isVisibleNotifications ||\n          isVisibleModalDeleteDocs ||\n          isVisibleBlurSheduleCall ||\n          isVisibleActiveTechnical ||\n          isVisibleActiveSteps\n            ? 'blur(3px)'\n            : 'blur(0px)',\n      }}>\n      <Aside />\n      <Header />\n      <Layout.Content className=\"main-content\">\n        <div className=\"dashboard-wrapper\">{children}</div>\n      </Layout.Content>\n    </div>\n  );\n};\n\nexport default LayoutBoard;\n","module.exports = __webpack_public_path__ + \"static/media/icon-pdf.b2755d33.svg\";","module.exports = __webpack_public_path__ + \"static/media/PDF.b3c3102b.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-calendar.e16ee98a.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-arrow-dropdown.8d207c2b.svg\";","const showModalAction = () => ({\n  type: 'SHOW_MODAL',\n});\n\nconst closeModalAction = () => ({\n  type: 'CLOSE_MODAL',\n});\n\nconst showModalNotifications = () => ({\n  type: 'SHOW_MODAL_NOTIFICATIONS',\n});\n\nconst closeModalNotifications = () => ({\n  type: 'CLOSE_MODAL_NOTIFICATIONS',\n});\n\nconst showSubMenu = (payload) => ({\n  type: 'SHOW_SUBMENU',\n  payload,\n});\n\nconst closeSubMenu = () => ({\n  type: 'CLOSE_SUBMENU',\n});\n\nconst showModalDelete = (payload) => ({\n  type: 'SHOW_MODAL_DELETE',\n  payload,\n});\n\nconst closeModalDelete = () => ({\n  type: 'CLOSE_MODAL_DELETE',\n});\n\nconst showModalDeleteDocs = (payload) => ({\n  type: 'SHOW_MODAL_DELETE_DOCS',\n  payload,\n});\n\nconst closeModalDeleteDocs = () => ({\n  type: 'CLOSE_MODAL_DELETE_DOCS',\n});\n\nconst showBlurSheduleCall = (payload) => ({\n  type: 'SHOW_BLUR_SHEDULE_CALL',\n  payload,\n});\n\nconst closeBlurSheduleCall = () => ({\n  type: 'CLOSE_BLUR_SHEDULE_CALL',\n});\n\nconst showBlurActiveTechnicals = (payload) => ({\n  type: 'SHOW_BLUR_ACTIVE_TECHNICALS',\n  payload,\n});\n\nconst closeBlurActiveTechnicals = () => ({\n  type: 'CLOSE_BLUR_ACTIVE_TECHNICALS',\n});\n\nconst blurActiveSteps = () => ({\n  type: 'BLUR_ACTIVE_STEPS',\n});\nconst blurActivePrPage = () => ({\n  type: 'BLUR_ACTIVE_PR_PAGE',\n});\n\nconst setIsBlur = (status) => ({\n  type: 'SET_IS_BLUR',\n  payload: status,\n});\n\nconst setCurrentPageGLOBAL = (payload) => ({\n  type: 'SET_CURRENT_PAGE',\n  payload,\n});\n\nexport {\n  showModalAction,\n  closeModalAction,\n  showModalNotifications,\n  closeModalNotifications,\n  showSubMenu,\n  closeSubMenu,\n  showModalDelete,\n  closeModalDelete,\n  showModalDeleteDocs,\n  closeModalDeleteDocs,\n  showBlurSheduleCall,\n  closeBlurSheduleCall,\n  showBlurActiveTechnicals,\n  closeBlurActiveTechnicals,\n  blurActiveSteps,\n  blurActivePrPage,\n  setIsBlur,\n  setCurrentPageGLOBAL,\n};\n","module.exports = __webpack_public_path__ + \"static/media/icon-file-s.c3a02a12.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-upload-blue.baf20639.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-upload-red.22da7033.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-skip.43b9307e.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-download.e67a5246.svg\";","module.exports = __webpack_public_path__ + \"static/media/header-logo.4749d594.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-undo.48856494.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-add-project.f642c99d.svg\";","import lockr from 'lockr';\n\nconst { REACT_APP_API_URL } = process.env;\n\nexport const readNoti = async (compId) => {\n  const token = lockr.get('auth-key');\n\n  try {\n    const readNoti = await fetch(`${REACT_APP_API_URL}/core/notification/set-read/${compId}`, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    const res = await readNoti.json();\n    if (res.success) return res;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n","import lockr from 'lockr';\n\nimport { bindActionCreators } from 'redux';\n\nimport actions from '../../core/actions';\n\nconst { REACT_APP_API_URL } = process.env;\n\nexport const logOut = async (dispatch) => {\n  try {\n    const { userLogOut } = bindActionCreators(actions, dispatch);\n    const token = lockr.get('auth-key');\n    const data = await fetch(`${REACT_APP_API_URL}/logout`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    if (data.status === 200) userLogOut();\n  } catch (error) {\n    throw new Error(error);\n  } finally {\n    lockr.rm('auth-key');\n    lockr.rm('session-token-expiry');\n    lockr.rm('current-company-id');\n  }\n};\n","import React from 'react';\nimport lockr from 'lockr';\nimport { notification } from 'antd';\nimport { bindActionCreators } from 'redux';\n\nimport actions from '../actions';\n\nimport { IconWarning } from '../../components/icons';\nconst { REACT_APP_API_URL } = process.env;\n\nexport const getNotificationsForUser = (dispatch, companyId, history) => {\n  const token = lockr.get('auth-key');\n\n  const { userLogOut } = bindActionCreators(actions, dispatch);\n\n  return new Promise((resolve, reject) => {\n    fetch(`${REACT_APP_API_URL}/core/notifications/${companyId}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then((resp) => {\n        if (resp.ok) {\n          return resp.json();\n        } else {\n          return resp.json().then((json) => {\n            if (resp.status == 401) {\n              notification.error({\n                className: 'error-message',\n                description: 'Your session has expired, please login again',\n                icon: <IconWarning />,\n              });\n              userLogOut();\n              history.push('/sign-in/');\n            }\n            throw new Error(resp);\n          });\n        }\n      })\n      .then((data) => {\n        resolve(data.data);\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n};\n\n// export const getNotificationsForUser = async (dispatch, companyId) => {\n//   const token = lockr.get('auth-key');\n//   try {\n//     const getUserInfo = await fetch(`${REACT_APP_API_URL}/core/notifications/${companyId}`, {\n//       method: 'GET',\n//       headers: {\n//         'Content-Type': 'application/json',\n//         Accept: 'application/json',\n//         Authorization: `Bearer ${token}`,\n//       },\n//     });\n//     const data = await getUserInfo.json();\n//     return data.data;\n//   } catch (error) {\n//     throw new Error(error);\n//   }\n// };\n","module.exports = __webpack_public_path__ + \"static/media/icon-comment.bf97de1b.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-file-b.dc6dcb8c.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-info.e4e9af34.svg\";","module.exports = __webpack_public_path__ + \"static/media/ask-photo.fd735a7e.png\";","import React from 'react';\n\nimport logo from '../../assets/img/header-logo.svg';\n\nimport './style.scss';\n\nconst LoadingPage = () => {\n  return (\n    <div className=\"loading-page\">\n      <div className=\"loading-page__text\">We’re loading your account, just give us few seconds.</div>\n      <div className=\"progress-materializecss\">\n        <div className=\"indeterminate\"></div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoadingPage;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport LoadingPage from '../../pages/LoadingPage';\n\nimport { fetchUserData } from '../services/';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const dispatch = useDispatch();\n  const isloggedIn = useSelector((state) => state.user.isloggedIn);\n  const isAdmin = useSelector((state) => state.user.isAdmin);\n  const userData = useSelector((state) => state.user.data);\n\n  if (isloggedIn && !userData) {\n    fetchUserData(dispatch);\n  }\n\n  const CurrentComponent = isloggedIn ? (\n    !userData ? (\n      <LoadingPage />\n    ) : !isAdmin ? (\n      <Component />\n    ) : (\n      <Redirect to=\"/admin/clients\" />\n    )\n  ) : (\n    <Redirect to=\"/sign-in/\" />\n  );\n  //const CurrentComponent = isloggedIn ? (\n  //  !userData ? (\n  //    <LoadingPage />\n  //  ) : !isAdmin ? (\n  //    !userData.profile?.id_status ? (\n  //      <Redirect to=\"/docSign\" />\n  //    ) : (\n  //      <Component />\n  //    )\n  //  ) : (\n  //    <Redirect to=\"/admin/clients\" />\n  //  )\n  //) : (\n  //  <Redirect to=\"/sign-in/\" />\n  //);\n\n  return <Route {...rest} render={(props) => CurrentComponent} />;\n};\n\n// const mapStateToProps = (state) => {\n//   return {\n//     isloggedIn: state.user.isloggedIn,\n//     userData: state.user.data,\n//   };\n// };\n\nexport default PrivateRoute;\n","import React from 'react';\n// import { connect } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport LoadingPage from '../../pages/LoadingPage';\n\nimport { fetchUserData } from '../services';\n\nconst PrivateAdminRoute = ({ component: Component, ...rest }) => {\n  const dispatch = useDispatch();\n  const isloggedIn = useSelector((state) => state.user.isloggedIn);\n  const isAdmin = useSelector((state) => state.user.isAdmin);\n  const userData = useSelector((state) => state.user.data);\n\n  if (isloggedIn && !userData) {\n    fetchUserData(dispatch);\n  }\n\n  const CurrentComponent = isloggedIn ? (\n    !userData ? (\n      <LoadingPage />\n    ) : isAdmin ? (\n      <Component />\n    ) : (\n      <Redirect to=\"/active-claims\" />\n    )\n  ) : (\n    <Redirect to=\"/sign-in/\" />\n  );\n\n  return <Route {...rest} render={(props) => CurrentComponent} />;\n};\n\n// const mapStateToProps = (state) => {\n//   return {\n//     isloggedIn: state.user.isloggedIn,\n//     userData: state.user.data,\n//   };\n// };\n\nexport default PrivateAdminRoute;\n","import React from 'react';\nimport './style.scss';\n\nexport default function () {\n  return (\n    <div className=\"ui container not-found\">\n      <div className=\"wrapper ui icon message\">\n        <i className=\"warning sign icon\" />\n        <div className=\"content\">\n          <div className=\"header\">Page not found</div>\n          <p>The page your are looking for does not exists</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { Component } from 'react';\nimport DOM from './notFound';\n\nclass NotFound extends Component {\n  constructor(props) {\n    super(props);\n    this.view = DOM;\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return this.view();\n  }\n}\nexport default NotFound;\n","import React, { useEffect } from 'react';\nimport { Switch, Route, useLocation } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport actions from '../../core/actions';\n\nimport NotFound from '../../pages/NotFound';\n\nconst CoreRouter = ({ children }) => {\n  let location = useLocation();\n  const dispatch = useDispatch();\n  const { setPrevRout } = bindActionCreators(actions, dispatch);\n\n  useEffect(() => {\n    return () => {\n      setPrevRout(location.pathname);\n    };\n  }, [location]);\n\n  return (\n    <Switch>\n      {children}\n      <Route component={NotFound} />\n    </Switch>\n  );\n};\n\nexport default CoreRouter;\n","// import { Button } from \"antd\";\nimport React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport headerLogo from '../../../assets/img/header-logo.svg';\n\nimport './style.scss';\n\nconst Header = ({mode}) => {\n  return (\n    <header>\n\t\t\t<div className=\"wrapper\">\n\t\t\t\t<Link to=\"/\" className=\"header__logo\">\n\t\t\t\t\t<img src={headerLogo} alt=\"\" />\n          <span>Granter</span>\n        </Link>\n\t\t\t\t{mode === 'login' && (\n\t\t\t\t\t<Link to=\"/\" className=\"header__sign-in ant-btn ant-btn-primary\">\n            Sign Up\n          </Link>\n        )}\n\t\t\t\t{mode === 'registration' && (\n          <Link\n\t\t\t\t\t\tto=\"/sign-in/\"\n\t\t\t\t\t\tclassName=\"header__sign-in ant-btn ant-btn-primary\"\n          >\n            Log In\n          </Link>\n        )}\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./style.scss\";\n\nconst Footer = () => {\n  return (\n    <footer>\n      <div className='wrapper'>\n        <Link to=''>About Us</Link>\n        <Link to=''>Terms and Conditions</Link>\n        <Link to=''>Need Help?</Link>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport { Layout } from \"antd\";\nimport Header from \"../Header\";\nimport Footer from \"../Footer\";\n\nimport \"./style.scss\";\n\nconst LayoutBoard = ({ children, className, mode }) => {\n  return (\n    <div className={`app-welcome ${className}`}>\n      <Header mode={mode} />\n      <Layout.Content className='main-content'>\n        <div className='wrapper'>{children}</div>\n      </Layout.Content>\n      <Footer />\n    </div>\n  );\n};\n\nexport default LayoutBoard;\n","import React, { useRef, useState } from 'react';\nimport { Form, Carousel, Button, Input, AutoComplete } from 'antd';\nimport { bindActionCreators } from 'redux';\nimport { useDispatch, useSelector } from 'react-redux';\nimport _ from 'underscore';\n\nimport { fetchCompanyHouse } from '../../../../core/services';\nimport actions from '../../../../core/actions';\n\nimport './style.scss';\n\nconst WelcomeStep1 = ({ goNextStep }) => {\n  const slider = useRef();\n  const inputSearch = useRef();\n  const [options, setOptions] = useState([]);\n  const [companyName, setCompanyName] = useState(null);\n  const [loader, setLoader] = useState(false);\n  const dispatch = useDispatch();\n  const state = useSelector((state) => state.registration);\n\n  const [form] = Form.useForm();\n  const { registrationUpdateState } = bindActionCreators(actions, dispatch);\n\n  const fetchCompanyHouseDelay = _.debounce((searchText) => {\n    setCompanyName(null);\n    if (searchText.length < 3) {\n      setOptions([]);\n    } else {\n      setLoader(true);\n      fetchCompanyHouse(searchText).then((data) => {\n        let results = [];\n        if (data.length) {\n          results = data.map((item, index) => {\n            item.value = item.company_name;\n            item.key = `company-${index}`;\n            return item;\n          });\n        } else {\n          if (data.company_name) {\n            data.value = data.company_name;\n            results.push(data);\n          }\n        }\n        setOptions(results);\n        setLoader(false);\n      });\n    }\n  }, 500);\n\n  const onSearch = (searchText) => {\n    fetchCompanyHouseDelay(searchText);\n  };\n\n  const onSelect = (value, options) => {\n    setCompanyName(options);\n  };\n\n  const onFinishName = (value) => {\n    const companyData = {\n      name: companyName.company_name,\n      number: companyName.company_number,\n      industry: companyName.industries ? companyName.industries : [],\n    };\n    registrationUpdateState(companyData);\n    setOptions([]);\n    slider.current.next();\n  };\n\n  return (\n    <div className=\"hello-page__step\">\n      <Carousel ref={slider} dots={false} effect=\"fade\" swipe={false}>\n        {/* WHAT IS YOUR COMPANY NAME? */}\n        <div className=\"step--wrapper\">\n          <Form\n            name=\"name\"\n            layout=\"vertical\"\n            requiredMark={false}\n            onFinish={onFinishName}\n            className=\"teszt\"\n            // onFinishFailed={onFinishFailed}\n          >\n            <Form.Item\n              label=\"What is your company name?\"\n              name=\"name\"\n              validateTrigger=\"onSelect\"\n              rules={[\n                {\n                  validateTrigger: 'onSelect',\n                  validator: (_, value) => {\n                    if (companyName) {\n                      return Promise.resolve();\n                    }\n\n                    return Promise.reject(new Error('Please input your company name!'));\n                  },\n                },\n              ]}>\n              <AutoComplete\n                options={options}\n                onSelect={onSelect}\n                onSearch={onSearch}\n                className=\"hello-page__autocomplete\"\n                notFoundContent=\"Nothing found\"\n                getPopupContainer={() => document.getElementById('name')}\n                dropdownClassName=\"drop_down__list\">\n                <Input.Search placeholder=\"Enter the name\" loading={loader} />\n              </AutoComplete>\n            </Form.Item>\n\n            <Form.Item>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Next\n              </Button>\n            </Form.Item>\n          </Form>\n        </div>\n\n        {/* IS THIS YOUR COMPANY NUMBER ON COMPANIES HOUSE? */}\n        <div className=\"step--wrapper\">\n          <div className=\"step--label\">Is this your company number on companies house?</div>\n          <div className=\"step--value\">{state.number}</div>\n          <div className=\"control-submit\">\n            <Button\n              type=\"primary\"\n              onClick={() => {\n                //slider.current.goTo(3);\n                goNextStep();\n              }}>\n              Yes\n            </Button>\n            <Button\n              type=\"text\"\n              onClick={() => {\n                slider.current.goTo(2);\n                setCompanyName(null);\n                form.setFieldsValue({\n                  number: '',\n                });\n              }}>\n              No\n            </Button>\n          </div>\n        </div>\n\n        {/* WHAT IS YOUR REGISTERED COMPANY NAME OR NUMBER? */}\n        <div className=\"step--wrapper\">\n          <Form\n            name=\"number\"\n            form={form}\n            layout=\"vertical\"\n            requiredMark={false}\n            onFinish={(values) => {\n              const companyData = {\n                name: companyName.company_name,\n                number: companyName.company_number,\n                industry: companyName.industries ? companyName.industries : [],\n              };\n              registrationUpdateState(companyData);\n              setOptions([]);\n              //slider.current.goTo(1);\n              goNextStep();\n            }}\n            // onFinishFailed={onFinishFailed}\n          >\n            <Form.Item\n              label=\"What is your registered company name or number?\"\n              name=\"number\"\n              validateTrigger=\"onSelect\"\n              rules={[\n                {\n                  validateTrigger: 'onSelect',\n                  validator: (_, value) => {\n                    if (companyName) {\n                      return Promise.resolve();\n                    }\n\n                    return Promise.reject(new Error('Please input your company name or number!'));\n                  },\n                },\n              ]}>\n              <AutoComplete\n                options={options}\n                onSelect={onSelect}\n                onSearch={onSearch}\n                className=\"hello-page__autocomplete\"\n                notFoundContent=\"Nothing found\">\n                <Input.Search placeholder=\"Enter the name\" loading={loader} ref={inputSearch} />\n              </AutoComplete>\n            </Form.Item>\n            <Form.Item className=\"control-submit\">\n              <Button type=\"primary\" htmlType=\"submit\">\n                Next\n              </Button>\n              {/* <Button\n                type='text'\n                onClick={() => {\n                  slider.current.prev();\n                  setOptions([]);\n                  setCompanyName(null);\n                }}\n              >\n                Back\n              </Button> */}\n            </Form.Item>\n          </Form>\n        </div>\n\n        {/* IS THIS YOUR COMPANY? */}\n        <div className=\"step--wrapper\">\n          <div className=\"step--label\">Is this your company?</div>\n          <div className=\"step--value\">{state.name}</div>\n          <div className=\"control-submit\">\n            <Button type=\"primary\" onClick={goNextStep}>\n              Yes\n            </Button>\n            <Button\n              type=\"text\"\n              onClick={() => {\n                setCompanyName(null);\n                setOptions([]);\n                slider.current.prev();\n                form.setFieldsValue({\n                  number: '',\n                });\n              }}>\n              No\n            </Button>\n          </div>\n        </div>\n      </Carousel>\n    </div>\n  );\n};\n\nexport default WelcomeStep1;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { Form, Carousel, Button, Select } from 'antd';\nimport { bindActionCreators } from 'redux';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport actions from '../../../../core/actions';\nimport { fetchAllIndustries } from '../../../../core/services';\n\nimport './style.scss';\n\nconst WelcomeStep2 = ({ goNextStep, goPrevStep }) => {\n  const [industry, setIndustry] = useState(null);\n  const slider = useRef();\n  const state = useSelector((state) => state.registration);\n  const dispatch = useDispatch();\n  const { registrationUpdateState } = bindActionCreators(actions, dispatch);\n\n  useEffect(() => {\n    fetchAllIndustries(dispatch);\n  }, []);\n\n  useEffect(() => {\n    if (!state.industry.length) slider.current.next();\n  }, [state.industry]);\n\n  const onFinishName = (value) => {\n    slider.current.next();\n    registrationUpdateState({\n      industry: industry,\n    });\n  };\n\n  const onSelect = (value, option) => {\n    setIndustry([option]);\n  };\n\n  return (\n    <div className=\"hello-page__step\">\n      <Carousel ref={slider} dots={false} effect=\"fade\" swipe={false}>\n        <div className=\"step--wrapper\">\n          <div className=\"step--label\">Is your company in the industry of</div>\n          <div className=\"step--value\">\n            {state.industry.length > 0 &&\n              state.industry.map((item, index) => (\n                <p key={`in-${index}`}>\n                  {item.sic_code} - {item.display_value}\n                </p>\n              ))}\n          </div>\n          <div className=\"control-submit\">\n            <Button\n              type=\"primary\"\n              onClick={() => {\n                goNextStep();\n              }}>\n              Yes\n            </Button>\n            <Button\n              type=\"text\"\n              onClick={() => {\n                slider.current.prev();\n              }}>\n              No\n            </Button>\n          </div>\n        </div>\n        <div className=\"step--wrapper\">\n          <Form\n            layout=\"vertical\"\n            requiredMark={false}\n            onFinish={onFinishName}\n            // onFinishFailed={onFinishFailed}\n          >\n            <Form.Item\n              label=\"What is your company’s industry?\"\n              name=\"industry\"\n              rules={[\n                {\n                  required: true,\n                  message: 'Please select your company’s industry!',\n                },\n              ]}>\n              <Select\n                showSearch\n                size=\"large\"\n                showArrow={false}\n                placeholder=\"Select an industry\"\n                optionFilterProp=\"children\"\n                options={state.industriesList}\n                onSelect={onSelect}\n                // onChange={onChange}\n                // onFocus={onFocus}\n                // onBlur={onBlur}\n                // onSearch={onSearch}\n                filterOption={(input, option) => {\n                  return option.display_value.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n                }}></Select>\n            </Form.Item>\n\n            <Form.Item className=\"control-submit\">\n              <Button type=\"primary\" htmlType=\"submit\">\n                Next\n              </Button>\n              <Button\n                type=\"text\"\n                onClick={() => {\n                  goPrevStep();\n                }}>\n                Back\n              </Button>\n            </Form.Item>\n          </Form>\n        </div>\n      </Carousel>\n    </div>\n  );\n};\n\nexport default WelcomeStep2;\n","import { validZero } from '../../../../core/constants';\n\nexport const firstRow = [\n  {\n    label: 'What are your approximate internal staffing costs per year?',\n    name: 'staffing_costs',\n    rules: [\n      {\n        required: true,\n        message: 'Please select your approximate internal staffing costs!',\n      },\n      {\n        required: true,\n        pattern: validZero,\n        message: 'The minimum value is one',\n      },\n    ],\n    placeholder: 'Enter the number',\n    type: 'number',\n    suffix: '£',\n  },\n  {\n    label: 'What are your approximate consumed materials costs per year?',\n    name: 'materials_costs',\n    rules: [\n      {\n        required: true,\n        message: 'Please select your approximate consumed materials costs!',\n      },\n      {\n        required: true,\n        pattern: validZero,\n        message: 'The minimum value is one',\n      },\n    ],\n    placeholder: 'Enter the number',\n    type: 'number',\n    suffix: '£',\n  },\n];\nexport const secondRow = [\n  {\n    label: 'What are your approximate subcontracting costs per year?',\n    name: 'subcontracting_costs',\n    rules: [\n      {\n        required: true,\n        message: 'Please select your approximate subcontracting costs!',\n      },\n      {\n        required: true,\n        pattern: validZero,\n        message: 'The minimum value is one',\n      },\n    ],\n    placeholder: 'Enter the number',\n    type: 'number',\n    suffix: '£',\n  },\n  {\n    label: 'What are your approximate software costs per year?',\n    name: 'software_costs',\n    rules: [\n      {\n        required: true,\n        message: 'Please select your approximate software costs!',\n      },\n      {\n        required: true,\n        pattern: validZero,\n        message: 'Please, don’t start your number with 0',\n      },\n    ],\n    placeholder: 'Enter the number',\n    type: 'number',\n    suffix: '£',\n  },\n];\n","import React, { useState, useEffect, useRef } from 'react';\nimport { Form, Button, Input, Row, Col } from 'antd';\nimport { bindActionCreators } from 'redux';\nimport { useDispatch, useSelector } from 'react-redux';\nimport actions from '../../../../core/actions';\nimport './style.scss';\nimport { firstRow, secondRow } from './config';\n\nconst WelcomeStep3 = ({ goNextStep, goPrevStep, setMinPrice, setMaxPrice }) => {\n  const hight = useRef({\n    hightPersent: '',\n  });\n  const dispatch = useDispatch();\n  const { industry } = useSelector((state) => state?.registration);\n  const { registrationUpdateState, registrationChangeEstimate } = bindActionCreators(actions, dispatch);\n\n  const checkForHighestPercent = () => {\n    const check = industry.map((item) => {\n      if (item.percent >= 0) {\n        return item.percent;\n      }\n    });\n    if (Math.max(...check) > 0) {\n      hight.current.hightPersent = Math.max(...check);\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const setToBenefitPriceHandler = (values) => {\n    const { staffing_costs, materials_costs, subcontracting_costs, software_costs } = values;\n\n    const estimated_benefit =\n      (Number(staffing_costs) + Number(materials_costs) + Number(subcontracting_costs) + Number(software_costs)) *\n      0.25 *\n      (Number(hight.current.hightPersent) / 100);\n    setMinPrice(() => Math.floor(estimated_benefit * 0.8));\n    setMaxPrice(() => Math.floor(estimated_benefit * 1.2));\n  };\n\n  const onFinishName = (values) => {\n    registrationUpdateState(values);\n    if (checkForHighestPercent()) {\n      setToBenefitPriceHandler(values);\n      registrationChangeEstimate('benefit');\n    } else {\n      registrationChangeEstimate('estimate');\n    }\n    goNextStep();\n  };\n\n  return (\n    <div className=\"hello-page__step\">\n      <div className=\"step--grid\">\n        <Form\n          layout=\"vertical\"\n          requiredMark={false}\n          onFinish={onFinishName}\n          // onFinishFailed={onFinishFailed}\n        >\n          <Row gutter={56}>\n            {firstRow.map((item) => (\n              <Col key={item.name} className=\"gutter-row\" span={12}>\n                <Form.Item label={item.label} name={item.name} rules={item.rules}>\n                  <Input placeholder={item.placeholder} type={item.type} suffix={item.suffix} />\n                </Form.Item>\n              </Col>\n            ))}\n          </Row>\n          <Row gutter={56}>\n            {secondRow.map((item) => (\n              <Col key={item.name} className=\"gutter-row\" span={12}>\n                <Form.Item label={item.label} name={item.name} rules={item.rules}>\n                  <Input placeholder={item.placeholder} type={item.type} suffix={item.suffix} />\n                </Form.Item>\n              </Col>\n            ))}\n          </Row>\n\n          <Form.Item className=\"control-submit\">\n            <Button type=\"primary\" htmlType=\"submit\">\n              Next\n            </Button>\n            <Button\n              type=\"text\"\n              onClick={() => {\n                goPrevStep();\n              }}>\n              Back\n            </Button>\n          </Form.Item>\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default WelcomeStep3;\n","import React, { useState, useRef } from 'react';\nimport { Carousel, Steps } from 'antd';\n\nimport WelcomeStep1 from './Step1';\nimport WelcomeStep2 from './Step2';\nimport WelcomeStep3 from './Step3';\n\nimport './style.scss';\n\nconst { Step } = Steps;\n\nconst WelcomeSteps = ({ goNextStep, setMaxPrice, setMinPrice }) => {\n  const [currentStep, setCurrentStep] = useState(0);\n  const slider = useRef();\n\n  const contentStyle = {\n    height: '160px',\n    color: '#364d79',\n    lineHeight: '160px',\n    textAlign: 'center',\n    border: '1px solid #364d79',\n  };\n\n  return (\n    <>\n      <h1>A new approach to claiming tax benefits</h1>\n      <div className=\"hello-page__description\">\n        We use technology in combination with experienced consultants to give you visibility and maximise your benefit\n      </div>\n      <div className=\"hello-page__steps\">\n        <h2>Start your work with three little steps</h2>\n        <Steps current={currentStep}>\n          <Step title=\"Company\" />\n          <Step title=\"Industry\" />\n          <Step title=\"Numbers\" />\n        </Steps>\n      </div>\n\n      <Carousel\n        ref={slider}\n        swipe={false}\n        dots={false}\n        easing=\"ease-in-out\"\n        effect=\"fade\"\n        className=\"hello-page__steps_slider\">\n        <div>\n          <WelcomeStep1\n            goNextStep={() => {\n              slider.current.next();\n              setCurrentStep(currentStep + 1);\n            }}\n          />\n        </div>\n\n        <div>\n          {currentStep === 1 && (\n            <WelcomeStep2\n              goNextStep={() => {\n                slider.current.next();\n                setCurrentStep(currentStep + 1);\n              }}\n              goPrevStep={() => {\n                slider.current.prev();\n                setCurrentStep(currentStep - 1);\n              }}\n            />\n          )}\n        </div>\n        <div>\n          <div>\n            {currentStep === 2 && (\n              <WelcomeStep3\n                setMaxPrice={setMaxPrice}\n                setMinPrice={setMinPrice}\n                goNextStep={() => {\n                  goNextStep();\n                }}\n                goPrevStep={() => {\n                  slider.current.prev();\n                  setCurrentStep(currentStep - 1);\n                }}\n              />\n            )}\n          </div>\n        </div>\n        <div>\n          <h3 style={contentStyle}>4</h3>\n        </div>\n      </Carousel>\n    </>\n  );\n};\n\nexport default WelcomeSteps;\n","import lockr from 'lockr';\nconst { REACT_APP_API_URL } = process.env;\n\nexport const setUserToUnregister = async (values) => {\n  const token = lockr.get('auth-key');\n  const {\n    staffing_costs,\n    materials_costs,\n    subcontracting_costs,\n    software_costs,\n    name,\n    number,\n    industry,\n    modal_phone,\n    modal_email,\n  } = values;\n  const arrId = industry.map((item) => item.id);\n  const formData = new FormData();\n  formData.append('industry_ids', arrId);\n  formData.append('staffing_costs', staffing_costs);\n  formData.append('materials_costs', materials_costs);\n  formData.append('subcontracting_costs', subcontracting_costs);\n  formData.append('software_costs', software_costs);\n  formData.append('name', name);\n  formData.append('number', number);\n  formData.append('modal_phone', modal_phone);\n  formData.append('modal_email', modal_email);\n  try {\n    const res = await fetch(`${REACT_APP_API_URL}/core/request-for-estimate`, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n      body: formData,\n    });\n    const resData = await res.json();\n    if (resData.success) return res;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n","import React from 'react';\nimport { Modal, Form, Input, Button, Col } from 'antd';\nimport './style.scss';\nimport { setUserToUnregister } from '../../../../core/services/setUserToUnregister';\n\nconst BenefitModal = ({ state, isModalBenefit, setIsModalBenefit, goNextStep }) => {\n  const formItemLayout = {\n    labelCol: {\n      span: 6,\n    },\n    wrapperCol: {\n      span: 14,\n    },\n  };\n  const onFinish = (values) => {\n    const { name, number, industry, materials_costs, staffing_costs, subcontracting_costs, software_costs } = state;\n    const updatedList = {\n      ...values,\n      name,\n      number,\n      industry,\n      materials_costs,\n      staffing_costs,\n      subcontracting_costs,\n      software_costs,\n    };\n    setUserToUnregister(updatedList);\n    setIsModalBenefit(() => false);\n    goNextStep();\n  };\n  return (\n    <Modal\n      visible={isModalBenefit}\n      closable={false}\n      onCancel={() => {\n        setIsModalBenefit(() => false);\n      }}\n      cancelButtonProps={{ style: { display: 'none' } }}\n      okButtonProps={{ style: { display: 'none' } }}\n      width={316}\n      className=\"modal_benefit\">\n      <Form\n        {...formItemLayout}\n        name=\"askFormBenefit\"\n        onFinish={onFinish}\n        // form={askFrom}\n      >\n        <div className=\"wrapper_info\">\n          <div className=\"promWrapperText\">\n            <p>\n              Due to the nature of your SIC code, we cannot give your company a predicted R&D benefit, please input your\n              phone number and we will give you a call to discuss this.\n            </p>\n          </div>\n          <Col className=\"gutter-row\" span={24}>\n            <Form.Item\n              name=\"modal_phone\"\n              rules={[\n                {\n                  pattern: /^(\\+)(\\d+)$/,\n                  required: true,\n                  message: 'Phone number must start with +, allowed characters is 0-9',\n                },\n              ]}>\n              <Input placeholder=\"Enter your phone number\" style={{ width: '90%', margin: '10px auto 0px auto' }} />\n            </Form.Item>\n          </Col>\n          <Col className=\"gutter-row\" span={24}>\n            <Form.Item\n              name=\"modal_email\"\n              rules={[\n                {\n                  type: 'email',\n                  required: true,\n                  message: 'Please input your email!',\n                },\n              ]}>\n              <Input placeholder=\"Enter your the email\" style={{ width: '90%', margin: '0px auto 10px auto' }} />\n            </Form.Item>\n          </Col>\n          <div className=\"wrapper-btn-modal\">\n            <Button type=\"primary\" htmlType=\"submit\">\n              Confirm\n            </Button>\n          </div>\n        </div>\n      </Form>\n    </Modal>\n  );\n};\nexport default BenefitModal;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { Button, Row, Col, Card, Spin } from 'antd';\nimport { useSelector } from 'react-redux';\nimport './style.scss';\nimport { UpVector } from '../../../components/icons';\nimport BenefitModal from './BenefitModal';\nimport actions from '../../../core/actions';\nimport { useDispatch } from 'react-redux';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport { bindActionCreators } from 'redux';\n\nconst antIcon = <LoadingOutlined style={{ fontSize: 20 }} spin />;\n\nconst Сonfirm = ({ goNextStep, goPrevStep, maxPrice, minPrice }) => {\n  const state = useSelector((state) => state.registration);\n  const [isModalBenefit, setIsModalBenefit] = useState(false);\n  const { showEstimate } = useSelector((state) => state.registration);\n  const dispatch = useDispatch();\n\n  const { registrationChangeEstimate } = bindActionCreators(actions, dispatch);\n\n  useEffect(() => {\n    if (showEstimate === 'estimate') {\n      setIsModalBenefit(() => true);\n    }\n\n    return () => {\n      setIsModalBenefit(() => false);\n    };\n  }, [showEstimate]);\n\n  const checkorForRenderBenefitModal = useCallback(() => {\n    if (showEstimate === 'benefit') {\n      return (\n        <div className=\"wrapper_total_benefit\">\n          <p>Estimated total claim benefit</p>\n          <h2>{`£${minPrice} - £${maxPrice}`}</h2>\n          {/* <div className=\"block_info_img\">\n            <h5>YoY Change:</h5>\n            <UpVector />\n            <h6>13%</h6>\n          </div> */}\n        </div>\n      );\n    } else if (showEstimate === 'estimate') {\n      return (\n        <BenefitModal\n          goNextStep={goNextStep}\n          state={state}\n          isModalBenefit={isModalBenefit}\n          setIsModalBenefit={setIsModalBenefit}\n        />\n      );\n    }\n  }, [isModalBenefit, setIsModalBenefit, showEstimate]);\n\n  if (state.showEstimate === null)\n    return (\n      <div className=\"upload-loading\">\n        <Spin indicator={antIcon} />\n      </div>\n    );\n\n  return (\n    <div className={`welcome__comfirm ${isModalBenefit ? '' : 'isBenefitModal'}`}>\n      <h1>Please confirm information to proceed to official service agreement</h1>\n      <div className=\"hello-page__description\">\n        Thank you for signing up to work with Granter or your next R&D tax credit claim. We are excited to be working\n        with you in the future.\n      </div>\n\n      {showEstimate !== null && checkorForRenderBenefitModal()}\n\n      <div className=\"welcome__comfirm_info\">\n        <Row gutter={24}>\n          <Col span={8}>\n            <Card>\n              <p>{state.name}</p>\n              <span>Company name</span>\n            </Card>\n          </Col>\n          <Col span={8}>\n            <Card>\n              <p>{state.number}</p>\n              <span>Company numbner</span>\n            </Card>\n          </Col>\n          <Col span={8}>\n            <Card>\n              {state.industry?.length > 0 &&\n                state.industry.map((item, index) => (\n                  <p key={`ind-${index}`}>\n                    {item.sic_code} - {item.display_value}\n                  </p>\n                ))}\n              <span>Industry</span>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n      <div className=\"welcome__comfirm_submit\">\n        <Button\n          type=\"primary\"\n          onClick={() => {\n            goNextStep();\n            registrationChangeEstimate(null);\n          }}>\n          Confirm\n        </Button>\n        <Button type=\"text\" onClick={goPrevStep}>\n          Back\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default Сonfirm;\n","import React, { useState } from 'react';\nimport ReactPasswordStrength from 'react-password-strength';\nimport { Form, Button, Input, Tooltip } from 'antd';\nimport { EyeOutlined, EyeInvisibleOutlined } from '@ant-design/icons';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport { fetchRegistration } from '../../../core/services';\n\nimport { IconInfo } from '../../../components/icons';\n\nimport './style.scss';\n\nconst RegistrationForm = ({ goNextStep }) => {\n  const [loader, setLoader] = useState(false);\n  const [passwordError, setPasswordError] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const [form] = Form.useForm();\n  const state = useSelector((state) => state.registration);\n  const history = useHistory();\n\n  const onFinishName = (value) => {\n    const industryIds = [];\n    state.industry.forEach((item) => {\n      industryIds.push(item.id);\n    });\n    const form = {\n      name: state.name,\n      number: state.number,\n      email: value.email,\n      phone: value.phone,\n      industry_ids: industryIds,\n      password: value.password,\n      staffing_costs: state.staffing_costs,\n      materials_costs: state.materials_costs,\n      subcontracting_costs: state.subcontracting_costs,\n      software_costs: state.software_costs,\n    };\n    setLoader(true);\n    fetchRegistration(form)\n      .then(() => {\n        setLoader(false);\n        history.push('/sign-in/');\n      })\n      .catch(() => {\n        setLoader(false);\n      });\n  };\n  const changeCallback = (score, password, isValid) => {\n    if (score.password) {\n      form.setFieldsValue({\n        password: score.password,\n      });\n      form.validateFields(['password']);\n    }\n  };\n\n  const onFieldsChange = (changedFields, allFields) => {\n    const password = changedFields.filter((item) => item.name[0] === 'password')[0];\n    if (password) {\n      if (password.errors.length) {\n        setPasswordError(true);\n      } else {\n        setPasswordError(false);\n      }\n    }\n  };\n  const onFinishFailed = (value) => {\n    //value.errorFields.\n    // if (value.errorFields.filter((item) => item.name[0] === \"password\").length)\n    //   setPasswordError(true);\n  };\n\n  return (\n    <div className=\"hello-page__registration\">\n      <h1>Welcome to Granter</h1>\n      <div className=\"hello-page__description\">\n        Thank you for signing up to a new approach for claiming tax benefits. We are excited to be working with you in\n        the future.{' '}\n      </div>\n      <Form\n        name=\"name\"\n        layout=\"vertical\"\n        form={form}\n        requiredMark={false}\n        onFinish={onFinishName}\n        onFieldsChange={onFieldsChange}\n        onFinishFailed={onFinishFailed}\n        className=\"registration--form\"\n        // onFinishFailed={onFinishFailed}\n      >\n        <Form.Item\n          label=\"Your Email\"\n          name=\"email\"\n          rules={[\n            {\n              type: 'email',\n              required: true,\n              message: 'Please input your email!',\n            },\n          ]}>\n          <Input placeholder=\"Enter the email\" />\n        </Form.Item>\n        <Form.Item\n          label=\"Your Phone Number\"\n          name=\"phone\"\n          rules={[\n            {\n              required: true,\n              message: 'Please input your Phone!',\n            },\n          ]}>\n          <Input placeholder=\"Enter the phone\" />\n        </Form.Item>\n        <div className=\"password-label\">\n          Please <b>create a secure password</b> to protect your account\n        </div>\n        <div className={`password-controle ${passwordError ? 'error' : ''}`}>\n          <button\n            className=\"password-controle--show\"\n            type=\"button\"\n            onClick={() => {\n              setShowPassword(!showPassword);\n            }}>\n            {!showPassword && <EyeInvisibleOutlined />}\n            {showPassword && <EyeOutlined />}\n          </button>\n          <ReactPasswordStrength\n            className=\"registration--form-password\"\n            minLength={8}\n            minScore={2}\n            tooShortWord=\"Too short\"\n            scoreWords={['Weak', 'Okay', 'Good', 'Strong', 'Stronger']}\n            changeCallback={changeCallback}\n            inputProps={{\n              autoComplete: 'off',\n              className: 'form-control',\n              placeholder: 'Enter the password',\n              type: showPassword ? 'text' : 'password',\n            }}\n          />\n          <div className=\"password-strength-info\">\n            <span>Password Strength</span>\n            <Tooltip\n              placement=\"top\"\n              title=\"Use upper and lower case letters, numbers and symbols like !, @, &, $, etc. Don’t use personal info (birth date, etc.)\">\n              <div className=\"info--tooltype\">\n                <IconInfo />\n              </div>\n            </Tooltip>\n          </div>\n        </div>\n        <Form.Item\n          name=\"password\"\n          rules={[\n            { min: 8, message: 'Password must be at least 8 characters!' },\n            { required: true, message: 'Please input your password!' },\n          ]}>\n          <Input type=\"password\" hidden />\n        </Form.Item>\n\n        <Form.Item className=\"registration--submit\">\n          <Button type=\"primary\" htmlType=\"submit\" loading={loader}>\n            Create an Account\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n\nexport default RegistrationForm;\n","import React, { useRef, useState } from 'react';\nimport { Carousel } from 'antd';\nimport Layout from '../../components/LayoutGuest/Layout';\n\nimport WelcomeSteps from './Steps';\nimport WelcomeСonfirm from './Сonfirm';\nimport RegistrationForm from './RegistrationForm';\n\nimport './style.scss';\n\nconst WelcomePage = (props) => {\n  const slider = useRef();\n  const [minPrice, setMinPrice] = useState(null);\n  const [maxPrice, setMaxPrice] = useState(null);\n\n  return (\n    <Layout isLogged={false} className=\"hello-page\" mode=\"registration\">\n      <div className=\"hello-page__wrapper\">\n        <Carousel\n          ref={slider}\n          swipe={false}\n          dots={false}\n          easing=\"ease-in-out\"\n          effect=\"fade\"\n          className=\"hello-page__steps_slider\">\n          <div>\n            <WelcomeSteps\n              setMinPrice={setMinPrice}\n              setMaxPrice={setMaxPrice}\n              goNextStep={() => {\n                slider.current.next();\n              }}\n            />\n          </div>\n          <div>\n            <WelcomeСonfirm\n              minPrice={minPrice}\n              maxPrice={maxPrice}\n              goNextStep={() => {\n                slider.current.next();\n              }}\n              goPrevStep={() => {\n                slider.current.prev();\n              }}\n            />\n          </div>\n          <div>\n            <RegistrationForm />\n          </div>\n        </Carousel>\n      </div>\n    </Layout>\n  );\n};\n\nexport default WelcomePage;\n","import React, { useState } from 'react';\nimport { Form, Button, Input } from 'antd';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport Layout from '../../components/LayoutGuest/Layout';\n\nimport { fetchLogin } from '../../core/services';\n\nimport './style.scss';\n\nconst LoginPage = (props) => {\n  const [loader, setLoader] = useState(false);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const onFinish = (values) => {\n    setLoader(true);\n    fetchLogin(dispatch, values, history).catch((error) => {\n      setLoader(false);\n    });\n  };\n\n  return (\n    <Layout isLogged={false} mode=\"login\" className=\"login-page\">\n      <div className=\"login-page__wrapper\">\n        <h1>Welcome to Granter</h1>\n        <Form name=\"name\" layout=\"vertical\" requiredMark={false} onFinish={onFinish} className=\"login--form\">\n          <Form.Item\n            label=\"What is your company number or email?\"\n            name=\"login\"\n            rules={[{ required: true, message: 'Please input your company name!' }]}>\n            <Input placeholder=\"Enter the email\" />\n          </Form.Item>\n          <Form.Item\n            label=\"What is your password?\"\n            name=\"password\"\n            rules={[{ required: true, message: 'Please input your password!' }]}>\n            <Input type=\"password\" placeholder=\"Enter the password\" />\n          </Form.Item>\n          <Form.Item className=\"login--submit\">\n            <Button type=\"primary\" htmlType=\"submit\" loading={loader}>\n              Log In\n            </Button>\n          </Form.Item>\n        </Form>\n        <div className=\"wrapper_forget\">\n          <span>Forgot your password?</span>\n          <span onClick={() => history.push('/reset-password/')}>Reset a password</span>\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default LoginPage;\n","import React from 'react';\nimport { Row, Col, Card, Progress } from 'antd';\n\nimport './style.scss';\n\nconst ActiveClaimsCards = ({ activeClaimData }) => {\n  const convertDate = (date, days) => {\n    function convertDate(inputFormat) {\n      function pad(s) {\n        return s < 10 ? '0' + s : s;\n      }\n      var d = new Date(inputFormat);\n      return [pad(d.getDate()), pad(d.getMonth() + 1), d.getFullYear()].join('/');\n    }\n    var newDate = new Date(date);\n    newDate.setDate(newDate.getDate() + days);\n    return convertDate(newDate);\n  };\n\n  return (\n    <div className=\"active-claims__cards\">\n      <Row gutter={16}>\n        <Col span={6}>\n          <Card title=\"Estimated total claim benefit\">\n            <div className=\"different\">\n              £{Number(activeClaimData.estimated_benefit_start).toFixed()} - £\n              {Number(activeClaimData.estimated_benefit_end).toFixed()}\n            </div>\n          </Card>\n        </Col>\n        <Col span={6}>\n          <Card title=\"Estimated total claim benefit\">\n            <div className=\"clime-progress\">\n              <Progress\n                type=\"circle\"\n                percent={Math.round(activeClaimData.estimated_total_claim_benefit_percentage * 100)}\n                width={72}\n              />\n              <div className=\"clime-progress--info\">\n                <span>Days since start</span>\n                <b>\n                  {activeClaimData.estimated_total_claim_benefit_days}{' '}\n                  {activeClaimData.estimated_total_claim_benefit_days > 1 ? 'days' : 'day'}\n                </b>\n              </div>\n            </div>\n          </Card>\n        </Col>\n        <Col span={6}>\n          <Card title=\"Project Claim Completion\">\n            <div className=\"info\">\n              <b>\n                {activeClaimData.estimated_claim_completion}{' '}\n                {activeClaimData.estimated_claim_completion > 1 ? 'days' : 'day'}\n              </b>\n              <span>{convertDate(activeClaimData.created_at, activeClaimData.estimated_claim_completion)}</span>\n            </div>\n          </Card>\n        </Col>\n        <Col span={6}>\n          <Card title=\"Project Benefit Payment\">\n            <div className=\"info\">\n              <b>\n                {activeClaimData.estimated_completion} {activeClaimData.estimated_completion > 1 ? 'days' : 'day'}\n              </b>\n              <span>{convertDate(activeClaimData.created_at, activeClaimData.estimated_completion)}</span>\n            </div>\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default ActiveClaimsCards;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport lockr from 'lockr';\nimport { Tooltip, Upload, Dropdown, Button, Spin } from 'antd';\nimport { setSkipFile, uploadFile, deleteFile } from '../../core/services';\n\nimport iconUpload from '../../assets/img/icon-upload.svg';\nimport iconUploadRed from '../../assets/img/icon-upload-red.svg';\nimport iconSkip from '../../assets/img/icon-skip.svg';\nimport iconUndo from '../../assets/img/icon-undo.svg';\nimport iconPdf from '../../assets/img/icon-pdf.svg';\nimport iconComment from '../../assets/img/icon-comment.svg';\n\nimport PDFSVG from '../../assets/img/PDF.svg';\nimport XLSXSVG from '../../assets/img/XLSX.svg';\nimport DOCSSVG from '../../assets/img/DOCS.svg';\n\nimport { IconDeleteFile } from '../icons';\n\nimport './style.scss';\nimport { Link } from 'react-router-dom';\n\nconst { Dragger } = Upload;\nconst { REACT_APP_API_URL } = process.env;\n\nconst UploadFile = ({ skipButton, file, removeButton, onRed, onAction }) => {\n  const [onRemoveDropdown, setOnRemoveDropdown] = useState(false);\n  const [extension, setExtension] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const activeClaimId = useSelector((state) => state.user.activeClaimId);\n\n  useEffect(() => {\n    if (file.url) {\n      setExtension(file.url.match(/\\.[0-9a-z]+$/i)[0]);\n    }\n  }, [file]);\n\n  const customRequest = (e) => {\n    setLoading(true);\n    uploadFile(activeClaimId, file.id, e.file).then((data) => {\n      const res = data.document;\n      res.extension = res.extension || res.url.match(/\\.[0-9a-z]+$/i)[0];\n      res.comments_count = res.comments_count || 0;\n      onAction(res);\n      setLoading(false);\n    });\n    e.onSuccess('ok');\n  };\n\n  const onDelete = () => {\n    setLoading(true);\n    setOnRemoveDropdown(false);\n    deleteFile(activeClaimId, file.id).then((data) => {\n      setLoading(false);\n      onAction(data.document);\n    });\n  };\n\n  const statusName = (s) => {\n    let status = {};\n    switch (s) {\n      case 2:\n        status = {\n          class: 'review',\n          name: 'On Review',\n        };\n        break;\n      case 3:\n        status = {\n          class: 'approved',\n          name: 'Approved',\n        };\n        break;\n\n      default:\n        break;\n    }\n    return status;\n  };\n\n  const checkForExt = (extension) => {\n    switch (extension) {\n      case '.doc':\n        return DOCSSVG;\n      case '.docx':\n        return DOCSSVG;\n      case '.pdf':\n        return PDFSVG;\n      case '.xls':\n        return XLSXSVG;\n      case '.xlsx':\n        return XLSXSVG;\n      default:\n        return extension;\n    }\n  };\n\n  if (file.status > 1 && file.is_skipped < 1)\n    return (\n      <div className={`step-file ${loading ? 'loading' : ''}`}>\n        <div className=\"step-file-loading\">\n          <Spin />\n        </div>\n        <div className=\"step-file--title\">\n          <img src={checkForExt(extension)} alt=\"\" />\n          <Link to={`/document/${file.claim_id}/${file.id}/`}>{file.name}</Link>\n          {removeButton &&\n            (!file.has_unresolved_comments ? (\n              <Dropdown\n                placement=\"bottomRight\"\n                trigger=\"click\"\n                visible={onRemoveDropdown}\n                onVisibleChange={(visible) => {\n                  if (!visible) setOnRemoveDropdown(false);\n                  onRed(visible);\n                }}\n                overlay={\n                  <div className=\"step-file--title-dropdown\">\n                    <div className=\"dropdown-title\">Are you sure you want to delete this Document?</div>\n                    <div className=\"dropdown-actions\">\n                      <Button\n                        type=\"button\"\n                        onClick={(e) => {\n                          setOnRemoveDropdown(false);\n                          onRed(false);\n                        }}>\n                        Back\n                      </Button>\n                      <Button type=\"primary\" onClick={onDelete} loading={loading}>\n                        Delete\n                      </Button>\n                    </div>\n                  </div>\n                }>\n                <button\n                  className=\"step-file--remove-button\"\n                  onClick={() => {\n                    setOnRemoveDropdown(true);\n                  }}>\n                  <IconDeleteFile />\n                </button>\n              </Dropdown>\n            ) : (\n              <Tooltip placement=\"left\" title=\"This file cannot be deleted because it contains unresolved comment\">\n                <button className=\"step-file--remove\" disabled>\n                  <IconDeleteFile />\n                </button>\n              </Tooltip>\n            ))}\n        </div>\n        <div className=\"step-file--status\">\n          <div className={`status ${statusName(file.status).class}`}>{statusName(file.status).name}</div>\n          <div className=\"comments\">\n            <img src={iconComment} alt=\"\" />\n            <span>{file.comments_count}</span>\n          </div>\n        </div>\n      </div>\n    );\n\n  return (\n    <Tooltip placement=\"rightTop\" title={file.is_skipped > 0 ? '' : 'Upload PDF, XLSX or DOCX'}>\n      <Dragger\n        name=\"file\"\n        customRequest={customRequest}\n        accept=\"application/pdf, application/msword, application/vnd.openxmlformats-officedocument.wordprocessingml.document, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\n        className={`upload-file ${loading ? 'loading' : ''} ${file.is_skipped === 1 ? 'skipped' : ''}`}\n        showUploadList={false}>\n        <div className=\"upload-loading\">\n          <Spin />\n        </div>\n        <div className=\"upload-title\">\n          <img src={iconUpload} alt=\"\" />\n          <span>{file.slug}</span>\n        </div>\n        {skipButton && (\n          <button\n            className=\"upload-skip\"\n            onClick={(e) => {\n              setLoading(true);\n              const updateFile = { ...file };\n              if (file.is_skipped === 0) {\n                e.preventDefault();\n                e.stopPropagation();\n                setSkipFile(activeClaimId, file.id).then((data) => {\n                  onAction(data.document);\n                });\n              }\n              setLoading(false);\n            }}>\n            {file.is_skipped ? (\n              <>\n                <img src={iconUndo} alt=\"\" />\n                <span>Upload</span>\n              </>\n            ) : (\n              <>\n                <img src={iconSkip} alt=\"\" />\n                <span>Skip</span>\n              </>\n            )}\n          </button>\n        )}\n        {!skipButton && (\n          <div className=\"upload-status\">\n            <img src={iconUploadRed} alt=\"\" />\n            <span>Not uploaded</span>\n          </div>\n        )}\n      </Dragger>\n    </Tooltip>\n  );\n};\n\nexport default UploadFile;\n","import React from 'react';\nimport './style.scss';\nimport { Button, Modal } from 'antd';\nimport { CloseIconModal } from '../../../../components/icons/index';\nimport { TimePicker } from 'antd';\nimport { SuffixShedulleCallIcon } from '../../../../components/icons/index';\n\nconst CommonModalShadule = ({ children, isVisibleModalSheduleCall, setIsVisibleModalSheduleCall }) => {\n  return (\n    <Modal\n      visible={isVisibleModalSheduleCall}\n      onCancel={() => {\n        setIsVisibleModalSheduleCall((prev) => !prev);\n      }}\n      cancelButtonProps={{ style: { display: 'none' } }}\n      okButtonProps={{ style: { display: 'none' } }}\n      width={700}\n      closeIcon={<CloseIconModal />}\n      wrapClassName=\"shedule_modal\">\n      <div>\n        <h2>Schedule a Call</h2>\n        <div>{children}</div>\n        <div className=\"wrapper_text_timePicker\">\n          <b>Select the time slot which suits you</b>\n          <TimePicker\n            use12Hours\n            format=\"HH:mm\"\n            // onChange={onChange}\n            placeholder=\"Today,  8:00AM\"\n            style={{ width: '180px', height: '40px' }}\n            className=\"shedule_time_picker\"\n            suffixIcon={<SuffixShedulleCallIcon />}\n\n            //hideDisabledOptions={hideDisabledOptions}\n          />\n        </div>\n        <div className=\"sheduleModal__block_btn\">\n          <Button\n            type=\"button\"\n            onClick={() => {\n              setIsVisibleModalSheduleCall((prev) => !prev);\n            }}>\n            Back\n          </Button>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Ask\n          </Button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default CommonModalShadule;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Tooltip, Skeleton, Drawer } from 'antd';\nimport { getIntroductionClaimStep } from '../../../../core/services';\nimport UploadFile from '../../../../components/UploadFile';\nimport { IconWarning } from '../../../../components/icons';\nimport iconCalendar from '../../../../assets/img/icon-calendar.svg';\nimport arrowLeft from '../../../../assets/img/arrow-left.svg';\nimport actions from '../../../../core/actions';\nimport { bindActionCreators } from 'redux';\nimport CommonModalShadule from '../CommonModalShadule';\n\nimport './style.scss';\n\nconst StepIntroduction = () => {\n  const dispatch = useDispatch();\n  const [introductionStep, setIntroductionStep] = useState(null);\n  const [detailsShow, setDetailsShow] = useState(false);\n  const [status, setStatus] = useState(0);\n  const activeClaimId = useSelector((state) => state.user.activeClaimId);\n  const activeClaimIdStatus = useSelector((state) => state.user.activeClaimId);\n  const [isVisibleModalSheduleCall, setIsVisibleModalSheduleCall] = useState(false);\n  const { showBlurSheduleCall, closeBlurSheduleCall, blurActiveSteps, setStepStatus } = bindActionCreators(\n    actions,\n    dispatch,\n  );\n\n  useEffect(() => {\n    if (isVisibleModalSheduleCall) {\n      showBlurSheduleCall();\n    }\n    if (!isVisibleModalSheduleCall) {\n      closeBlurSheduleCall();\n    }\n  }, [isVisibleModalSheduleCall]);\n\n  useEffect(() => {\n    if (activeClaimId) {\n      setIntroductionStep(null);\n      getIntroductionClaimStep(activeClaimId).then((data) => {\n        const res = { ...data };\n        res.documents = data.documents.map((item) => {\n          item.red = false;\n          return item;\n        });\n        setIntroductionStep(res);\n        const status = Math.round(\n          (res.documents.filter((item) => item.status === 3).length / res.documents.length) * 100,\n        );\n        if (status === 100) {\n          setStepStatus({\n            name: 'introduction',\n            status: true,\n          });\n        }\n        setStatus(status);\n      });\n    }\n  }, [activeClaimId]);\n\n  const onAction = (file) => {\n    const res = { ...introductionStep };\n    res.documents = introductionStep.documents.map((item) => {\n      if (item.id === file.id) item = file;\n      return item;\n    });\n    setIntroductionStep(res);\n    const status = Math.round((res.documents.filter((item) => item.status === 3).length / res.documents.length) * 100);\n    setStatus(status);\n  };\n\n  return (\n    <section className=\"active-claims__steps_step introduction\">\n      <h2\n        onClick={() => {\n          setDetailsShow(true);\n          blurActiveSteps();\n        }}>\n        <p>\n          1<i>/</i>5 Introduction\n        </p>\n        <Tooltip title=\"Required Files\">\n          <span>\n            <IconWarning />\n          </span>\n        </Tooltip>\n      </h2>\n      {!introductionStep ? (\n        <Skeleton active />\n      ) : (\n        <>\n          <div className=\"step-actions\">\n            {introductionStep.documents.map((item) => (\n              <UploadFile key={`introduction-document-${item.id}`} file={item} onAction={onAction} />\n            ))}\n          </div>\n          <div className=\"step-status\">\n            {introductionStep.call_date === null && (\n              <>\n                <button\n                  className={`step-status--call-schedule ${\n                    introductionStep.documents.filter((item) => item.status === 1).length === 3 ? 'disabled' : ''\n                  }`}\n                  onClick={() => {\n                    if (introductionStep.documents.filter((item) => item.status === 1).length === 3) return;\n                    setIsVisibleModalSheduleCall((prev) => !prev);\n                  }}>\n                  <img src={iconCalendar} alt=\"\" />\n                  <span>Schedule a call</span>\n                  {introductionStep.documents.filter((item) => item.status === 1).length === 3 && (\n                    <Tooltip\n                      title=\"Please, upload documents \n                    to be able to schedule this call. \n                    Or contact our support\">\n                      <span className=\"warning\">\n                        <IconWarning />\n                      </span>\n                    </Tooltip>\n                  )}\n                </button>\n                <CommonModalShadule\n                  isVisibleModalSheduleCall={isVisibleModalSheduleCall}\n                  setIsVisibleModalSheduleCall={setIsVisibleModalSheduleCall}>\n                  <ul className=\"list_shedule_intro\">\n                    <li>1. Introduction often takes about one hour.</li>\n                    <li>\n                      2. We want to understand the type of work you have undertaken during the relevant period(s).\n                    </li>\n                    <li>3. We will help you to gain the maximum value from our innovative client portal.</li>\n                  </ul>\n                </CommonModalShadule>\n              </>\n            )}\n            {/* <div className='step-status--call-reminder'>\n              <div className='reminder-title'>\n                <img src={iconScheduled} alt='' />\n                <span>Call today at 8:00PM</span>\n              </div>\n              <div className='reminder-description'>\n                Check email for details\n              </div>\n            </div>\n\n            <div className='step-status--call-completed'>\n              <img src={iconApproved} alt='' />\n              <span>Call is completed</span>\n            </div> */}\n\n            <div className=\"step-status\">\n              <div className={`step-status--bar ${status === 100 ? 'done' : status > 0 ? 'process' : 'waiting'}`}>\n                <span className=\"step-status--bar-fill\" style={{ width: status + '%' }} />\n                <span className=\"step-status--bar-parcent\">{status}%</span>\n                <span className=\"step-status--bar-detail\">\n                  {status === 100 ? 'Finished' : status > 0 ? 'In Progress' : 'Waiting'}\n                </span>\n              </div>\n            </div>\n          </div>\n\n          <Drawer\n            title={\n              <div className=\"ant-drawer-title-wripper\">\n                <img\n                  src={arrowLeft}\n                  alt={arrowLeft}\n                  onClick={() => {\n                    setDetailsShow(() => false);\n                    blurActiveSteps();\n                  }}\n                />\n                <p>\n                  1<i>/</i>5 Introduction\n                </p>\n                <Tooltip title=\"Required Files\" placement=\"left\">\n                  <span>\n                    <IconWarning />\n                  </span>\n                </Tooltip>\n              </div>\n            }\n            placement=\"right\"\n            width=\"320px\"\n            closable={false}\n            onClose={() => {\n              setDetailsShow(false);\n              blurActiveSteps();\n            }}\n            visible={detailsShow}\n            className=\"active-claims__step_drawer\">\n            <div className=\"step-actions\">\n              {introductionStep.documents.map((item) => {\n                return (\n                  <div\n                    className=\"row\"\n                    key={`introduction-document-${item.id}`}\n                    style={item.red ? { background: 'rgba(246, 87, 71, 0.15)' } : {}}>\n                    <UploadFile\n                      file={item}\n                      removeButton={true}\n                      onAction={onAction}\n                      onRed={(red) => {\n                        //introductionStep, setIntroductionStep\n                        const res = { ...introductionStep };\n                        res.documents.map((row) => {\n                          if (row.id === item.id) row.red = red;\n                          return row;\n                        });\n                        setIntroductionStep(res);\n                        //item.red = red;\n                      }}\n                    />\n                  </div>\n                );\n              })}\n            </div>\n            <div className=\"step-status\">\n              <div className={`step-status--bar ${status === 100 ? 'done' : status > 0 ? 'process' : 'waiting'}`}>\n                <span className=\"step-status--bar-fill\" style={{ width: status + '%' }} />\n                <span className=\"step-status--bar-parcent\">{status}%</span>\n                <span className=\"step-status--bar-detail\">\n                  {status === 100 ? 'Finished' : status > 0 ? 'In Progress' : 'Waiting'}\n                </span>\n              </div>\n            </div>\n          </Drawer>\n        </>\n      )}\n    </section>\n  );\n};\n\nexport default StepIntroduction;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Skeleton, Drawer, Tooltip } from 'antd';\nimport { IconWarning } from '../../../../components/icons';\nimport { getFinancialClaimStep } from '../../../../core/services';\nimport UploadFile from '../../../../components/UploadFile';\nimport iconCalendar from '../../../../assets/img/icon-calendar.svg';\nimport arrowLeft from '../../../../assets/img/arrow-left.svg';\nimport actions from '../../../../core/actions';\nimport { bindActionCreators } from 'redux';\nimport CommonModalShadule from '../CommonModalShadule';\n\nimport './style.scss';\n\nconst StepFinancial = () => {\n  const dispatch = useDispatch();\n  const [financialStep, setFinancialStep] = useState(null);\n  const [detailsShow, setDetailsShow] = useState(false);\n  const [status, setStatus] = useState(0);\n  const activeClaimId = useSelector((state) => state.user.activeClaimId);\n  const [isVisibleModalSheduleCall, setIsVisibleModalSheduleCall] = useState(false);\n  const { showBlurSheduleCall, closeBlurSheduleCall, blurActiveSteps, setStepStatus } = bindActionCreators(\n    actions,\n    dispatch,\n  );\n\n  useEffect(() => {\n    if (isVisibleModalSheduleCall) {\n      showBlurSheduleCall();\n    }\n    if (!isVisibleModalSheduleCall) {\n      closeBlurSheduleCall();\n    }\n  }, [isVisibleModalSheduleCall]);\n\n  useEffect(() => {\n    if (activeClaimId) {\n      setFinancialStep(null);\n      getFinancialClaimStep(activeClaimId)\n        .then((data) => {\n          const res = { ...data };\n          res.documents = data.documents.map((item) => {\n            item.red = false;\n            return item;\n          });\n          setFinancialStep(res);\n          const status = Math.round(\n            (res.documents.filter((item) => item.status === 3).length / res.documents.length) * 100,\n          );\n          if (status === 100) {\n            setStepStatus({\n              name: 'financial',\n              status: true,\n            });\n          }\n          setStatus(status);\n        })\n        .catch((error) => {});\n    }\n  }, [activeClaimId]);\n\n  const onAction = (file) => {\n    const res = { ...financialStep };\n    res.documents = financialStep.documents.map((item) => {\n      if (item.id === file.id) item = file;\n      return item;\n    });\n    setFinancialStep(res);\n    const status = Math.round((res.documents.filter((item) => item.status === 3).length / res.documents.length) * 100);\n    setStatus(status);\n  };\n\n  return (\n    <section className=\"active-claims__steps_step financial\">\n      <h2\n        onClick={() => {\n          setDetailsShow(true);\n          blurActiveSteps();\n        }}>\n        2<i>/</i>5 Financial\n      </h2>\n\n      {!financialStep ? (\n        <Skeleton active />\n      ) : (\n        <>\n          <div className=\"step-actions\">\n            {financialStep.documents.map((item) => (\n              <UploadFile key={`introduction-document-${item.id}`} file={item} skipButton={true} onAction={onAction} />\n            ))}\n          </div>\n          <div className=\"step-status\">\n            {financialStep.call_date === null && (\n              <>\n                <button\n                  className={`step-status--call-schedule ${\n                    financialStep.documents.filter((item) => item.status === 1).length === 4 ? 'disabled' : ''\n                  }`}\n                  onClick={() => {\n                    if (financialStep.documents.filter((item) => item.status === 1).length === 4) return;\n                    setIsVisibleModalSheduleCall((prev) => !prev);\n                  }}>\n                  <img src={iconCalendar} alt=\"\" />\n                  <span>Schedule a call</span>\n                  {financialStep.documents.filter((item) => item.status === 1).length === 4 && (\n                    <Tooltip\n                      title=\"Please, upload documents \n                    to be able to schedule this call. \n                    Or contact our support\">\n                      <span className=\"warning\">\n                        <IconWarning />\n                      </span>\n                    </Tooltip>\n                  )}\n                </button>\n                <CommonModalShadule\n                  isVisibleModalSheduleCall={isVisibleModalSheduleCall}\n                  setIsVisibleModalSheduleCall={setIsVisibleModalSheduleCall}>\n                  <ul className=\"list_shedule_intro\">\n                    <li>1. Introduction often takes about one hour.</li>\n                    <li>\n                      2. We want to understand the type of work you have undertaken during the relevant period(s).\n                    </li>\n                    <li>3. We will help you to gain the maximum value from our innovative client portal.</li>\n                  </ul>\n                </CommonModalShadule>\n              </>\n            )}\n            {/* <div className='step-status--call-reminder'>\n              <div className='reminder-title'>\n                <img src={iconScheduled} alt='' />\n                <span>Call today at 8:00PM</span>\n              </div>\n              <div className='reminder-description'>\n                Check email for details\n              </div>\n            </div>\n\n            <div className='step-status--call-completed'>\n              <img src={iconApproved} alt='' />\n              <span>Call is completed</span>\n            </div> */}\n\n            <div className=\"step-status\">\n              <div className={`step-status--bar ${status === 100 ? 'done' : status > 0 ? 'process' : 'waiting'}`}>\n                <span className=\"step-status--bar-fill\" style={{ width: status + '%' }} />\n                <span className=\"step-status--bar-parcent\">{status}%</span>\n                <span className=\"step-status--bar-detail\">\n                  {status === 100 ? 'Finished' : status > 0 ? 'In Progress' : 'Waiting'}\n                </span>\n              </div>\n            </div>\n          </div>\n\n          <Drawer\n            title={\n              <div className=\"ant-drawer-title-wripper\">\n                <img\n                  src={arrowLeft}\n                  alt={'ArrowLeft'}\n                  onClick={() => {\n                    setDetailsShow(() => false);\n                    blurActiveSteps();\n                  }}\n                />\n                <p>\n                  2<i>/</i>5 Financial\n                </p>\n              </div>\n            }\n            placement=\"right\"\n            width=\"320px\"\n            closable={false}\n            onClose={() => {\n              setDetailsShow(false);\n              blurActiveSteps();\n            }}\n            visible={detailsShow}\n            className=\"active-claims__step_drawer\">\n            <div className=\"step-actions\">\n              {financialStep.documents.map((item) => {\n                return (\n                  <div\n                    className=\"row\"\n                    key={`introduction-document-${item.id}`}\n                    style={item.red ? { background: 'rgba(246, 87, 71, 0.15)' } : {}}>\n                    <UploadFile\n                      file={item}\n                      removeButton={true}\n                      skipButton={true}\n                      onAction={onAction}\n                      onRed={(red) => {\n                        //introductionStep, setIntroductionStep\n                        const res = { ...financialStep };\n                        res.documents.map((row) => {\n                          if (row.id === item.id) row.red = red;\n                          return row;\n                        });\n                        setFinancialStep(res);\n                        //item.red = red;\n                      }}\n                    />\n                  </div>\n                );\n              })}\n            </div>\n            <div className=\"step-status\">\n              <div className={`step-status--bar ${status === 100 ? 'done' : status > 0 ? 'process' : 'waiting'}`}>\n                <span className=\"step-status--bar-fill\" style={{ width: status + '%' }} />\n                <span className=\"step-status--bar-parcent\">{status}%</span>\n                <span className=\"step-status--bar-detail\">\n                  {status === 100 ? 'Finished' : status > 0 ? 'In Progress' : 'Waiting'}\n                </span>\n              </div>\n            </div>\n          </Drawer>\n        </>\n      )}\n    </section>\n  );\n};\n\nexport default StepFinancial;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport lockr from 'lockr';\nimport { Collapse, Upload, Dropdown, Button, Spin } from 'antd';\nimport { removeProject } from '../../core/services';\n\nimport arrow from '../../assets/img/icon-arrow-dropdown.svg';\nimport iconUpload from '../../assets/img/icon-upload.svg';\nimport iconUploadRed from '../../assets/img/icon-upload-red.svg';\nimport iconSkip from '../../assets/img/icon-skip.svg';\nimport iconFileS from '../../assets/img/icon-file-s.svg';\nimport iconPdf from '../../assets/img/icon-pdf.svg';\nimport iconFile from '../../assets/img/icon-file-s.svg';\n\nimport PDFSVG from '../../assets/img/PDF.svg';\nimport XLSXSVG from '../../assets/img/XLSX.svg';\nimport DOCSSVG from '../../assets/img/DOCS.svg';\n\nimport { IconDeleteFile } from '../icons';\n\nimport './style.scss';\nimport { Link } from 'react-router-dom';\n\nconst { Panel } = Collapse;\n\nconst { Dragger } = Upload;\nconst { REACT_APP_API_URL } = process.env;\n\nconst Project = ({ file, removeButton, onRed, onAction, index }) => {\n  const [onRemoveDropdown, setOnRemoveDropdown] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const activeClaimId = useSelector((state) => state.user.activeClaimId);\n  const history = useHistory();\n\n  const onDelete = () => {\n    setLoading(true);\n    setOnRemoveDropdown(false);\n    removeProject(activeClaimId, file.id).then((data) => {\n      setLoading(false);\n      onAction(file.id);\n    });\n  };\n\n  const statusName = (s) => {\n    let status = {};\n    switch (s) {\n      case 2:\n        status = {\n          class: 'review',\n          name: 'On Review',\n        };\n        break;\n      case 3:\n        status = {\n          class: 'approved',\n          name: 'Approved',\n        };\n        break;\n\n      default:\n        break;\n    }\n    return status;\n  };\n\n  const checkForExt = (extension) => {\n    switch (extension) {\n      case '.doc':\n        return DOCSSVG;\n      case '.docx':\n        return DOCSSVG;\n      case '.pdf':\n        return PDFSVG;\n      case '.xls':\n        return XLSXSVG;\n      case '.xlsx':\n        return XLSXSVG;\n      default:\n        return extension;\n    }\n  };\n\n  const onEditProject = () => {\n    history.push(`/project/${activeClaimId}/${file.id}`);\n    // const { addProjectDetails } = bindActionCreators(actions, dispatch);\n  };\n\n  return (\n    <div className={`step-file step-project ${loading ? 'loading' : ''}`}>\n      <div className=\"step-file-loading\">\n        <Spin />\n      </div>\n      <div className=\"step-file--title\">\n        <img src={iconFileS} alt=\"\" />\n        <Button type=\"link\" onClick={onEditProject}>\n          {file.title}\n        </Button>\n        {removeButton && (\n          <Dropdown\n            placement=\"bottomRight\"\n            trigger=\"click\"\n            visible={onRemoveDropdown}\n            onVisibleChange={(visible) => {\n              if (!visible) setOnRemoveDropdown(false);\n              onRed(visible);\n            }}\n            overlay={\n              <div className=\"step-file--title-dropdown\">\n                <div className=\"dropdown-title\">Are you sure you want to delete this Document?</div>\n                <div className=\"dropdown-actions\">\n                  <Button\n                    type=\"button\"\n                    onClick={(e) => {\n                      setOnRemoveDropdown(false);\n                      onRed(false);\n                    }}>\n                    Back\n                  </Button>\n                  <Button type=\"primary\" onClick={onDelete} loading={loading}>\n                    Delete\n                  </Button>\n                </div>\n              </div>\n            }>\n            <button\n              className=\"step-file--remove-button\"\n              onClick={() => {\n                setOnRemoveDropdown(true);\n              }}>\n              <IconDeleteFile />\n            </button>\n          </Dropdown>\n        )}\n      </div>\n      <div className=\"step-file--status\">\n        <div className={`status ${statusName(file.status).class}`}>{statusName(file.status).name}</div>\n      </div>\n      {file.documents?.length > 0 && (\n        <Collapse bordered={false} ghost={true} expandIcon={() => <img src={arrow} alt={arrow} />}>\n          <Panel header={`Show All (${file.documents.length})`} key=\"1\">\n            {file.documents.map((item) => (\n              <div key={`sub-${item.id}`} className=\"step-sub\">\n                <div className=\"step-sub__title\">\n                  <img src={checkForExt(item.url.match(/\\.[0-9a-z]+$/i)[0])} alt=\"project\" />\n                  <span>{item.name}</span>\n                </div>\n                {/* <div className=\"step-file--status\">\n                  <div className={`status ${statusName(item.status).class}`}>{statusName(item.status).name}</div>\n                </div> */}\n              </div>\n            ))}\n          </Panel>\n        </Collapse>\n      )}\n    </div>\n  );\n};\n\nexport default Project;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { bindActionCreators } from 'redux';\nimport { Tooltip, Skeleton, Upload, Spin, Modal, Button, Drawer } from 'antd';\nimport actions from '../../../../core/actions';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport { getTechnicalClaimStep, setNewProject, removeProject } from '../../../../core/services';\nimport Project from '../../../../components/Project';\nimport CommonModalShadule from '../CommonModalShadule';\nimport { IconWarning, CloseIconModal } from '../../../../components/icons';\nimport arrowLeft from '../../../../assets/img/arrow-left.svg';\nimport iconCalendar from '../../../../assets/img/icon-calendar.svg';\nimport iconFile from '../../../../assets/img/icon-file-b.svg';\nimport iconAddProject from '../../../../assets/img/icon-add-project.svg';\n\nimport './style.scss';\n\nconst { Dragger } = Upload;\nconst antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\n\nconst StepTechnical = () => {\n  const [technicalStep, setTechnicalStep] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [status, setStatus] = useState(0);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [isVisibleModalSheduleCall, setIsVisibleModalSheduleCall] = useState(false);\n  const [newProjectId, setNewProjectId] = useState(null);\n  const [detailsShow, setDetailsShow] = useState(false);\n  const activeClaimId = useSelector((state) => state.user.activeClaimId);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { blurActiveSteps, setStepStatus } = bindActionCreators(actions, dispatch);\n\n  useEffect(() => {\n    if (activeClaimId) {\n      setTechnicalStep(null);\n      getTechnicalClaimStep(activeClaimId).then((data) => {\n        const result = { ...data };\n        result.documents = data.documents.filter((item) => item.title.length && item.start_date && item.end_date);\n        data.documents.forEach((item) => {\n          if (item.title === '' || !item.start_date || !item.end_date) {\n            removeProject(item.claim_id, item.id);\n          }\n        });\n        setTechnicalStep(result);\n        const { addProjectsDetails } = bindActionCreators(actions, dispatch);\n        addProjectsDetails(result.documents);\n        const status = Math.round(\n          (data.documents.filter((item) => item.status === 3).length / data.documents.length) * 100,\n        );\n        if (status === 100) {\n          setStepStatus({\n            name: 'technical',\n            status: true,\n          });\n        }\n        setStatus(status);\n      });\n    }\n  }, [activeClaimId]);\n\n  const customRequest = (e) => {\n    setLoading(true);\n    const form = {\n      main_document: e.file,\n    };\n    setNewProject(activeClaimId, form).then((data) => {\n      // setLoading(false);\n      // setModalVisible(true);\n      // setNewProjectId(data.id);\n      const { addProjectsDetails } = bindActionCreators(actions, dispatch);\n      const res = { ...technicalStep };\n      res.documents.push(data);\n      addProjectsDetails(res.documents);\n      // setTechnicalStep(res);\n      setTimeout(() => {\n        history.push(`/project/${activeClaimId}/${data.id}`);\n        blurActiveSteps();\n      }, 150);\n    });\n    e.onSuccess('ok');\n  };\n\n  const uploadInformation = () => {\n    history.push(`/project/${activeClaimId}/${newProjectId}`);\n  };\n\n  const onAction = (id) => {\n    const res = { ...technicalStep };\n    res.documents = technicalStep.documents.filter((item) => item.id !== id);\n    setTechnicalStep(res);\n    const status = res.documents.filter((item) => item.status === 3).length\n      ? Math.round((res.documents.filter((item) => item.status === 3).length / res.documents.length) * 100)\n      : 0;\n    setStatus(status);\n  };\n\n  return (\n    <>\n      <section className=\"active-claims__steps_step technical\">\n        <h2\n          onClick={() => {\n            setDetailsShow(true);\n            blurActiveSteps();\n          }}>\n          <p>\n            3<i>/</i>5 Technical\n          </p>\n          <Tooltip title=\"Required Files\">\n            <span>\n              <IconWarning />\n            </span>\n          </Tooltip>\n        </h2>\n        {!technicalStep ? (\n          <Skeleton active />\n        ) : (\n          <div className=\"technical__scroll\">\n            <div className=\"step-actions\">\n              <button\n                className=\"technical__add-project_button\"\n                onClick={() => {\n                  setModalVisible(true);\n                  blurActiveSteps();\n                }}>\n                <img src={iconAddProject} alt=\"\" />\n                <span>Add a Project</span>\n              </button>\n              {/* <Dragger\n                name=\"file\"\n                customRequest={customRequest}\n                accept=\"application/pdf, application/msword, application/vnd.openxmlformats-officedocument.wordprocessingml.document, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\n                className={`upload-file ${loading ? 'loading' : ''}`}\n                showUploadList={false}>\n                <div className=\"upload-loading\">\n                  <Spin indicator={antIcon} />\n                </div>\n                <div className=\"upload-title\">\n                  <img src={iconAddProject} alt=\"\" />\n                  <span>Add a Project</span>\n                </div>\n              </Dragger> */}\n              {technicalStep.documents.map((item, index) => (\n                <Project\n                  key={`technical-project-${item.id}`}\n                  file={item}\n                  index={technicalStep.documents.length > 1 ? index + 1 : null}\n                />\n              ))}\n            </div>\n            <div className=\"step-status\">\n              {technicalStep.call_date === null && (\n                <>\n                  <button\n                    className={`step-status--call-schedule ${technicalStep.documents.length === 0 ? 'disabled' : ''}`}\n                    onClick={() => {\n                      if (technicalStep.documents.length === 0) return;\n                      setIsVisibleModalSheduleCall((prev) => !prev);\n                    }}>\n                    <img src={iconCalendar} alt=\"\" />\n                    <span>Schedule a call</span>\n                    {technicalStep.documents.length === 0 && (\n                      <Tooltip\n                        title=\"Please, upload documents \n                      to be able to schedule this call. \n                      Or contact our support\">\n                        <span className=\"warning\">\n                          <IconWarning />\n                        </span>\n                      </Tooltip>\n                    )}\n                  </button>\n                  <CommonModalShadule\n                    isVisibleModalSheduleCall={isVisibleModalSheduleCall}\n                    setIsVisibleModalSheduleCall={setIsVisibleModalSheduleCall}>\n                    <ul className=\"list_shedule_intro\">\n                      <li>1. Introduction often takes about one hour.</li>\n                      <li>\n                        2. We want to understand the type of work you have undertaken during the relevant period(s).\n                      </li>\n                      <li>3. We will help you to gain the maximum value from our innovative client portal.</li>\n                    </ul>\n                  </CommonModalShadule>\n                </>\n              )}\n              {/* <div className='step-status--call-reminder'>\n              <div className='reminder-title'>\n                <img src={iconScheduled} alt='' />\n                <span>Call today at 8:00PM</span>\n              </div>\n              <div className='reminder-description'>\n                Check email for details\n              </div>\n            </div>\n\n            <div className='step-status--call-completed'>\n              <img src={iconApproved} alt='' />\n              <span>Call is completed</span>\n            </div> */}\n\n              <div className=\"step-status\">\n                <div className={`step-status--bar ${status === 100 ? 'done' : status > 0 ? 'process' : 'waiting'}`}>\n                  <span className=\"step-status--bar-fill\" style={{ width: status + '%' }} />\n                  <span className=\"step-status--bar-parcent\">{status}%</span>\n                  <span className=\"step-status--bar-detail\">\n                    {status === 100 ? 'Finished' : status > 0 ? 'In Progress' : 'Waiting'}\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </section>\n\n      <Modal\n        title=\"Basic Modal\"\n        className=\"technical__modal\"\n        visible={modalVisible}\n        width={700}\n        onCancel={() => {\n          setModalVisible(false);\n          blurActiveSteps();\n        }}\n        footer={false}\n        title={false}\n        closeIcon={<CloseIconModal />}>\n        <h2>Create your first project</h2>\n        <div className=\"technical__modal_description\">\n          <p>Upload project information using our online tool. </p>\n          <p>\n            Alternatively, you can upload <br />a pdf or word document for your consultant to review.\n          </p>\n        </div>\n        <div className=\"technical__modal_actions\">\n          <Dragger\n            name=\"file\"\n            customRequest={customRequest}\n            accept=\"application/pdf, application/msword, application/vnd.openxmlformats-officedocument.wordprocessingml.document, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\n            className={`upload-file ${loading ? 'loading' : ''}`}\n            showUploadList={false}>\n            <Button type=\"button\" loading={loading}>\n              <img src={iconFile} alt=\"\" />\n              <span>Add file</span>\n            </Button>\n          </Dragger>\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              history.push(`/project/${activeClaimId}`);\n              setModalVisible(false);\n              blurActiveSteps();\n            }}>\n            Add your First Project\n          </Button>\n        </div>\n      </Modal>\n\n      <Drawer\n        title={\n          <div className=\"ant-drawer-title-wripper\">\n            <img\n              src={arrowLeft}\n              alt={arrowLeft}\n              onClick={() => {\n                setDetailsShow(() => false);\n                blurActiveSteps();\n              }}\n            />\n            <p>\n              3<i>/</i>5 Technical\n            </p>\n            <Tooltip title=\"Required Files\" placement=\"left\">\n              <span>\n                <IconWarning />\n              </span>\n            </Tooltip>\n          </div>\n        }\n        placement=\"right\"\n        width=\"320px\"\n        closable={false}\n        onClose={() => {\n          setDetailsShow(false);\n          blurActiveSteps();\n        }}\n        visible={detailsShow}\n        className=\"active-claims__step_drawer\">\n        <div className=\"drawer-technical-dragger\">\n          <button>\n            <div className=\"upload-title\">\n              <img src={iconAddProject} alt=\"\" />\n              <span>Add a Project</span>\n            </div>\n          </button>\n          {/* <Dragger\n            name=\"file\"\n            customRequest={customRequest}\n            accept=\"application/pdf, application/msword, application/vnd.openxmlformats-officedocument.wordprocessingml.document, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\n            className={`upload-file ${loading ? 'loading' : ''}`}\n            showUploadList={false}>\n            <div className=\"upload-loading\">\n              <Spin indicator={antIcon} />\n            </div>\n          </Dragger> */}\n        </div>\n        <div className=\"step-actions\">\n          {technicalStep?.documents.map((item, index) => {\n            return (\n              <div\n                className=\"row\"\n                key={`introduction-document-${item.id}`}\n                style={item.red ? { background: 'rgba(246, 87, 71, 0.15)' } : {}}>\n                <Project\n                  file={item}\n                  removeButton={true}\n                  onAction={onAction}\n                  index={technicalStep.documents.length > 1 ? index + 1 : null}\n                  onRed={(red) => {\n                    //introductionStep, setIntroductionStep\n                    const res = { ...technicalStep };\n                    res.documents.map((row) => {\n                      if (row.id === item.id) row.red = red;\n                      return row;\n                    });\n                    setTechnicalStep(res);\n                    //item.red = red;\n                  }}\n                />\n              </div>\n            );\n          })}\n        </div>\n        <div className=\"step-status\">\n          <div className={`step-status--bar ${status === 100 ? 'done' : status > 0 ? 'process' : 'waiting'}`}>\n            <span className=\"step-status--bar-fill\" style={{ width: status + '%' }} />\n            <span className=\"step-status--bar-parcent\">{status}%</span>\n            <span className=\"step-status--bar-detail\">\n              {status === 100 ? 'Finished' : status > 0 ? 'In Progress' : 'Waiting'}\n            </span>\n          </div>\n        </div>\n      </Drawer>\n    </>\n  );\n};\n\nexport default StepTechnical;\n","import React, { useState, useEffect } from 'react';\nimport { Skeleton, Tooltip } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport UploadFile from '../../../../components/UploadFile';\n\nimport actions from '../../../../core/actions';\nimport { getDeliverablesClaimStep } from '../../../../core/services';\nimport IconInfo from '../../../../assets/img/icon-info.svg';\n\nimport './style.scss';\n\nconst StepDeliverables = () => {\n  const [deliverablesStep, setDeliverablesStep] = useState(null);\n  const [status, setStatus] = useState(0);\n  const activeClaimId = useSelector((state) => state.user.activeClaimId);\n  const dispatch = useDispatch();\n  const { setStepStatus } = bindActionCreators(actions, dispatch);\n\n  useEffect(() => {\n    if (activeClaimId) {\n      setDeliverablesStep(null);\n      getDeliverablesClaimStep(activeClaimId).then((data) => {\n        setDeliverablesStep(data);\n        const status = Math.round(\n          (data.documents.filter((item) => item.status === 3).length / data.documents.length) * 100,\n        );\n        if (status === 100) {\n          setStepStatus({\n            name: 'deliverables',\n            status: true,\n          });\n        }\n        setStatus(status);\n      });\n    }\n  }, [activeClaimId]);\n\n  const onAction = (file) => {\n    const res = { ...deliverablesStep };\n    res.documents = deliverablesStep.documents.map((item) => {\n      if (item.id === file.id) item = file;\n      return item;\n    });\n    setDeliverablesStep(res);\n    const status = Math.round((res.documents.filter((item) => item.status === 3).length / res.documents.length) * 100);\n    setStatus(status);\n  };\n\n  return (\n    <section className=\"active-claims__steps_step deliverables\">\n      <h2>\n        <p>\n          4<i>/</i>5 Deliverables\n        </p>\n        <Tooltip title=\"You don’t have to upload files for this stage. The Gratner team will do it for you when all the previous stages will be approved\">\n          <span>\n            <img src={IconInfo} alt=\"\" />\n          </span>\n        </Tooltip>\n      </h2>\n      {!deliverablesStep ? (\n        <Skeleton active />\n      ) : (\n        <>\n          <div className=\"step-actions\">\n            {deliverablesStep.documents.map((item) =>\n              item.url ? (\n                <UploadFile key={`deliverables-document-${item.id}`} file={item} onAction={onAction} />\n              ) : (\n                <div className=\"step-report-empty\" key={`deliverables-document-${item.id}`}>\n                  {item.name}\n                </div>\n              ),\n            )}\n            {/* <div className=\"step-report-empty\">Technical report narrative</div>\n            <div className=\"step-report-empty\">Financial analysis</div> */}\n          </div>\n          <div className=\"step-status\">\n            <div className={`step-status--bar ${status === 100 ? 'done' : status > 0 ? 'process' : 'waiting'}`}>\n              <span className=\"step-status--bar-fill\" style={{ width: status + '%' }} />\n              <span className=\"step-status--bar-parcent\">{status}%</span>\n              <span className=\"step-status--bar-detail\">\n                {status === 100 ? 'Finished' : status > 0 ? 'In Progress' : 'Waiting'}\n              </span>\n            </div>\n          </div>\n        </>\n      )}\n    </section>\n  );\n};\n\nexport default StepDeliverables;\n","import React, { useState, useEffect } from 'react';\nimport { Skeleton, Tooltip, Button } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { useHistory } from 'react-router-dom';\n\nimport actions from '../../../../core/actions';\nimport UploadFile from '../../../../components/UploadFile';\n\nimport { getSubmissionClaimStep, setApproveClime } from '../../../../core/services';\nimport IconInfo from '../../../../assets/img/icon-info.svg';\n\nimport './style.scss';\n\nconst StepSubmission = () => {\n  const [submissionStep, setSubmissionStep] = useState(null);\n  const [status, setStatus] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const activeClaimId = useSelector((state) => state.user.activeClaimId);\n  const activeClaimIdStatus = useSelector((state) => state.claims.activeClaimStatus);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { setStepStatus, setFinalReport } = bindActionCreators(actions, dispatch);\n\n  const activeClaimIdDone = () => {\n    return (\n      activeClaimIdStatus.introduction &&\n      activeClaimIdStatus.financial &&\n      activeClaimIdStatus.technical &&\n      activeClaimIdStatus.deliverables &&\n      activeClaimIdStatus.submission\n    );\n  };\n\n  useEffect(() => {\n    if (activeClaimId) {\n      setSubmissionStep(null);\n      getSubmissionClaimStep(activeClaimId).then((data) => {\n        setSubmissionStep(data);\n        const status = Math.round(\n          (data.documents.filter((item) => item.status === 3).length / data.documents.length) * 100,\n        );\n        if (status === 100) {\n          setStepStatus({\n            name: 'submission',\n            status: true,\n          });\n        }\n        setStatus(status);\n      });\n    }\n  }, [activeClaimId]);\n\n  const onAction = (file) => {\n    const res = { ...submissionStep };\n    res.documents = submissionStep.documents.map((item) => {\n      if (item.id === file.id) item = file;\n      return item;\n    });\n    setSubmissionStep(res);\n    const status = Math.round((res.documents.filter((item) => item.status === 3).length / res.documents.length) * 100);\n    setStatus(status);\n  };\n\n  const approveClaim = () => {\n    if (!activeClaimIdDone) return;\n    setLoading(true);\n    setApproveClime(activeClaimId)\n      .then((data) => {\n        const res = {\n          ...data,\n          claimId: activeClaimId,\n        };\n        setFinalReport(res);\n        history.push('/active-claims/congratulations');\n        setLoading(false);\n      })\n      .catch((error) => {\n        setLoading(false);\n      });\n  };\n\n  return (\n    <section className=\"active-claims__steps_step deliverables\">\n      <h2>\n        <p>\n          5<i>/</i>5 Submission\n        </p>\n        <Tooltip title=\"You don’t have to upload files for this stage. The Gratner team will do it for you when all the previous stages will be approved\">\n          <span>\n            <img src={IconInfo} alt=\"\" />\n          </span>\n        </Tooltip>\n      </h2>\n      {!submissionStep ? (\n        <Skeleton active />\n      ) : (\n        <>\n          <div className=\"step-actions\">\n            {submissionStep.documents.map((item) =>\n              item.url ? (\n                <UploadFile key={`submission-document-${item.id}`} file={item} onAction={onAction} />\n              ) : (\n                <div className=\"step-report-empty\" key={`submission-document-${item.id}`}>\n                  {item.name}\n                </div>\n              ),\n            )}\n            {/* <div className=\"step-report-empty\">Technical report narrative</div>\n            <div className=\"step-report-empty\">Financial analysis</div> */}\n          </div>\n          <div className=\"step-status\">\n            <Button\n              type=\"primary\"\n              loading={loading}\n              disabled={!activeClaimIdDone()}\n              className=\"step-status--approve\"\n              onClick={approveClaim}>\n              Approve\n            </Button>\n            <div className={`step-status--bar ${status === 100 ? 'done' : status > 0 ? 'process' : 'waiting'}`}>\n              <span className=\"step-status--bar-fill\" style={{ width: status + '%' }} />\n              <span className=\"step-status--bar-parcent\">{status}%</span>\n              <span className=\"step-status--bar-detail\">\n                {status === 100 ? 'Finished' : status > 0 ? 'In Progress' : 'Waiting'}\n              </span>\n            </div>\n          </div>\n        </>\n      )}\n    </section>\n  );\n};\n\nexport default StepSubmission;\n","import React from 'react';\n\nimport StepIntroduction from './StepIntroduction';\nimport StepFinancial from './StepFinancial';\nimport StepTechnical from './StepTechnical';\nimport StepDeliverables from './StepDeliverables';\nimport StepSubmission from './StepSubmission';\n\nimport './style.scss';\n\nconst ActiveClaimsSteps = () => {\n  return (\n    <div className=\"active-claims__steps\">\n      <StepIntroduction />\n      <StepFinancial />\n      <StepTechnical />\n      <StepDeliverables />\n      <StepSubmission />\n    </div>\n  );\n};\n\nexport default ActiveClaimsSteps;\n","import React, { useEffect, useState } from 'react';\nimport { Skeleton } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Layout from '../../components/LayoutDashboard/Layout';\nimport ActiveClaimsCards from './ActiveClaimsCards';\nimport ActiveClaimsSteps from './ActiveClaimsSteps';\n\nimport { getActiveClaimData } from '../../core/services';\n\nimport './style.scss';\n\nconst ActiveClaimsPage = (props) => {\n  const [activeClaimData, setActiveClaimData] = useState(null);\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state.user.currentCompany);\n  const userData = useSelector((state) => state.user.data);\n\n  useEffect(() => {\n    if (user) {\n      getActiveClaimData(dispatch, user.id).then((data) => {\n        setActiveClaimData(data);\n      });\n    }\n  }, [user]);\n\n  return (\n    <Layout isLogged={false} className=\"dashboard\">\n      <div className=\"active-claims\">\n        {!activeClaimData ? (\n          <Skeleton active />\n        ) : (\n          <>\n            <div className=\"active-claims__title\">\n              <h2>{activeClaimData.title}</h2>\n              {activeClaimData.start_date && activeClaimData.end_date && (\n                <time>\n                  {activeClaimData.start_date} – {activeClaimData.end_date}\n                </time>\n              )}\n            </div>\n\n            {userData.email_verified_at ? (\n              !activeClaimData.estimated_benefit_start && !activeClaimData.estimated_benefit_end ? (\n                <div className=\"active-claims__verify-message\">TBC</div>\n              ) : (\n                <ActiveClaimsCards activeClaimData={activeClaimData} />\n              )\n            ) : (\n              <div>\n                Welcome! <b>Verify your email</b> to see approximate benefits\n              </div>\n            )}\n          </>\n        )}\n\n        {/* <div className='active-claims__title'>\n          <h2>Active claim title</h2>\n          <time>01/01/2018 – 31/12/2018</time>\n        </div>\n        <div className='active-claims__verify-message'>\n          Welcome! Verify your email to see approximate benefits\n        </div>\n        <ActiveClaimsCards /> */}\n        <ActiveClaimsSteps />\n      </div>\n    </Layout>\n  );\n};\n\nexport default ActiveClaimsPage;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Skeleton } from 'antd';\n\nimport Layout from '../../components/LayoutDashboard/Layout';\nimport { getfutureClaimData } from '../../core/services';\n\nimport './style.scss';\n\nconst FutureClaimsPage = () => {\n  const [futureClaimData, setFutureClaimData] = useState(null);\n  const user = useSelector((state) => state.user.currentCompany);\n\n  useEffect(() => {\n    if (user) {\n      getfutureClaimData(user.id).then((data) => {\n        setFutureClaimData(data);\n      });\n    }\n  }, [user]);\n\n  return (\n    <Layout isLogged={false} className=\"dashboard\">\n      <div className=\"future-claims\">\n        {!futureClaimData ? (\n          <Skeleton active />\n        ) : (\n          <ul className=\"future-claims__list\">\n            {futureClaimData.map((item) => (\n              <li key={`claim-${item.id}`} className=\"future-claim\">\n                <div className=\"future-claim--title\">{item.title}</div>\n                <div className=\"future-claim--row\">\n                  <span>R&D Tax Relief Claim</span>\n                  <b>{item.start_date}</b>\n                </div>\n                <div className=\"future-claim--row\">\n                  <span>Estimated completion</span>\n                  <b>{item.end_date}</b>\n                </div>\n                <div className=\"future-claim--row\">\n                  <span>Estimated benefit</span>\n                  <b>£ {item.estimated_benefit}</b>\n                </div>\n                <div className=\"future-claim--row\">\n                  <span>Consultant fee</span>\n                  <b>20%</b>\n                </div>\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    </Layout>\n  );\n};\n\nexport default FutureClaimsPage;\n","import React, { useState, useEffect } from 'react';\n\nimport './style.scss';\n\nconst DocumentViewer = ({ url }) => {\n  const [src, setSrc] = useState('');\n\n  useEffect(() => {\n    if (!url) return;\n    if (url.match(/\\.[0-9a-z]+$/i)[0] === '.pdf') {\n      setSrc(url);\n    } else {\n      setSrc(`https://view.officeapps.live.com/op/embed.aspx?src=${url}`);\n    }\n  }, [url]);\n\n  return (\n    <div className=\"document-viewer\">\n      <iframe src={src} frameBorder=\"no\" seamless title={src} />\n    </div>\n  );\n};\n\nexport default DocumentViewer;\n","import React, { useState } from 'react';\nimport { Checkbox, Dropdown, Button } from 'antd';\n\nimport { IconDeleteFile } from '../../icons';\n\nimport './style.scss';\n\nconst Reply = ({ reply, onReplyDelete }) => {\n  const [onRemoveDropdown, setOnRemoveDropdown] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const onDelete = () => {\n    setLoading(true);\n    onReplyDelete(reply.id);\n  };\n\n  const convertDate = (date) => {\n    function convertDate(inputFormat) {\n      function pad(s) {\n        return s < 10 ? '0' + s : s;\n      }\n      var d = new Date(inputFormat);\n      return [pad(d.getDate()), pad(d.getMonth() + 1), d.getFullYear()].join('/');\n    }\n    return convertDate(date);\n  };\n\n  return (\n    <div className={`comment__section ${onRemoveDropdown ? 'red' : ''}`}>\n      <div className=\"comment--header\">\n        <div className=\"comment--author\">\n          <div className=\"comment--author-info\">\n            <span>{reply.user}</span>\n            <time>{convertDate(reply.updated_at)}</time>\n          </div>\n        </div>\n        <Dropdown\n          placement=\"bottomRight\"\n          trigger=\"click\"\n          visible={onRemoveDropdown}\n          onVisibleChange={(visible) => {\n            if (!visible) setOnRemoveDropdown(false);\n          }}\n          overlay={\n            <div className=\"step-file--title-dropdown\">\n              <div className=\"dropdown-title\">Are you sure you want to delete this Reply?</div>\n              <div className=\"dropdown-actions\">\n                <Button\n                  type=\"button\"\n                  onClick={() => {\n                    setOnRemoveDropdown(false);\n                  }}>\n                  Back\n                </Button>\n                <Button type=\"primary\" onClick={onDelete} loading={loading}>\n                  Delete\n                </Button>\n              </div>\n            </div>\n          }>\n          <button\n            className=\"step-file--remove\"\n            onClick={() => {\n              setOnRemoveDropdown(true);\n            }}>\n            <IconDeleteFile />\n          </button>\n        </Dropdown>\n        {/* <Checkbox className=\"reply-checkbox\" /> */}\n      </div>\n      <div\n        className=\"comment--message\"\n        dangerouslySetInnerHTML={{\n          __html: reply.text.replace(/(?:\\r\\n|\\r|\\n)/g, '<br>'),\n        }}\n      />\n    </div>\n  );\n};\n\nexport default Reply;\n","import React, { useState } from 'react';\nimport { Checkbox, Input, Collapse, Dropdown, Button, Skeleton } from 'antd';\n\nimport Reply from './Reply';\nimport arrow from '../../assets/img/icon-arrow-dropdown.svg';\n\nimport { IconDeleteFile, IconReply } from '../icons';\n\nimport './style.scss';\n\nconst { Panel } = Collapse;\n\nconst Comment = ({ comment, onCommentDelete, onAddReply }) => {\n  const [onRemoveDropdown, setOnRemoveDropdown] = useState(false);\n  const [replyForm, setReplyForm] = useState(false);\n  const [replyLoader, setReplyLoader] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const onDelete = () => {\n    setLoading(true);\n    onCommentDelete(comment.id);\n  };\n\n  const convertDate = (date) => {\n    function convertDate(inputFormat) {\n      function pad(s) {\n        return s < 10 ? '0' + s : s;\n      }\n      var d = new Date(inputFormat);\n      return [pad(d.getDate()), pad(d.getMonth() + 1), d.getFullYear()].join('/');\n    }\n    return convertDate(date);\n  };\n\n  return (\n    <div className={`comment ${onRemoveDropdown ? 'red' : ''}`}>\n      <div className=\"comment__section\">\n        <div className=\"comment--header\">\n          <div className=\"comment--author\">\n            <div className=\"comment--author-info\">\n              <span title={comment.user}>{comment.user}</span>\n              <time>{convertDate(comment.updated_at)}</time>\n            </div>\n          </div>\n          <Dropdown\n            placement=\"bottomRight\"\n            trigger=\"click\"\n            visible={onRemoveDropdown}\n            onVisibleChange={(visible) => {\n              if (!visible) setOnRemoveDropdown(false);\n              // onRed(visible);\n            }}\n            overlay={\n              <div className=\"step-file--title-dropdown\">\n                <div className=\"dropdown-title\">Are you sure you want to delete this Comment?</div>\n                <div className=\"dropdown-actions\">\n                  <Button\n                    type=\"button\"\n                    onClick={(e) => {\n                      setOnRemoveDropdown(false);\n                      // onRed(false);\n                    }}>\n                    Back\n                  </Button>\n                  <Button type=\"primary\" onClick={onDelete} loading={loading}>\n                    Delete\n                  </Button>\n                </div>\n              </div>\n            }>\n            <button\n              className=\"step-file--remove\"\n              onClick={() => {\n                setOnRemoveDropdown(true);\n              }}>\n              <IconDeleteFile />\n            </button>\n          </Dropdown>\n          <button\n            onClick={(e) => {\n              setReplyForm(true);\n            }}>\n            <IconReply />\n          </button>\n          <Checkbox checked={comment.status > 1 ? true : false} className=\"reply-checkbox\" />\n        </div>\n        <div\n          className=\"comment--message\"\n          escape=\"false\"\n          dangerouslySetInnerHTML={{\n            __html: comment.text.replace(/(?:\\r\\n|\\r|\\n)/g, '<br>'),\n          }}\n        />\n      </div>\n      {replyForm && (\n        <div className=\"comment__reply\">\n          {!replyLoader ? (\n            <>\n              <div className=\"comment__reply_title\">Reply:</div>\n              <Input.TextArea\n                placeholder=\"Type to Reply, Enter to Send\"\n                onPressEnter={(e) => {\n                  const value = e.currentTarget.value;\n                  if (e.shiftKey || value.trim().length === 0) return;\n                  setReplyLoader(true);\n                  onAddReply(e, comment.id).then(() => {\n                    setReplyForm(false);\n                    setReplyLoader(false);\n                  });\n                }}\n              />\n            </>\n          ) : (\n            <Skeleton active />\n          )}\n        </div>\n      )}\n      {comment.replies.length > 0 && (\n        <Collapse bordered={false} ghost={true} expandIcon={() => <img src={arrow} alt={arrow} />}>\n          <Panel header={`Replies (${comment.replies.length})`} key=\"1\">\n            {comment.replies.map((item, index) => (\n              <Reply\n                key={`reply-${item.id}`}\n                reply={item}\n                onReplyDelete={(id) => {\n                  onCommentDelete(id);\n                }}\n              />\n            ))}\n          </Panel>\n        </Collapse>\n      )}\n    </div>\n  );\n};\n\nexport default Comment;\n","import React, { useEffect, useState } from 'react';\nimport { Link, useParams, useHistory } from 'react-router-dom';\nimport { Upload, Select, Button, Spin, Skeleton, Tooltip, Input } from 'antd';\n\nimport { getDocumentComments, postNewVersionDocument, postNewComment, removeComment } from '../../core/services';\n\nimport DocumentViewer from '../../components/DocumentViewer';\nimport Comment from '../../components/Comment';\nimport { IconComment } from '../../components/icons';\n\nimport iconBack from '../../assets/img/arrow-left.svg';\nimport iconDownload from '../../assets/img/icon-download.svg';\nimport iconUpload from '../../assets/img/icon-upload-blue.svg';\nimport iconSelectArrow from '../../assets/img/iceon-select-arrow.svg';\n\nimport './style.scss';\n\nconst { Dragger } = Upload;\nconst { Option } = Select;\n\nconst DocumentPage = () => {\n  const { id, climeId } = useParams();\n  const [commentsList, setCommentsList] = useState(null);\n  const [mode, setMode] = useState('all');\n  const [document, setDocument] = useState(null);\n  const [documentUploadLoader, setDocumentUploadLoader] = useState(false);\n  const [newCommentForm, setNewCommentForm] = useState(false);\n  const [newCommentLoader, setNewCommentLoader] = useState(false);\n  const history = useHistory();\n\n  useEffect(() => {\n    getDocumentComments(climeId, id)\n      .then((data) => {\n        setCommentsList(data.comments);\n        setDocument(data.document);\n      })\n      .catch(() => {\n        history.push('/document/notFound');\n      });\n  }, [climeId, id]);\n\n  const onChangeMode = (e) => {\n    const result = [...commentsList];\n    if (e === 'latest') {\n      result.sort((a, b) => (a.updated_at > b.updated_at ? -1 : b.updated_at > a.updated_at ? 1 : 0));\n    } else {\n      result.sort((a, b) => (a.updated_at > b.updated_at ? 1 : b.updated_at > a.updated_at ? -1 : 0));\n    }\n    setCommentsList(result);\n    setMode(e);\n  };\n\n  const uploadNewDocument = ({ file }) => {\n    setDocumentUploadLoader(true);\n    postNewVersionDocument(climeId, id, file).then((data) => {\n      setDocument(data.document);\n      setDocumentUploadLoader(false);\n    });\n  };\n\n  const addComment = (e) => {\n    const value = e.currentTarget.value;\n    if (e.shiftKey || value.trim().length === 0) return;\n    setNewCommentLoader(true);\n    postNewComment(climeId, id, value).then((data) => {\n      const result = [...data.comment];\n      if (mode === 'latest') {\n        result.sort((a, b) => (a.updated_at > b.updated_at ? -1 : b.updated_at > a.updated_at ? 1 : 0));\n      }\n      setCommentsList(result);\n      setNewCommentLoader(false);\n      setNewCommentForm(false);\n      if (mode === 'latest') {\n        setTimeout(() => {\n          window.document.querySelector('.document-details__comments_list').scrollTo(0, 0);\n        }, 100);\n      }\n    });\n  };\n\n  const addReply = (e, comment_id) => {\n    const value = e.currentTarget.value;\n    return new Promise((resolve, reject) => {\n      postNewComment(climeId, id, value, 1, comment_id).then((data) => {\n        setCommentsList(data.comment);\n        resolve();\n      });\n    });\n  };\n\n  const onCommentDelete = (commentId) => {\n    removeComment(climeId, id, commentId).then((data) => {\n      setCommentsList(data.comments);\n      // setLoading(false);\n      // onAction(data.document);\n    });\n  };\n\n  const isCommentsApproved = () => {\n    return commentsList.filter((item) => item.status === 1).length > 0;\n    //return true;\n  };\n\n  return (\n    <div className=\"document-details\">\n      <div className=\"document-details__viewer\">\n        <header className=\"document-details__header\">\n          <Link to=\"/active-claims/\" className=\"header--back\">\n            <img src={iconBack} alt=\"\" />\n            <span>To Dashboard</span>\n          </Link>\n          {document && (\n            <>\n              <a href={document.url} className=\"header--download\">\n                <img src={iconDownload} alt=\"\" />\n                <span>Download File</span>\n              </a>\n              <Dragger\n                className=\"header--upload\"\n                disabled={isCommentsApproved()}\n                name=\"file\"\n                customRequest={uploadNewDocument}\n                accept=\"application/pdf, application/msword, application/vnd.openxmlformats-officedocument.wordprocessingml.document, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\n                showUploadList={false}>\n                {documentUploadLoader && (\n                  <div className=\"loading\">\n                    <Spin />\n                  </div>\n                )}\n                {isCommentsApproved() ? (\n                  <Tooltip\n                    placement=\"bottom\"\n                    title=\"You cannot update this file because it contains an unresolved comment.\">\n                    <div>\n                      <img src={iconUpload} alt=\"\" />\n                      <span>Upload New Version</span>\n                    </div>\n                  </Tooltip>\n                ) : (\n                  <div>\n                    <img src={iconUpload} alt=\"\" />\n                    <span>Upload New Version</span>\n                  </div>\n                )}\n              </Dragger>\n            </>\n          )}\n        </header>\n        <article className=\"document-wrapper\">{document && <DocumentViewer url={document.url} />}</article>\n      </div>\n      <div className=\"document-details__comments\">\n        {!commentsList ? (\n          <Skeleton active />\n        ) : (\n          <>\n            <div className=\"document-details__comments_header\">\n              <div className=\"header--title\">\n                <IconComment />\n                <span>Comments ({commentsList.length})</span>\n              </div>\n              {commentsList.length > 0 && (\n                <Select\n                  defaultValue=\"all\"\n                  suffixIcon={<img src={iconSelectArrow} alt=\"\" />}\n                  dropdownMatchSelectWidth={false}\n                  onChange={onChangeMode}>\n                  <Option value=\"all\">All</Option>\n                  <Option value=\"latest\">Latest</Option>\n                </Select>\n              )}\n            </div>\n            <div className=\"document-details__comments_list\">\n              {commentsList.map((comment) => (\n                <Comment\n                  key={comment.id}\n                  comment={comment}\n                  climeId={climeId}\n                  onCommentDelete={onCommentDelete}\n                  onAddReply={addReply}\n                />\n              ))}\n              {newCommentForm && (\n                <div className=\"new-comment\">\n                  {!newCommentLoader ? (\n                    <>\n                      <label>Comment:</label>\n                      <Input.TextArea placeholder=\"Type to Comment, Enter to Send\" onPressEnter={addComment} />\n                    </>\n                  ) : (\n                    <Skeleton active />\n                  )}\n                </div>\n              )}\n            </div>\n          </>\n        )}\n        <div className=\"document-details__comments_new\">\n          <Button\n            type=\"primary\"\n            disabled={newCommentForm}\n            onClick={(e) => {\n              setNewCommentForm(true);\n              setTimeout(() => {\n                window.document.querySelector('.document-details__comments_list').scrollTo(0, 50000);\n              }, 100);\n            }}>\n            New Comment\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DocumentPage;\n","import React, { useState, useEffect } from 'react';\n\nimport PDFSVG from '../../assets/img/PDF.svg';\nimport XLSXSVG from '../../assets/img/XLSX.svg';\nimport DOCSSVG from '../../assets/img/DOCS.svg';\nimport { IconDeleteFile } from '../icons';\n\nimport './style.scss';\n\nconst ProjectFileListItem = ({ originNode, file, fileList, actions }) => {\n  const [extension, setExtension] = useState(null);\n\n  useEffect(() => {\n    if (!file.extension) {\n      setExtension(file.name.match(/\\.[0-9a-z]+$/i)[0]);\n    }\n  }, []);\n\n  const checkForExt = (extension) => {\n    switch (extension) {\n      case '.doc':\n        return DOCSSVG;\n      case '.docx':\n        return DOCSSVG;\n      case '.pdf':\n        return PDFSVG;\n      case '.xls':\n        return XLSXSVG;\n      case '.xlsx':\n        return XLSXSVG;\n      default:\n        return extension;\n    }\n  };\n\n  return (\n    <div className=\"ant-upload-list-item ant-upload-list-item-undefined ant-upload-list-item-list-type-text\">\n      <div className=\"ant-upload-list-item-info\">\n        <span className=\"ant-upload-span\">\n          <div className=\"ant-upload-text-icon\">\n            <span role=\"img\" aria-label=\"paper-clip\" className=\"anticon anticon-paper-clip\">\n              <img src={checkForExt(extension)} alt=\"\" />\n            </span>\n          </div>\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"ant-upload-list-item-name\"\n            title=\"EF3e_elem_filetest_12a.doc\"\n            href=\"http://granter.get-code.net/api/public/storage/documents/projects/ef3e-elem-filetest-12a_1623263703.doc\">\n            {file.name}\n          </a>\n          <span className=\"ant-upload-list-item-card-actions\">\n            <button\n              title=\"Remove file\"\n              type=\"button\"\n              onClick={actions.remove}\n              className=\"ant-btn ant-btn-text ant-btn-sm ant-btn-icon-only ant-upload-list-item-card-actions-btn\">\n              <IconDeleteFile />\n            </button>\n          </span>\n        </span>\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectFileListItem;\n","import React, { useState, useEffect } from 'react';\nimport { Form, Select, Button, Input, Upload, Dropdown } from 'antd';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport { IconDeleteFile } from '../../../components/icons';\nimport { removeProject, addDocumentToProject, removeDocumentFromProject } from '../../../core/services';\nimport ProjectFileListItem from '../../../components/ProjectFileListItem';\n\nimport iconSelectArrow from '../../../assets/img/iceon-select-arrow.svg';\nimport iconUpload from '../../../assets/img/icon-upload.svg';\nimport iconFile from '../../../assets/img/icon-file-s.svg';\n\nimport './style.scss';\n\nconst { Option } = Select;\n\nconst Project = ({ form, project, onRemove, isRemoved }) => {\n  const [status, setStatus] = useState(null);\n  const [isRed, setIsRed] = useState(false);\n  const [onRemoveDropdown, setOnRemoveDropdown] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const { climeId } = useParams();\n  const history = useHistory();\n\n  useEffect(() => {\n    if (project.status) setStatus(status);\n  }, [project]);\n\n  const customRequest = (e) => {\n    const id = form.getFieldsValue().id;\n    if (id) {\n      addDocumentToProject(climeId, id, e.file).then((data) => {\n        form.setFieldsValue({\n          documents: data.documents,\n        });\n      });\n    }\n    e.onSuccess('ok');\n  };\n\n  const normFile = (e) => {\n    if (Array.isArray(e)) {\n      return e;\n    }\n    return e && e.fileList;\n  };\n\n  const onDeleteProject = () => {\n    const id = form.getFieldsValue().id;\n    if (id) {\n      setLoading(true);\n      removeProject(climeId, id)\n        .then((data) => {\n          onRemove();\n          setIsRed(false);\n          setStatus(null);\n          history.push(`/project/${climeId}`);\n          setOnRemoveDropdown(false);\n          form.setFieldsValue({\n            challenges: null,\n            documents: [],\n            id: null,\n            objectives: null,\n            status: null,\n            title: null,\n            'start-months': null,\n            'start-year': null,\n            'end-months': null,\n            'end-year': null,\n            status: null,\n          });\n          setLoading(false);\n        })\n        .catch((error) => {\n          setLoading(false);\n        });\n    }\n  };\n\n  const onRemoveDocument = (file) => {\n    const id = form.getFieldsValue().id;\n    if (id) {\n      removeDocumentFromProject(file.claim_id, file.project_id, file.id);\n    }\n  };\n\n  const statusName = (s) => {\n    let status = {};\n    switch (s) {\n      case 2:\n        status = {\n          class: 'review',\n          name: 'On Review',\n        };\n        break;\n      case 3:\n        status = {\n          class: 'approved',\n          name: 'Approved',\n        };\n        break;\n\n      default:\n        break;\n    }\n    return status;\n  };\n\n  return (\n    <div className=\"project\">\n      <div className=\"project__forms\">\n        {/* <h1 style={{ visibility: form.getFieldValue('id') || isRemoved ? 'hidden' : 'visible' }}>New Project</h1> */}\n        {isRemoved && (\n          <div className=\"removed-message\">\n            <img src={iconFile} alt=\"\" />\n            <span>There are no projects yet</span>\n          </div>\n        )}\n        <div className={`project__form ${isRemoved ? 'removed' : ''} ${isRed ? 'red' : ''}`}>\n          <Dropdown\n            placement=\"bottomRight\"\n            trigger=\"click\"\n            visible={onRemoveDropdown}\n            onVisibleChange={(visible) => {\n              if (!visible) {\n                setOnRemoveDropdown(false);\n                setIsRed(false);\n              } else {\n                setIsRed(true);\n              }\n            }}\n            overlay={\n              <div className=\"step-file--title-dropdown\">\n                <div className=\"dropdown-title\">Are you sure you want to delete this Document?</div>\n                <div className=\"dropdown-actions\">\n                  <Button\n                    type=\"button\"\n                    onClick={(e) => {\n                      setOnRemoveDropdown(false);\n                      setIsRed(false);\n                    }}>\n                    Back\n                  </Button>\n                  <Button type=\"primary\" onClick={onDeleteProject} loading={loading}>\n                    Delete\n                  </Button>\n                </div>\n              </div>\n            }>\n            {/* <button\n              className=\"step-file--remove-button\"\n              onClick={() => {\n                setOnRemoveDropdown(true);\n              }}>\n              <IconDeleteFile />\n            </button> */}\n            <button\n              type=\"button\"\n              className=\"project__form_remove\"\n              style={{\n                display: !project.id || isRemoved ? 'none' : '',\n              }}\n              onClick={() => {\n                setOnRemoveDropdown(true);\n                //onDeleteProject();\n              }}>\n              <IconDeleteFile />\n            </button>\n          </Dropdown>\n          <div className=\"project__form_inputs\">\n            <Form.Item\n              label=\"Project Title\"\n              name=\"title\"\n              rules={[\n                {\n                  required: true,\n                  message: 'Please input your facility title!',\n                },\n              ]}>\n              <Input placeholder=\"Enter the title\" />\n            </Form.Item>\n          </div>\n          <div className=\"project__form_dates\">\n            <div className=\"start-dates\">\n              <Form.Item\n                name=\"start-months\"\n                label=\"Start Date\"\n                className=\"row-months\"\n                rules={[\n                  {\n                    required: true,\n                    message: false,\n                  },\n                ]}>\n                <Select\n                  placeholder=\"Months\"\n                  suffixIcon={<img src={iconSelectArrow} alt=\"\" />}\n                  className=\"months-select\">\n                  <Option value={0}>January</Option>\n                  <Option value={1}>February</Option>\n                  <Option value={2}>March</Option>\n                  <Option value={3}>April</Option>\n                  <Option value={4}>May</Option>\n                  <Option value={5}>June</Option>\n                  <Option value={6}>July</Option>\n                  <Option value={7}>August</Option>\n                  <Option value={8}>September</Option>\n                  <Option value={9}>October</Option>\n                  <Option value={10}>November</Option>\n                  <Option value={11}>December</Option>\n                </Select>\n              </Form.Item>\n              <Form.Item\n                name=\"start-year\"\n                className=\"row-year\"\n                rules={[\n                  {\n                    required: true,\n                    message: false,\n                  },\n                ]}>\n                <Select placeholder=\"Year\" suffixIcon={<img src={iconSelectArrow} alt=\"\" />} className=\"years-select\">\n                  <Option value=\"2021\">2021</Option>\n                  <Option value=\"2020\">2020</Option>\n                  <Option value=\"2019\">2019</Option>\n                  <Option value=\"2018\">2018</Option>\n                  <Option value=\"2017\">2017</Option>\n                </Select>\n              </Form.Item>\n            </div>\n            <div className=\"end-dates\">\n              <Form.Item\n                name=\"end-months\"\n                label=\"End Date\"\n                className=\"row-months\"\n                rules={[\n                  {\n                    required: true,\n                    message: false,\n                  },\n                ]}>\n                <Select\n                  placeholder=\"Months\"\n                  className=\"months-select\"\n                  suffixIcon={<img src={iconSelectArrow} alt=\"\" />}>\n                  <Option value={0}>January</Option>\n                  <Option value={1}>February</Option>\n                  <Option value={2}>March</Option>\n                  <Option value={3}>April</Option>\n                  <Option value={4}>May</Option>\n                  <Option value={5}>June</Option>\n                  <Option value={6}>July</Option>\n                  <Option value={7}>August</Option>\n                  <Option value={8}>September</Option>\n                  <Option value={9}>October</Option>\n                  <Option value={10}>November</Option>\n                  <Option value={11}>December</Option>\n                </Select>\n              </Form.Item>\n              <Form.Item\n                name=\"end-year\"\n                className=\"row-year\"\n                rules={[\n                  {\n                    required: true,\n                    message: false,\n                  },\n                ]}>\n                <Select placeholder=\"Year\" suffixIcon={<img src={iconSelectArrow} alt=\"\" />} className=\"years-select\">\n                  <Option value=\"2021\">2021</Option>\n                  <Option value=\"2020\">2020</Option>\n                  <Option value=\"2019\">2019</Option>\n                  <Option value=\"2018\">2018</Option>\n                  <Option value=\"2017\">2017</Option>\n                </Select>\n              </Form.Item>\n            </div>\n          </div>\n          <div className=\"project__form_inputs\">\n            <Form.Item label=\"Objectives\" name=\"objectives\">\n              <Input.TextArea placeholder=\"Enter objectives\" style={{ height: 112 }} />\n            </Form.Item>\n          </div>\n          <div className=\"project__form_inputs\">\n            <Form.Item label=\"Non-Routine Challenges\" name=\"challenges\">\n              <Input.TextArea placeholder=\"Enter challenges\" style={{ height: 156 }} />\n            </Form.Item>\n          </div>\n          <Form.Item hidden name=\"id\">\n            <Input />\n          </Form.Item>\n        </div>\n      </div>\n      {!isRemoved && (\n        <div className=\"project__docs\">\n          <h3>Add Related Documents</h3>\n          <Form.Item name=\"status\" className=\"hidden\">\n            <Input hidden />\n          </Form.Item>\n          {project.status && (\n            <div className=\"step-file--status\">\n              <div className={`status ${statusName(project.status).class}`}>{statusName(project.status).name}</div>\n            </div>\n          )}\n          <div className=\"project__docs_list\">\n            <Form.Item name=\"documents\" valuePropName=\"fileList\" getValueFromEvent={normFile} className=\"documents\">\n              <Upload\n                customRequest={customRequest}\n                itemRender={(originNode, file, currFileList, actions) => (\n                  <ProjectFileListItem originNode={originNode} file={file} fileList={currFileList} actions={actions} />\n                )}\n                showUploadList={true}\n                onRemove={onRemoveDocument}\n                accept=\"application/pdf, application/msword,\n            application/vnd.openxmlformats-officedocument.wordprocessingml.document,\n            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\">\n                <img src={iconUpload} alt=\"\" />\n                <span>Add the Document</span>\n              </Upload>\n            </Form.Item>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Project;\n","import React, { useEffect, useState } from 'react';\nimport { Link, useParams, useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Form, notification, Button, Modal, Skeleton, Upload } from 'antd';\nimport { getTechnicalClaimStep, setNewProject, editProject, addDocumentToProject } from '../../core/services';\nimport actions from '../../core/actions';\nimport { CloseIconModal } from '../../components/icons';\nimport Project from './Project';\nimport iconBack from '../../assets/img/arrow-left.svg';\nimport iconPdf from '../../assets/img/icon-pdf.svg';\nimport iconDownload from '../../assets/img/icon-download.svg';\nimport iconUpload from '../../assets/img/icon-upload-blue.svg';\nimport iconSelectArrow from '../../assets/img/iceon-select-arrow.svg';\nimport './style.scss';\nimport DocumentViewer from '../../components/DocumentViewer';\n\nconst { Dragger } = Upload;\n\nconst ProjectsPage = () => {\n  const [currentProject, setCurrentProject] = useState(null);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [loader, setLoader] = useState(false);\n  const [isRemoved, setIsRemoved] = useState(false);\n  const [formLength, setFormLength] = useState(1);\n  const projectsList = useSelector((state) => state.projects.projectsList);\n  const { isVisibleProjectPage } = useSelector((state) => state.modal);\n  const { climeId, id } = useParams();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [form] = Form.useForm();\n  const { blurActivePrPage } = bindActionCreators(actions, dispatch);\n\n  useEffect(() => {\n    if (id) {\n      if (projectsList) {\n        setCurrentProject(projectsList.filter((item) => item.id == id)[0]);\n      } else {\n        const { addProjectsDetails } = bindActionCreators(actions, dispatch);\n        getTechnicalClaimStep(climeId).then((data) => {\n          addProjectsDetails(data.documents);\n          setCurrentProject(data.documents.filter((item) => item.id == id)[0]);\n        });\n      }\n    } else {\n      setCurrentProject({});\n    }\n  }, [id]);\n\n  useEffect(() => {\n    if (currentProject) initialValue();\n  }, [currentProject]);\n\n  const customRequest = (e) => {\n    if (id) {\n      addDocumentToProject(climeId, id, e.file, 1).then((data) => {\n        setCurrentProject(data);\n      });\n    } else {\n      const form = { main_document: e.file };\n      setNewProject(climeId, form).then((data) => {\n        setCurrentProject(data);\n      });\n    }\n    e.onSuccess('ok');\n  };\n\n  const onFinish = (formValues) => {\n    setLoader(true);\n    addProject(formValues);\n  };\n\n  var getDaysInMonth = (month, year) => new Date(year, month, 0).getDate();\n\n  const addProject = (project) => {\n    const data = {\n      title: project.title,\n      objectives: project.objectives,\n      challanges: project.challenges,\n    };\n    if (project['start-months'] >= 0 && project['start-year'] && project['end-months'] >= 0 && project['end-year']) {\n      data.start_date = Date.parse(`${project['start-months'] + 1}/01/${project['start-year']}`);\n      data.end_date = Date.parse(\n        `${project['end-months'] + 1}/${getDaysInMonth(project['end-months'] + 1, project['end-year'])}/${\n          project['end-year']\n        }`,\n      );\n    }\n    if (project.documents && !project.id) {\n      const docs = [];\n      project.documents.forEach((doc) => {\n        docs.push(doc.originFileObj);\n      });\n      data.documents = docs;\n    }\n\n    if (currentProject.id) {\n      editProject(climeId, currentProject.id, data).then(() => {\n        notification.success({\n          description: 'Project was updated successfully',\n        });\n        history.push('/active-claims/');\n      });\n    } else {\n      setNewProject(climeId, data).then(() => {\n        notification.success({\n          description: 'Project was added successfully',\n        });\n        history.push('/active-claims/');\n      });\n    }\n  };\n\n  const initialValue = () => {\n    let result = {};\n    if (currentProject) {\n      result = {\n        challenges: currentProject?.challanges,\n        documents: currentProject?.documents,\n        id: currentProject?.id,\n        objectives: currentProject?.objectives,\n        status: currentProject?.status,\n        title: currentProject?.title,\n      };\n    }\n    result['start-months'] = currentProject?.start_date\n      ? new Date(Number(currentProject?.start_date)).getMonth()\n      : null;\n    result['start-year'] = currentProject?.start_date\n      ? new Date(Number(currentProject?.start_date)).getFullYear()\n      : null;\n    result['end-months'] = currentProject?.end_date ? new Date(Number(currentProject?.end_date)).getMonth() : null;\n    result['end-year'] = currentProject?.end_date ? new Date(Number(currentProject?.end_date)).getFullYear() : null;\n\n    form.setFieldsValue(result);\n  };\n\n  const onBack = () => {\n    if (!isRemoved && (!currentProject.title?.length || !currentProject.start_date || !currentProject.end_date)) {\n      setModalVisible(true);\n      blurActivePrPage();\n    } else {\n      history.push('/active-claims/');\n    }\n  };\n\n  return (\n    <div\n      className=\"projects\"\n      style={{\n        filter: isVisibleProjectPage ? 'blur(3px)' : 'blur(0px)',\n      }}>\n      <header>\n        <div className=\"projects__header_wrapper\">\n          <Button type=\"link\" onClick={onBack} className=\"header--back\">\n            <img src={iconBack} alt=\"\" />\n            <span>To Dashboard</span>\n          </Button>\n        </div>\n      </header>\n      <div className=\"projects__wrapper\">\n        <div className=\"projects-list\">\n          {!currentProject ? (\n            <Skeleton active />\n          ) : (\n            <Form name=\"dynamic_form_item\" layout=\"vertical\" form={form} requiredMark={false} onFinish={onFinish}>\n              <Project\n                onRemove={() => {\n                  setIsRemoved(true);\n                  setCurrentProject({});\n                }}\n                isRemoved={isRemoved}\n                form={form}\n                project={currentProject}\n              />\n              <div className=\"project__form_submit-external\" style={{ marginTop: formLength ? 0 : 56 }}>\n                {isRemoved ? (\n                  <Button\n                    type=\"primary\"\n                    onClick={() => {\n                      setIsRemoved(false);\n                      history.push(`/project/${climeId}`);\n                    }}>\n                    Add Project\n                  </Button>\n                ) : (\n                  <Form.Item>\n                    <Button type=\"primary\" htmlType=\"submit\" loading={loader}>\n                      {id ? 'Save changes' : 'Add Project to Dashboard'}\n                    </Button>\n                  </Form.Item>\n                )}\n              </div>\n            </Form>\n          )}\n          {/* <Project /> */}\n        </div>\n        <div className=\"projects__viewer\">\n          {!isRemoved && (\n            <div className=\"projects__viewer_document\">\n              {!currentProject ? (\n                <Skeleton active />\n              ) : currentProject.doc_url ? (\n                <DocumentViewer url={currentProject.doc_url} />\n              ) : (\n                <Dragger\n                  className=\"projects__viewer_dragger\"\n                  customRequest={customRequest}\n                  showUploadList={false}\n                  accept=\"application/pdf, application/msword,\n              application/vnd.openxmlformats-officedocument.wordprocessingml.document,\n              application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\">\n                  <img src={iconPdf} alt=\"\" />\n                  <span>There are no documents yet</span>\n                </Dragger>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n      <Modal\n        title=\"Basic Modal\"\n        className=\"goback__modal\"\n        visible={modalVisible}\n        width={700}\n        onCancel={() => {\n          setModalVisible(false);\n          blurActivePrPage();\n        }}\n        footer={false}\n        title={false}\n        closeIcon={<CloseIconModal />}>\n        <h2>You haven’t filled requested fields</h2>\n        <div className=\"technical__modal_description\">\n          <p>\n            Please, fill them in case you want to keep this project. If you go back to dashboard, the project will be\n            deleted.\n          </p>\n        </div>\n        <div className=\"technical__modal_actions\">\n          <Button\n            type=\"button\"\n            onClick={() => {\n              setModalVisible(false);\n              blurActivePrPage();\n            }}>\n            Keep project\n          </Button>\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              history.push('/active-claims/');\n              blurActivePrPage();\n            }}>\n            Delete and go to Dashboard\n          </Button>\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nexport default ProjectsPage;\n","import React, { useState } from 'react';\nimport ReactPasswordStrength from 'react-password-strength';\nimport { useHistory } from 'react-router-dom';\n\nimport { notification, Tooltip, Button, Input, Form } from 'antd';\nimport { EyeOutlined, EyeInvisibleOutlined } from '@ant-design/icons';\n\nimport Layout from '../../components/LayoutDashboard/Layout';\nimport { fetchChacngePassword } from '../../core/services';\n\nimport { IconInfo } from '../../components/icons';\n\nimport arrowLeft from '../../assets/img/arrow-left.svg';\n\nimport './style.scss';\nimport { Link } from 'react-router-dom';\n\nconst ChangePasswordPage = () => {\n  const [loader, setLoader] = useState(false);\n  const [passwordError, setPasswordError] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const [form] = Form.useForm();\n  const history = useHistory();\n\n  const onFinishName = (values) => {\n    setLoader(true);\n    fetchChacngePassword(values)\n      .then((data) => {\n        setLoader(false);\n        notification.success({\n          description: data,\n        });\n        history.push('/profile/');\n      })\n      .catch((error) => {\n        setLoader(false);\n      });\n  };\n\n  const changeCallback = (score, password, isValid) => {\n    if (score.password) {\n      form.setFieldsValue({\n        password: score.password,\n      });\n      form.validateFields(['password']);\n    }\n  };\n\n  const onFieldsChange = (changedFields, allFields) => {\n    const password = changedFields.filter((item) => item.name[0] === 'password')[0];\n    if (password) {\n      if (password.errors.length) {\n        setPasswordError(true);\n      } else {\n        setPasswordError(false);\n      }\n    }\n  };\n\n  return (\n    <Layout isLogged={false} className=\"dashboard\">\n      <div className=\"change-password\">\n        <div className=\"change-password__title\">\n          <Link to=\"/profile/\">\n            <img src={arrowLeft} alt=\"\" />\n            <span>To Profile</span>\n          </Link>\n        </div>\n        <div className=\"change-password__wrapper\">\n          <h2>Change password</h2>\n          <div className=\"change-password__description\">\n            <b>Choose a Strong Password</b>. A strong password contains a mix of numbers, letters, and symbols. It is\n            hard to guess, does not resemble a real word, and is only used for this account.\n          </div>\n          <div className=\"change-password__form\">\n            <Form\n              name=\"name\"\n              layout=\"vertical\"\n              form={form}\n              requiredMark={false}\n              onFinish={onFinishName}\n              onFieldsChange={onFieldsChange}\n              className=\"change-password--form\"\n              // onFinishFailed={onFinishFailed}\n            >\n              <Form.Item\n                label=\"Current Password\"\n                name=\"current_password\"\n                rules={[\n                  {\n                    required: true,\n                    message: 'Please input your current password!',\n                  },\n                  {\n                    min: 8,\n                    message: 'Password must be at least 8 characters!',\n                  },\n                ]}>\n                <Input.Password placeholder=\"Enter current password\" />\n              </Form.Item>\n              <label className=\"password-controle--label\">New Password</label>\n              <div className={`password-controle ${passwordError ? 'error' : ''}`}>\n                <button\n                  className=\"password-controle--show\"\n                  type=\"button\"\n                  onClick={() => {\n                    setShowPassword(!showPassword);\n                  }}>\n                  {!showPassword && <EyeInvisibleOutlined />}\n                  {showPassword && <EyeOutlined />}\n                </button>\n                <ReactPasswordStrength\n                  className=\"registration--form-password\"\n                  minLength={8}\n                  minScore={2}\n                  tooShortWord=\"Too short\"\n                  scoreWords={['Weak', 'Okay', 'Good', 'Strong', 'Stronger']}\n                  changeCallback={changeCallback}\n                  inputProps={{\n                    autoComplete: 'off',\n                    className: 'form-control',\n                    placeholder: 'Enter the password',\n                    type: showPassword ? 'text' : 'password',\n                  }}\n                />\n                <div className=\"password-strength-info\">\n                  <span>Password Strength</span>\n                  <Tooltip\n                    placement=\"top\"\n                    title=\"Use upper and lower case letters, numbers and symbols like !, @, &, $, etc. Don’t use personal info (birth date, etc.)\">\n                    <div className=\"info--tooltype\">\n                      <IconInfo />\n                    </div>\n                  </Tooltip>\n                </div>\n              </div>\n              <Form.Item\n                name=\"password\"\n                rules={[\n                  {\n                    min: 8,\n                    message: 'Password must be at least 8 characters!',\n                  },\n                  { required: true, message: 'Please input your password!' },\n                ]}>\n                <Input type=\"password\" hidden />\n              </Form.Item>\n\n              <Form.Item className=\"registration--submit\">\n                <Button type=\"primary\" htmlType=\"submit\" loading={loader}>\n                  Save changes\n                </Button>\n              </Form.Item>\n            </Form>\n            <div className=\"change-password__forgot\">\n              Forgot your password? <Link to=\"/reset-password/\">Reset a password</Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default ChangePasswordPage;\n","import React, { useState } from 'react';\nimport { Form, Button, Input, notification } from 'antd';\nimport { Link } from 'react-router-dom';\nimport Layout from '../../components/LayoutGuest/Layout';\n\nimport { IconWarning } from '../../components/icons';\n\nimport { fetchResetPassword } from '../../core/services';\n\nimport './style.scss';\n\nconst ResetPasswordPage = (props) => {\n  const [loader, setLoader] = useState(false);\n  const onFinish = (values) => {\n    setLoader(true);\n    fetchResetPassword(values.email)\n      .then((data) => {\n        notification.success({\n          description: 'Check your mail',\n        });\n        setLoader(false);\n      })\n      .catch((error) => {\n        notification.error({\n          className: 'error-message',\n          description: 'No such email found',\n          icon: <IconWarning />,\n        });\n        setLoader(false);\n      });\n  };\n\n  return (\n    <Layout isLogged={false} mode=\"login\" className=\"login-page\">\n      <div className=\"login-page__wrapper\">\n        <h1>Reset a password</h1>\n        <Form\n          name=\"name\"\n          layout=\"vertical\"\n          requiredMark={false}\n          onFinish={onFinish}\n          className=\"login--form\"\n          // onFinishFailed={onFinishFailed}\n        >\n          <Form.Item\n            label=\"Your Email\"\n            name=\"email\"\n            rules={[\n              { required: true, message: 'Please input your Email!' },\n              { type: 'email', message: 'Please input correct Email!' },\n            ]}>\n            <Input placeholder=\"Enter the email\" />\n          </Form.Item>\n          <Form.Item className=\"login--submit\">\n            <Button type=\"primary\" htmlType=\"submit\" loading={loader}>\n              Get the reset link\n            </Button>\n          </Form.Item>\n        </Form>\n        <div className=\"login-page--after-text\">\n          Don’t have an account? <Link to=\"/welcome/\">Sign Up</Link>\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default ResetPasswordPage;\n","import React, { useEffect, useState } from 'react';\nimport { Form, Button, Input, Tooltip, notification } from 'antd';\nimport ReactPasswordStrength from 'react-password-strength';\nimport { Link, useLocation, useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Layout from '../../components/LayoutGuest/Layout';\n\nimport { EyeOutlined, EyeInvisibleOutlined } from '@ant-design/icons';\nimport { IconInfo } from '../../components/icons';\n\nimport { fetchCreatePassword } from '../../core/services';\n\nimport './style.scss';\n\nconst CreatePasswordPage = (props) => {\n  const [loader, setLoader] = useState(false);\n  const [token, setToken] = useState(null);\n  const [passwordError, setPasswordError] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const [form] = Form.useForm();\n  const location = useLocation();\n  const history = useHistory();\n  const email = useSelector((state) => state.user.data?.email);\n\n  useEffect(() => {\n    const token = location.search.split('?token=')[1];\n    setToken(token);\n  }, []);\n\n  const onFinishName = (value) => {\n    const form = {\n      email: email,\n      token: token,\n      password: value.password,\n      password_confirmation: value.password,\n    };\n    setLoader(true);\n    fetchCreatePassword(form).then((data) => {\n      notification.success({\n        description: 'Your password has been successfully changed',\n      });\n      setLoader(false);\n      history.push('/sign-in/');\n    });\n  };\n\n  const changeCallback = (score, password, isValid) => {\n    if (score.password) {\n      form.setFieldsValue({\n        password: score.password,\n      });\n      form.validateFields(['password']);\n    }\n  };\n\n  const onFieldsChange = (changedFields, allFields) => {\n    const password = changedFields.filter((item) => item.name[0] === 'password')[0];\n    if (password) {\n      if (password.errors.length) {\n        setPasswordError(true);\n      } else {\n        setPasswordError(false);\n      }\n    }\n  };\n\n  return (\n    <Layout isLogged={false} mode=\"login\" className=\"login-page\">\n      <div className=\"login-page__wrapper\">\n        <h1>Create new password</h1>\n        <Form\n          name=\"name\"\n          layout=\"vertical\"\n          form={form}\n          requiredMark={false}\n          onFinish={onFinishName}\n          onFieldsChange={onFieldsChange}\n          className=\"change-password--form\"\n          // onFinishFailed={onFinishFailed}\n        >\n          <label className=\"password-controle--label\">New Password</label>\n          <div className={`password-controle ${passwordError ? 'error' : ''}`}>\n            <button\n              className=\"password-controle--show\"\n              type=\"button\"\n              onClick={() => {\n                setShowPassword(!showPassword);\n              }}>\n              {!showPassword && <EyeInvisibleOutlined />}\n              {showPassword && <EyeOutlined />}\n            </button>\n            <ReactPasswordStrength\n              className=\"registration--form-password\"\n              minLength={8}\n              minScore={2}\n              tooShortWord=\"Too short\"\n              scoreWords={['Weak', 'Okay', 'Good', 'Strong', 'Stronger']}\n              changeCallback={changeCallback}\n              inputProps={{\n                autoComplete: 'off',\n                className: 'form-control',\n                placeholder: 'Enter the password',\n                type: showPassword ? 'text' : 'password',\n              }}\n            />\n            <div className=\"password-strength-info\">\n              <span>Password Strength</span>\n              <Tooltip\n                placement=\"top\"\n                title=\"Use upper and lower case letters, numbers and symbols like !, @, &, $, etc. Don’t use personal info (birth date, etc.)\">\n                <div className=\"info--tooltype\">\n                  <IconInfo />\n                </div>\n              </Tooltip>\n            </div>\n          </div>\n          <Form.Item\n            name=\"password\"\n            rules={[\n              {\n                min: 8,\n                message: 'Password must be at least 8 characters!',\n              },\n              { required: true, message: 'Please input your password!' },\n            ]}>\n            <Input type=\"password\" hidden />\n          </Form.Item>\n\n          <Form.Item className=\"registration--submit\">\n            <Button type=\"primary\" htmlType=\"submit\" loading={loader}>\n              Create\n            </Button>\n          </Form.Item>\n        </Form>\n        <div className=\"login-page--after-text\">\n          Don’t have an account? <Link to=\"/welcome/\">Sign Up</Link>\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default CreatePasswordPage;\n","import React, { useRef, useState } from 'react';\nimport { Form, Carousel, Button, Input, AutoComplete } from 'antd';\nimport { bindActionCreators } from 'redux';\nimport { useDispatch, useSelector } from 'react-redux';\nimport _ from 'underscore';\n\nimport { fetchCompanyHouse } from '../../../../core/services';\nimport actions from '../../../../core/actions';\n\nimport './style.scss';\n\nconst WelcomeStep1 = ({ goNextStep }) => {\n  const slider = useRef();\n  const inputSearch = useRef();\n  const [options, setOptions] = useState([]);\n  const [companyName, setCompanyName] = useState(null);\n  const [loader, setLoader] = useState(false);\n  const dispatch = useDispatch();\n  const state = useSelector((state) => state.registration);\n\n  const [form] = Form.useForm();\n  const { registrationUpdateState } = bindActionCreators(actions, dispatch);\n\n  const fetchCompanyHouseDelay = _.debounce((searchText) => {\n    setCompanyName(null);\n    if (searchText.length < 3) {\n      setOptions([]);\n    } else {\n      setLoader(true);\n      fetchCompanyHouse(searchText).then((data) => {\n        let results = [];\n        if (data.length) {\n          results = data.map((item, index) => {\n            item.value = item.company_name;\n            item.key = `company-${index}`;\n            return item;\n          });\n        } else {\n          if (data.company_name) {\n            data.value = data.company_name;\n            results.push(data);\n          }\n        }\n\n        setOptions(results);\n        setLoader(false);\n      });\n    }\n  }, 500);\n\n  const onSearch = (searchText) => {\n    fetchCompanyHouseDelay(searchText);\n  };\n\n  const onSelect = (value, options) => {\n    setCompanyName(options);\n  };\n\n  const onFinishName = (value) => {\n    const companyData = {\n      name: companyName.company_name,\n      number: companyName.company_number,\n      industry: companyName.industries ? companyName.industries : [],\n    };\n    registrationUpdateState(companyData);\n    setOptions([]);\n    slider.current.next();\n  };\n\n  return (\n    <div className=\"hello-page__step\">\n      <Carousel ref={slider} dots={false} effect=\"fade\" swipe={false}>\n        {/* WHAT IS YOUR COMPANY NAME? */}\n        <div className=\"step--wrapper\">\n          <Form\n            name=\"name\"\n            layout=\"vertical\"\n            requiredMark={false}\n            onFinish={onFinishName}\n            // onFinishFailed={onFinishFailed}\n          >\n            <Form.Item\n              label=\"What is your company name?\"\n              name=\"name\"\n              validateTrigger=\"onSelect\"\n              rules={[\n                {\n                  validateTrigger: 'onSelect',\n                  validator: (_, value) => {\n                    if (companyName) {\n                      return Promise.resolve();\n                    }\n\n                    return Promise.reject(new Error('Please input your company name!'));\n                  },\n                },\n              ]}>\n              <AutoComplete\n                options={options}\n                onSelect={onSelect}\n                onSearch={onSearch}\n                className=\"hello-page__autocomplete\"\n                notFoundContent=\"Nothing found\">\n                <Input.Search placeholder=\"Enter the name\" loading={loader} />\n              </AutoComplete>\n            </Form.Item>\n\n            <Form.Item>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Next\n              </Button>\n            </Form.Item>\n          </Form>\n        </div>\n\n        {/* IS THIS YOUR COMPANY NUMBER ON COMPANIES HOUSE? */}\n        <div className=\"step--wrapper\">\n          <div className=\"step--label\">Is this your company number on companies house?</div>\n          <div className=\"step--value\">{state.number}</div>\n          <div className=\"control-submit\">\n            <Button\n              type=\"primary\"\n              onClick={() => {\n                //slider.current.goTo(3);\n                goNextStep();\n              }}>\n              Yes\n            </Button>\n            <Button\n              type=\"text\"\n              onClick={() => {\n                slider.current.goTo(2);\n                setCompanyName(null);\n                form.setFieldsValue({\n                  number: '',\n                });\n              }}>\n              No\n            </Button>\n          </div>\n        </div>\n\n        {/* WHAT IS YOUR REGISTERED COMPANY NAME OR NUMBER? */}\n        <div className=\"step--wrapper\">\n          <Form\n            name=\"number\"\n            form={form}\n            layout=\"vertical\"\n            requiredMark={false}\n            onFinish={(values) => {\n              const companyData = {\n                name: companyName.company_name,\n                number: companyName.company_number,\n                industry: companyName.industries ? companyName.industries : [],\n              };\n              registrationUpdateState(companyData);\n              setOptions([]);\n              //slider.current.goTo(1);\n              goNextStep();\n            }}\n            // onFinishFailed={onFinishFailed}\n          >\n            <Form.Item\n              label=\"What is your registered company name or number?\"\n              name=\"number\"\n              validateTrigger=\"onSelect\"\n              rules={[\n                {\n                  validateTrigger: 'onSelect',\n                  validator: (_, value) => {\n                    if (companyName) {\n                      return Promise.resolve();\n                    }\n\n                    return Promise.reject(new Error('Please input your company name or number!'));\n                  },\n                },\n              ]}>\n              <AutoComplete\n                options={options}\n                onSelect={onSelect}\n                onSearch={onSearch}\n                className=\"hello-page__autocomplete\"\n                notFoundContent=\"Nothing found\">\n                <Input.Search placeholder=\"Enter the name\" loading={loader} ref={inputSearch} />\n              </AutoComplete>\n            </Form.Item>\n            <Form.Item className=\"control-submit\">\n              <Button type=\"primary\" htmlType=\"submit\">\n                Next\n              </Button>\n              {/* <Button\n                type='text'\n                onClick={() => {\n                  slider.current.prev();\n                  setOptions([]);\n                  setCompanyName(null);\n                }}\n              >\n                Back\n              </Button> */}\n            </Form.Item>\n          </Form>\n        </div>\n\n        {/* IS THIS YOUR COMPANY? */}\n        <div className=\"step--wrapper\">\n          <div className=\"step--label\">Is this your company?</div>\n          <div className=\"step--value\">{state.name}</div>\n          <div className=\"control-submit\">\n            <Button type=\"primary\" onClick={goNextStep}>\n              Yes\n            </Button>\n            <Button\n              type=\"text\"\n              onClick={() => {\n                setCompanyName(null);\n                setOptions([]);\n                slider.current.prev();\n                form.setFieldsValue({\n                  number: '',\n                });\n              }}>\n              No\n            </Button>\n          </div>\n        </div>\n      </Carousel>\n    </div>\n  );\n};\n\nexport default WelcomeStep1;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { Form, Carousel, Button, Select } from 'antd';\nimport { bindActionCreators } from 'redux';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport actions from '../../../../core/actions';\nimport { fetchAllIndustries } from '../../../../core/services';\n\nimport './style.scss';\n\nconst WelcomeStep2 = ({ goNextStep, goPrevStep }) => {\n  const [industry, setIndustry] = useState(null);\n  const slider = useRef();\n  const state = useSelector((state) => state.registration);\n  const dispatch = useDispatch();\n  const { registrationUpdateState } = bindActionCreators(actions, dispatch);\n\n  useEffect(() => {\n    fetchAllIndustries(dispatch);\n    if (state.industry.length === 0) slider.current.next();\n  }, []);\n\n  const onFinishName = (value) => {\n    slider.current.next();\n    registrationUpdateState({\n      industry: industry,\n    });\n  };\n\n  const onSelect = (value, option) => {\n    setIndustry([option]);\n  };\n\n  return (\n    <div className=\"hello-page__step\">\n      <Carousel ref={slider} dots={false} effect=\"fade\" swipe={false}>\n        <div className=\"step--wrapper\">\n          <div className=\"step--label\">Is your company in the industry of</div>\n          <div className=\"step--value\">\n            {state.industry.length > 0 &&\n              state.industry.map((item, index) => (\n                <p key={`in-${index}`}>\n                  {item.sic_code} - {item.display_value}\n                </p>\n              ))}\n          </div>\n          <div className=\"control-submit\">\n            <Button\n              type=\"primary\"\n              onClick={() => {\n                goNextStep();\n              }}>\n              Yes\n            </Button>\n            <Button\n              type=\"text\"\n              onClick={() => {\n                slider.current.prev();\n              }}>\n              No\n            </Button>\n          </div>\n        </div>\n        <div className=\"step--wrapper\">\n          <Form\n            layout=\"vertical\"\n            requiredMark={false}\n            onFinish={onFinishName}\n            // onFinishFailed={onFinishFailed}\n          >\n            <Form.Item\n              label=\"What is your company’s industry?\"\n              name=\"industry\"\n              rules={[\n                {\n                  required: true,\n                  message: 'Please select your company’s industry!',\n                },\n              ]}>\n              <Select\n                showSearch\n                size=\"large\"\n                showArrow={false}\n                placeholder=\"Select an industry\"\n                optionFilterProp=\"children\"\n                options={state.industriesList}\n                onSelect={onSelect}\n                // onChange={onChange}\n                // onFocus={onFocus}\n                // onBlur={onBlur}\n                // onSearch={onSearch}\n                filterOption={(input, option) => {\n                  return option.display_value.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n                }}></Select>\n            </Form.Item>\n\n            <Form.Item className=\"control-submit\">\n              <Button type=\"primary\" htmlType=\"submit\">\n                Next\n              </Button>\n              <Button\n                type=\"text\"\n                onClick={() => {\n                  goPrevStep();\n                }}>\n                Back\n              </Button>\n            </Form.Item>\n          </Form>\n        </div>\n      </Carousel>\n    </div>\n  );\n};\n\nexport default WelcomeStep2;\n","import { validZero } from '../../../../core/constants';\n\nexport const firstRow = [\n  {\n    label: 'What are your approximate internal staffing costs per year?',\n    name: 'staffing_costs',\n    rules: [\n      {\n        required: true,\n        message: 'Please select your approximate internal staffing costs!',\n      },\n      {\n        required: true,\n        pattern: validZero,\n        message: 'The minimum value is one',\n      },\n    ],\n    placeholder: 'Enter the number',\n    type: 'number',\n    suffix: '£',\n  },\n  {\n    label: 'What are your approximate consumed materials costs per year?',\n    name: 'materials_costs',\n    rules: [\n      {\n        required: true,\n        message: 'Please select your approximate consumed materials costs!',\n      },\n      {\n        required: true,\n        pattern: validZero,\n        message: 'The minimum value is one',\n      },\n    ],\n    placeholder: 'Enter the number',\n    type: 'number',\n    suffix: '£',\n  },\n];\nexport const secondRow = [\n  {\n    label: 'What are your approximate subcontracting costs per year?',\n    name: 'subcontracting_costs',\n    rules: [\n      {\n        required: true,\n        message: 'Please select your approximate subcontracting costs!',\n      },\n      {\n        required: true,\n        pattern: validZero,\n        message: 'The minimum value is one',\n      },\n    ],\n    placeholder: 'Enter the number',\n    type: 'number',\n    suffix: '£',\n  },\n  {\n    label: 'What are your approximate software costs per year?',\n    name: 'software_costs',\n    rules: [\n      {\n        required: true,\n        message: 'Please select your approximate software costs!',\n      },\n      {\n        required: true,\n        pattern: validZero,\n        message: 'Please, don’t start your number with 0',\n      },\n    ],\n    placeholder: 'Enter the number',\n    type: 'number',\n    suffix: '£',\n  },\n];\n","import React, { useRef } from 'react';\nimport { Form, Button, Input, Row, Col } from 'antd';\nimport { bindActionCreators } from 'redux';\nimport { useDispatch, useSelector } from 'react-redux';\nimport actions from '../../../../core/actions';\n\nimport { firstRow, secondRow } from './config';\n\nimport './style.scss';\n\nconst WelcomeStep3 = ({ goNextStep, goPrevStep, setMinPrice, setMaxPrice }) => {\n  const hight = useRef({\n    hightPersent: '',\n  });\n  const dispatch = useDispatch();\n  const { industry } = useSelector((state) => state?.registration);\n  const { registrationUpdateState, registrationChangeEstimate } = bindActionCreators(actions, dispatch);\n\n  const checkForHighestPercent = () => {\n    const check = industry.map((item) => {\n      if (item.percent >= 0) {\n        return item.percent;\n      }\n    });\n    if (Math.max(...check) > 0) {\n      hight.current.hightPersent = Math.max(...check);\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const setToBenefitPriceHandler = (values) => {\n    const { staffing_costs, materials_costs, subcontracting_costs, software_costs } = values;\n\n    const estimated_benefit =\n      (Number(staffing_costs) + Number(materials_costs) + Number(subcontracting_costs) + Number(software_costs)) *\n      0.25 *\n      (Number(hight.current.hightPersent) / 100);\n    setMinPrice(() => Math.floor(estimated_benefit * 0.8));\n    setMaxPrice(() => Math.floor(estimated_benefit * 1.2));\n  };\n\n  const onFinishName = (values) => {\n    registrationUpdateState(values);\n    if (checkForHighestPercent()) {\n      setToBenefitPriceHandler(values);\n      registrationChangeEstimate('benefit');\n    } else {\n      registrationChangeEstimate('estimate');\n    }\n    goNextStep();\n  };\n\n  return (\n    <div className=\"hello-page__step\">\n      <div className=\"step--grid\">\n        <Form\n          layout=\"vertical\"\n          requiredMark={false}\n          onFinish={onFinishName}\n          // onFinishFailed={onFinishFailed}\n        >\n          <Row gutter={56}>\n            {firstRow.map((item) => (\n              <Col key={item.name} className=\"gutter-row\" span={12}>\n                <Form.Item label={item.label} name={item.name} rules={item.rules}>\n                  <Input placeholder={item.placeholder} type={item.type} suffix={item.suffix} />\n                </Form.Item>\n              </Col>\n            ))}\n          </Row>\n          <Row gutter={56}>\n            {secondRow.map((item) => (\n              <Col key={item.name} className=\"gutter-row\" span={12}>\n                <Form.Item label={item.label} name={item.name} rules={item.rules}>\n                  <Input placeholder={item.placeholder} type={item.type} suffix={item.suffix} />\n                </Form.Item>\n              </Col>\n            ))}\n          </Row>\n\n          <Form.Item className=\"control-submit\">\n            <Button type=\"primary\" htmlType=\"submit\">\n              Next\n            </Button>\n            <Button\n              type=\"text\"\n              onClick={() => {\n                goPrevStep();\n              }}>\n              Back\n            </Button>\n          </Form.Item>\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default WelcomeStep3;\n","import React, { useState, useRef } from 'react';\nimport { Carousel, Steps } from 'antd';\n\nimport WelcomeStep1 from './Step1';\nimport WelcomeStep2 from './Step2';\nimport WelcomeStep3 from './Step3';\n\nimport './style.scss';\n\nconst { Step } = Steps;\n\nconst WelcomeSteps = ({ goNextStep, setMinPrice, setMaxPrice }) => {\n  const [currentStep, setCurrentStep] = useState(0);\n  const slider = useRef();\n\n  const contentStyle = {\n    height: '160px',\n    color: '#364d79',\n    lineHeight: '160px',\n    textAlign: 'center',\n    border: '1px solid #364d79',\n  };\n\n  return (\n    <>\n      <div className=\"hello-page__steps\">\n        <Steps current={currentStep}>\n          <Step title=\"Company\" />\n          <Step title=\"Industry\" />\n          <Step title=\"Numbers\" />\n        </Steps>\n      </div>\n\n      <Carousel\n        ref={slider}\n        swipe={false}\n        dots={false}\n        easing=\"ease-in-out\"\n        effect=\"fade\"\n        className=\"hello-page__steps_slider\">\n        <div>\n          <WelcomeStep1\n            goNextStep={() => {\n              slider.current.next();\n              setCurrentStep(currentStep + 1);\n            }}\n          />\n        </div>\n\n        <div>\n          {currentStep === 1 && (\n            <WelcomeStep2\n              goNextStep={() => {\n                slider.current.next();\n                setCurrentStep(currentStep + 1);\n              }}\n              goPrevStep={() => {\n                slider.current.prev();\n                setCurrentStep(currentStep - 1);\n              }}\n            />\n          )}\n        </div>\n        <div>\n          <div>\n            {currentStep === 2 && (\n              <WelcomeStep3\n                setMinPrice={setMinPrice}\n                setMaxPrice={setMaxPrice}\n                goNextStep={() => {\n                  goNextStep();\n                }}\n                goPrevStep={() => {\n                  slider.current.prev();\n                  setCurrentStep(currentStep - 1);\n                }}\n              />\n            )}\n          </div>\n        </div>\n        <div>\n          <h3 style={contentStyle}>4</h3>\n        </div>\n      </Carousel>\n    </>\n  );\n};\n\nexport default WelcomeSteps;\n","import React from 'react';\nimport { Modal, Form, Input, Button, Col } from 'antd';\nimport './style.scss';\nimport { setUserToUnregister } from '../../../../core/services/setUserToUnregister';\n\nconst BenefitModal = ({ state, isModalBenefit, setIsModalBenefit }) => {\n  const formItemLayout = {\n    labelCol: {\n      span: 6,\n    },\n    wrapperCol: {\n      span: 14,\n    },\n  };\n  const onFinish = (values) => {\n    const { name, number, industry, materials_costs, staffing_costs, subcontracting_costs, software_costs } = state;\n    const updatedList = {\n      ...values,\n      name,\n      number,\n      industry,\n      materials_costs,\n      staffing_costs,\n      subcontracting_costs,\n      software_costs,\n    };\n    setUserToUnregister(updatedList);\n    setIsModalBenefit(() => false);\n  };\n  return (\n    <Modal\n      visible={isModalBenefit}\n      closable={false}\n      onCancel={() => {\n        setIsModalBenefit(() => false);\n      }}\n      cancelButtonProps={{ style: { display: 'none' } }}\n      okButtonProps={{ style: { display: 'none' } }}\n      width={316}\n      className=\"modal_benefit\">\n      <Form\n        {...formItemLayout}\n        name=\"askFormBenefit\"\n        onFinish={onFinish}\n        // form={askFrom}\n      >\n        <div className=\"wrapper_info\">\n          <div className=\"promWrapperText\">\n            <p>\n              Due to the nature of your SIC code, we cannot give your company a predicted R&D benefit, please input your\n              phone number and we will give you a call to discuss this.\n            </p>\n          </div>\n          <Col className=\"gutter-row\" span={24}>\n            <Form.Item\n              name=\"phone\"\n              rules={[\n                {\n                  pattern: /^(\\+)(\\d+)$/,\n                  required: true,\n                  message: 'Phone number must start with +, allowed characters is 0-9',\n                },\n              ]}>\n              <Input placeholder=\"Enter your phone number\" style={{ width: '90%', margin: '10px auto 0px auto' }} />\n            </Form.Item>\n          </Col>\n          <Col className=\"gutter-row\" span={24}>\n            <Form.Item\n              name=\"email\"\n              rules={[\n                {\n                  type: 'email',\n                  required: true,\n                  message: 'Please input your email!',\n                },\n              ]}>\n              <Input placeholder=\"Enter your the email\" style={{ width: '90%', margin: '0px auto 10px auto' }} />\n            </Form.Item>\n          </Col>\n          <div className=\"wrapper-btn-modal\">\n            <Button type=\"primary\" htmlType=\"submit\">\n              Confirm\n            </Button>\n          </div>\n        </div>\n      </Form>\n    </Modal>\n  );\n};\nexport default BenefitModal;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { Button, Row, Col, Card, notification, Spin } from 'antd';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { UpVector } from '../../../components/icons';\nimport BenefitModal from './BenefitModal';\nimport { addNewCompany } from '../../../core/services';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport { useDispatch } from 'react-redux';\nimport actions from '../../../core/actions';\nimport { bindActionCreators } from 'redux';\n\nimport './style.scss';\n\nconst antIcon = <LoadingOutlined style={{ fontSize: 20 }} spin />;\n\nconst Сonfirm = ({ goPrevStep, maxPrice, minPrice }) => {\n  const [loader, setLoader] = useState(false);\n  const state = useSelector((state) => state.registration);\n  let history = useHistory();\n  const [isModalBenefit, setIsModalBenefit] = useState(null);\n  const { showEstimate } = useSelector((state) => state.registration);\n  const dispatch = useDispatch();\n  const { registrationChangeEstimate } = bindActionCreators(actions, dispatch);\n\n  useEffect(() => {\n    if (showEstimate === 'estimate') {\n      setIsModalBenefit(() => true);\n    }\n\n    return () => {\n      setIsModalBenefit(() => false);\n    };\n  }, [showEstimate]);\n\n  const addCompany = () => {\n    setLoader(true);\n    const companyData = {\n      name: state.name,\n      number: state.number,\n      industry_ids: state.industry,\n      staffing_costs: state.staffing_costs,\n      materials_costs: state.materials_costs,\n      subcontracting_costs: state.subcontracting_costs,\n      software_costs: state.software_costs,\n    };\n    addNewCompany(companyData).then((data) => {\n      setLoader(false);\n      notification.success({\n        description: 'Company was created successfully',\n      });\n      history.push('/profile/');\n    });\n    registrationChangeEstimate(null);\n  };\n\n  const checkorForRenderBenefitModal = useCallback(() => {\n    if (showEstimate === 'benefit') {\n      return (\n        <div className=\"wrapper_total_benefit\">\n          <p>Estimated total claim benefit</p>\n          <h2>{`£${minPrice} - £${maxPrice}`}</h2>\n        </div>\n      );\n    } else if (showEstimate === 'estimate') {\n      return <BenefitModal state={state} isModalBenefit={isModalBenefit} setIsModalBenefit={setIsModalBenefit} />;\n    }\n  }, [isModalBenefit, setIsModalBenefit, showEstimate]);\n\n  return (\n    <div className={`welcome__comfirm ${isModalBenefit ? '' : 'isBenefitModal'}`}>\n      <h1>Please confirm information to proceed to official service agreement</h1>\n\n      <div className=\"hello-page__description\">\n        Thank you for signing up to work with Granter or your next R&D tax credit claim. We are excited to be working\n        with you in the future.\n      </div>\n      {state.showEstimate === null ? (\n        <div className=\"upload-loading\">\n          <Spin indicator={antIcon} />\n        </div>\n      ) : (\n        checkorForRenderBenefitModal()\n      )}\n      <div className=\"welcome__comfirm_info\">\n        <Row gutter={24}>\n          <Col span={8}>\n            <Card>\n              <p>{state.name}</p>\n              <span>Company name</span>\n            </Card>\n          </Col>\n          <Col span={8}>\n            <Card>\n              <p>{state.number}</p>\n              <span>Company numbner</span>\n            </Card>\n          </Col>\n          <Col span={8}>\n            <Card>\n              {state.industry.length > 0 &&\n                state.industry.map((item, index) => (\n                  <p key={`ind-${index}`}>\n                    {item.sic_code} - {item.display_value}\n                  </p>\n                ))}\n              <span>Industry</span>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n      <div className=\"welcome__comfirm_submit\">\n        <Button type=\"primary\" loading={loader} onClick={addCompany}>\n          Confirm\n        </Button>\n        <Button type=\"text\" onClick={goPrevStep}>\n          Back\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default Сonfirm;\n","import React, { useRef, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Carousel } from 'antd';\nimport Layout from '../../components/LayoutDashboard/Layout';\nimport Steps from './Steps';\nimport Сonfirm from './Сonfirm';\nimport arrowLeft from '../../assets/img/arrow-left.svg';\nimport './style.scss';\n\nconst AddProjectPage = () => {\n  const slider = useRef();\n  const [minPrice, setMinPrice] = useState(null);\n  const [maxPrice, setMaxPrice] = useState(null);\n  return (\n    <Layout isLogged={false} className=\"dashboard\">\n      <div className=\"add-project\">\n        <div className=\"add-project__header\">\n          <Link to=\"/profile/\">\n            <img src={arrowLeft} alt=\"\" />\n            <span>To Profile</span>\n          </Link>\n        </div>\n        <div className=\"add-project__wrapper\">\n          <h2>Add new company with 3 little steps</h2>\n          <Carousel\n            ref={slider}\n            swipe={false}\n            dots={false}\n            easing=\"ease-in-out\"\n            effect=\"fade\"\n            className=\"hello-page__steps_slider\">\n            <div>\n              <Steps\n                setMinPrice={setMinPrice}\n                setMaxPrice={setMaxPrice}\n                goNextStep={() => {\n                  slider.current.next();\n                }}\n              />\n            </div>\n            <div>\n              <Сonfirm\n                minPrice={minPrice}\n                maxPrice={maxPrice}\n                goNextStep={() => {\n                  slider.current.next();\n                }}\n                goPrevStep={() => {\n                  slider.current.prev();\n                }}\n              />\n            </div>\n          </Carousel>\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default AddProjectPage;\n","import React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Checkbox, Dropdown, Button, Tooltip } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { IconDeleteFile, IconDownload } from '../../../components/icons';\nimport PDFSVG from '../../../assets/img/PDF.svg';\nimport XLSXSVG from '../../../assets/img/XLSX.svg';\nimport DOCSSVG from '../../../assets/img/DOCS.svg';\nimport './style.scss';\n\nconst DocumentRow = ({ file, onFileSelect, onDeleteFile }) => {\n  const [onRemoveDropdown, setOnRemoveDropdown] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const { step } = useParams();\n\n  const checkForExt = (extension) => {\n    switch (extension) {\n      case 'doc':\n        return DOCSSVG;\n      case 'docx':\n        return DOCSSVG;\n      case 'pdf':\n        return PDFSVG;\n      case 'xls':\n        return XLSXSVG;\n      case 'xlsx':\n        return XLSXSVG;\n      default:\n        return extension;\n    }\n  };\n\n  return (\n    <tr className={onRemoveDropdown ? 'red' : ''}>\n      <td className=\"select\">\n        <Checkbox\n          onChange={(e) => {\n            onFileSelect(e, file.id);\n          }}\n          checked={file.checked}\n        />\n      </td>\n      <td className=\"name\">\n        <div className=\"td-wrapper\">\n          {step === 'technical' ? (\n            <div>\n              <img src={checkForExt(file.extension)} alt=\"document-file\" />\n              <span>{file.original_name}</span>\n            </div>\n          ) : (\n            <Link to={`/document/${file.claim_id}/${file.id}/`}>\n              <img src={checkForExt(file.extension)} alt=\"document-file\" />\n              <span>{file.original_name}</span>\n            </Link>\n          )}\n        </div>\n      </td>\n      <td className=\"actions\">\n        <div className=\"td-wrapper\">\n          <a href={file.url} target=\"blank\">\n            <IconDownload />\n          </a>\n          {!file.has_unresolved_comments ? (\n            <Dropdown\n              placement=\"bottomRight\"\n              trigger=\"click\"\n              visible={onRemoveDropdown}\n              onVisibleChange={(visible) => {\n                if (!visible) setOnRemoveDropdown(false);\n                // onRed(visible);\n              }}\n              overlay={\n                <div className=\"step-file--title-dropdown\">\n                  <div className=\"dropdown-title\">Are you sure you want to delete this Document?</div>\n                  <div className=\"dropdown-actions\">\n                    <Button\n                      type=\"button\"\n                      onClick={(e) => {\n                        setOnRemoveDropdown(false);\n                        // onRed(false);\n                      }}>\n                      Back\n                    </Button>\n                    <Button\n                      type=\"primary\"\n                      onClick={() => {\n                        setLoading(true);\n                        onDeleteFile(file.claim_id, file.id);\n                      }}\n                      loading={loading}>\n                      Delete\n                    </Button>\n                  </div>\n                </div>\n              }>\n              <button\n                className=\"step-file--remove\"\n                onClick={() => {\n                  setOnRemoveDropdown(true);\n                }}>\n                <IconDeleteFile />\n              </button>\n            </Dropdown>\n          ) : (\n            <Tooltip placement=\"left\" title=\"This file cannot be deleted because it contains unresolved comment\">\n              <button className=\"step-file--remove\" disabled>\n                <IconDeleteFile />\n              </button>\n            </Tooltip>\n          )}\n        </div>\n      </td>\n    </tr>\n  );\n};\n\nexport default DocumentRow;\n","import React, { useEffect } from 'react';\nimport { Modal, Button } from 'antd';\n\nimport { CloseIconModal } from '../../../components/icons';\n\nimport iconPdf from '../../../assets/img/icon-pdf.svg';\n\nimport './style.scss';\n\nconst OnDeleteModal = ({ visible, onClose, deleteList, onDeleteFile }) => {\n  const onDeleteList = () => {\n    deleteList.forEach((item) => {\n      if (!item.has_unresolved_comments) {\n        onDeleteFile(item.claim_id, item.id);\n        onClose();\n      }\n    });\n  };\n\n  return (\n    <Modal\n      className=\"documents-remove-modal\"\n      title={false}\n      footer={false}\n      visible={visible}\n      width={700}\n      onCancel={onClose}\n      closeIcon={<CloseIconModal />}>\n      {deleteList.filter((item) => item.has_unresolved_comments).length ? (\n        <>\n          <h2>Unfortunately, you can't delete this file(s)</h2>\n          <div className=\"documents-remove-modal__text\">\n            The following files cannot be deleted because it contains an{' '}\n            <b>unresolved comments. Please, contact your manager to discuss the comments</b>\n          </div>\n          <ul className=\"documents-remove-modal__list\">\n            {deleteList\n              .filter((item) => item.has_unresolved_comments)\n              .map((item) => (\n                <li key={`delete-file-${item.id}`}>\n                  <img src={iconPdf} alt=\"\" />\n                  <span>{item.original_name}</span>\n                </li>\n              ))}\n          </ul>\n          <div className=\"documents-remove-modal__actions\">\n            <Button type=\"button\" onClick={onClose}>\n              Back\n            </Button>\n            <Button type=\"primary\" onClick={onDeleteList} danger>\n              Delete the rest\n            </Button>\n          </div>\n        </>\n      ) : (\n        <>\n          <h2>Are you sure you want to delete this Documents?</h2>\n          <div className=\"documents-remove-modal__actions\">\n            <Button type=\"button\" onClick={onClose}>\n              Cancel\n            </Button>\n            <Button type=\"primary\" onClick={onDeleteList} danger>\n              Delete\n            </Button>\n          </div>\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default OnDeleteModal;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { Form, Checkbox, Select, Skeleton } from 'antd';\nimport { bindActionCreators } from 'redux';\nimport PDFSVG from '../../assets/img/PDF.svg';\nimport XLSXSVG from '../../assets/img/XLSX.svg';\nimport DOCSSVG from '../../assets/img/DOCS.svg';\nimport Layout from '../../components/LayoutDashboard/Layout';\nimport DocumentRow from './DocumentRow';\nimport OnDeleteModal from './OnDeleteModal';\nimport { getDocumentsManagerList, getDownloadList, deleteFile } from '../../core/services';\nimport { IconDeleteFile, IconDownload, IconFilter } from '../../components/icons';\nimport iconPdf from '../../assets/img/icon-pdf.svg';\nimport iconSelectArrow from '../../assets/img/iceon-select-arrow.svg';\nimport actions from '../../core/actions';\n\nimport './style.scss';\n\nconst { Option } = Select;\n\nconst DocumentsPage = () => {\n  const [fileList, setFileList] = useState(null);\n  const [filterList, setFilterList] = useState(null);\n  const [isDisabled, setIsDisabled] = useState(true);\n  const [isDisabledDelete, setIsDisabledDelete] = useState(true);\n  const dispatch = useDispatch();\n  const { isVisibleModalDeleteDocs } = useSelector((state) => state.modal);\n  const { showModalDeleteDocs, closeModalDeleteDocs } = bindActionCreators(actions, dispatch);\n  const { step } = useParams();\n  const companyId = useSelector((state) => state.user.currentCompany?.id);\n\n  useEffect(() => {\n    if (companyId) {\n      setFileList(false);\n      setFilterList(false);\n      getDocumentsManagerList(step, companyId).then((data) => {\n        const list = data.map((item) => {\n          // const extension = item.original_name.match(/\\.[0-9a-z]+$/i)[0];\n          // if (extension === '.pdf') {\n          //   item.extension = 'pdf';\n          // } else if (extension === '.doc' || extension === '.docx') {\n          //   item.extension = 'doc';\n          // } else if (extension === '.xls' || extension === '.xlsx') {\n          //   item.extension = 'xls';\n          // }\n          if (step === 'technical' && item.project) {\n            item.status = item.project.status;\n          }\n          item.checked = false;\n          return item;\n        });\n        setFileList(list);\n        setFilterList(list);\n      });\n    }\n  }, [companyId, step]);\n\n  const onFilterChange = (changedValues, filters) => {\n    let result = fileList.filter((file) => {\n      // if (filters.extension.length || filters.claim_id.length || filters.status.length) {\n      if (filters.extension.length || filters.status.length) {\n        let isExtension;\n        let isClaimId;\n        let isStatus;\n        for (let i in filters) {\n          filters[i].forEach((filter) => {\n            switch (i) {\n              case 'extension':\n                isExtension = filters[i].filter((item) => item === file[i]).length ? true : false;\n                break;\n              case 'claim_id':\n                isClaimId = filters[i].filter((item) => item === file[i]).length ? true : false;\n                break;\n              case 'status':\n                isStatus = filters[i].filter((item) => item === file[i]).length ? true : false;\n                break;\n\n              default:\n                break;\n            }\n          });\n        }\n\n        if (\n          (isExtension || isExtension === undefined) &&\n          (isClaimId || isClaimId === undefined) &&\n          (isStatus || isStatus === undefined)\n        ) {\n          return true;\n        } else {\n          return false;\n        }\n      } else {\n        return true;\n      }\n    });\n    setFilterList(result);\n  };\n\n  const onFileSelect = (e, id) => {\n    const result = [...filterList];\n    result.map((item) => {\n      if (item.id === id) {\n        item.checked = e.target.checked;\n      }\n      return item;\n    });\n    setFilterList(result);\n    setIsDisabled(result.filter((item) => item.checked).length === 0);\n    setIsDisabledDelete(result.filter((item) => item.checked && !item.has_unresolved_comments).length === 0);\n  };\n\n  const onDownloadList = () => {\n    const list = filterList.filter((item) => item.checked);\n    const stage = list[0].stage;\n    getDownloadList(list, stage).then((data) => {\n      window.open(data.zip);\n    });\n  };\n\n  const onDeleteFile = (claim_id, id) => {\n    deleteFile(claim_id, id).then((data) => {\n      setFileList(false);\n      setFilterList(false);\n      getDocumentsManagerList(step, companyId).then((data) => {\n        const list = data.map((item) => {\n          const extension = item.original_name.match(/\\.[0-9a-z]+$/i)[0];\n          if (extension === '.pdf') {\n            item.extension = 'pdf';\n          } else if (extension === '.doc' || extension === '.docx') {\n            item.extension = 'doc';\n          } else if (extension === '.xls' || extension === '.xlsx') {\n            item.extension = 'xls';\n          }\n          item.checked = false;\n          return item;\n        });\n        //list.sort((a, b) => (new Date(a.created_at).getTime() < new Date(b.created_at).getTime() ? 1 : -1));\n        setFileList(list);\n        setFilterList(list);\n      });\n    });\n  };\n\n  const onSort = (mode) => {\n    const result = [...filterList];\n    if (mode === 'name') {\n      result.sort((a, b) => (a.original_name < b.original_name ? 1 : -1));\n    } else if (mode === 'date') {\n      result.sort((a, b) => (new Date(a.created_at).getTime() < new Date(b.created_at).getTime() ? 1 : -1));\n    }\n    setFilterList(result);\n  };\n\n  return (\n    <Layout isLogged={false} className=\"dashboard documents\">\n      <div className=\"documents-wrapper\">\n        <div className=\"documents__table\">\n          <div className=\"documents__table_head\">\n            <div className=\"show\">\n              <span>Show:</span>\n              <Select\n                defaultValue=\"date\"\n                suffixIcon={<img src={iconSelectArrow} alt=\"\" />}\n                dropdownMatchSelectWidth={false}\n                getPopupContainer={() => document.querySelector('.documents__table_sort')}\n                className=\"documents__table_sort\"\n                onChange={onSort}\n                //onChange={onChangeMode}\n              >\n                <Option value=\"date\">by date</Option>\n                <Option value=\"name\">by name</Option>\n              </Select>\n            </div>\n            <button className=\"head--download\" disabled={isDisabled} onClick={onDownloadList}>\n              <IconDownload />\n              <span>Download File</span>\n            </button>\n            <button\n              className=\"head--delete\"\n              onClick={() => {\n                showModalDeleteDocs();\n              }}\n              disabled={isDisabledDelete}>\n              <IconDeleteFile />\n              <span>Delete Selected</span>\n            </button>\n          </div>\n          <div className=\"documents__table_body\">\n            {!filterList ? (\n              <Skeleton active />\n            ) : filterList.length === 0 ? (\n              <div className=\"documents__table_empty\">\n                <img src={iconPdf} alt=\"\" />\n                <div>No data here at the moment</div>\n              </div>\n            ) : (\n              <table>\n                <tbody>\n                  {filterList.map((item) => (\n                    <DocumentRow key={item.id} file={item} onFileSelect={onFileSelect} onDeleteFile={onDeleteFile} />\n                  ))}\n                </tbody>\n              </table>\n            )}\n          </div>\n        </div>\n        <div className=\"documents__filter\">\n          <div className=\"documents__filter_head\">\n            <IconFilter />\n            <span>Filter</span>\n          </div>\n          <Form\n            name=\"basic\"\n            initialValues={{\n              extension: [],\n              claim_id: [],\n              status: [],\n            }}\n            className=\"documents__filter_form\"\n            onValuesChange={onFilterChange}>\n            <section>\n              <h3>Document Type</h3>\n              <Form.Item name=\"extension\" valuePropName=\"checked\">\n                <Checkbox.Group>\n                  <Checkbox value=\"pdf\">\n                    <img src={PDFSVG} alt=\"pdf\" /> PDF\n                  </Checkbox>\n                  <Checkbox value=\"docx\">\n                    <img src={DOCSSVG} alt=\"doc\" /> Doc\n                  </Checkbox>\n                  <Checkbox value=\"xlsx\">\n                    <img src={XLSXSVG} alt=\"xls\" /> Exel\n                  </Checkbox>\n                </Checkbox.Group>\n              </Form.Item>\n            </section>\n            {/* <section>\n                <h3>Claim</h3>\n                <Form.Item name=\"claim_id\">\n                  <Checkbox.Group>\n                    {claims.map((item) => (\n                      <Checkbox key={`checkbox-${item.id}`} value={item.id}>\n                        <span className=\"claims--title\">{item.title}</span>\n                        {item.start_date && item.end_date && (\n                          <span className=\"claims--title\">\n                            ({item.start_date} - {item.end_date})\n                          </span>\n                        )}\n                      </Checkbox>\n                    ))}\n                  </Checkbox.Group>\n                </Form.Item>\n              </section> */}\n            <section>\n              <h3>Status</h3>\n              <Form.Item name=\"status\" valuePropName=\"checked\">\n                <Checkbox.Group>\n                  {/* <Checkbox value={1}>Waiting</Checkbox> */}\n                  <Checkbox value={2}>On Review</Checkbox>\n                  <Checkbox value={3}>Confirmed</Checkbox>\n                </Checkbox.Group>\n              </Form.Item>\n            </section>\n          </Form>\n        </div>\n      </div>\n      <OnDeleteModal\n        visible={isVisibleModalDeleteDocs}\n        deleteList={filterList ? filterList?.filter((item) => item.checked) : []}\n        onDeleteFile={onDeleteFile}\n        onClose={() => {\n          closeModalDeleteDocs();\n        }}\n      />\n    </Layout>\n  );\n};\n\nexport default DocumentsPage;\n","import React, { useState } from 'react';\nimport { Modal, Button } from 'antd';\nimport './style.scss';\nimport { NoFoundDocSVG } from '../../components/icons/index';\nimport { CloseIconModal } from '../../components/icons/index';\n\nimport { useHistory } from 'react-router-dom';\n\nconst NoFoundDoc = () => {\n  const [notFound, setNotFound] = useState(true);\n  const history = useHistory();\n\n  return (\n    <div id=\"full_back\">\n      <Modal\n        visible={notFound}\n        cancelButtonProps={{ style: { display: 'none' } }}\n        okButtonProps={{ style: { display: 'none' } }}\n        width={552}\n        className=\"modal_benefit\"\n        getContainer={() => document.getElementById('full_back')}\n        closeIcon={<CloseIconModal />}\n        onCancel={() => {\n          setNotFound();\n          history.push('/active-claims');\n        }}>\n        <div className=\"wrapper_info\">\n          <div className=\"item\">\n            <NoFoundDocSVG />\n          </div>\n          <b className=\"item\">The file you selected is deleted. Try another one</b>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            className=\"item\"\n            onClick={() => {\n              setNotFound();\n              history.push('/active-claims');\n            }}>\n            Okay\n          </Button>\n        </div>\n      </Modal>\n    </div>\n  );\n};\nexport default NoFoundDoc;\n","import lockr from 'lockr';\nimport { notification } from 'antd';\n\nimport { IconWarning } from '../../components/icons';\nconst { REACT_APP_API_URL } = process.env;\n\nconst getResource = async (url) => {\n  const token = lockr.get('auth-key');\n  const res = await fetch(`${REACT_APP_API_URL}/${url}`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n      Authorization: `Bearer ${token}`,\n    },\n  });\n  if (!res.ok) {\n    throw new Error();\n  }\n  const body = await res.json();\n  return body;\n};\n\nconst postResource = async (url, dataBody) => {\n  dataBody = dataBody || new FormData();\n  const token = lockr.get('auth-key');\n  const res = await fetch(`${REACT_APP_API_URL}/${url}`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      Authorization: `Bearer ${token}`,\n    },\n    body: dataBody,\n  });\n  if (!res.ok) {\n    throw new Error();\n  }\n  const body = await res.json();\n  return body;\n};\n\nconst deleteResource = async (url) => {\n  const token = lockr.get('auth-key');\n  const res = await fetch(`${REACT_APP_API_URL}/${url}`, {\n    method: 'DELETE',\n    headers: {\n      Accept: 'application/json',\n      Authorization: `Bearer ${token}`,\n    },\n  });\n  if (!res.ok) {\n    throw new Error();\n  }\n  const body = await res.json();\n  return body;\n};\n\nconst getAllClients = async (page, sort_by, sort_dir) => {\n  const body = new FormData();\n  body.append('page', page);\n  if (sort_by !== undefined && sort_dir !== undefined) {\n    body.append('sort_by', sort_by);\n    body.append('sort_dir', sort_dir.slice(0, -3));\n  }\n  try {\n    const data = await postResource(`admin/clients`, body);\n    return data.data;\n  } catch (err) {\n    return null;\n  }\n};\n\nconst postClientCompanyEdits = async (companyId, form) => {\n  const body = new FormData();\n  for (let i in form) {\n    body.append(i, form[i]);\n  }\n\n  try {\n    const data = await postResource(`admin/company/edit/${companyId}`, body);\n    return data.data;\n  } catch (err) {\n    return null;\n  }\n};\n\nconst getClient = async (clientID) => {\n  try {\n    const data = await getResource(`admin/client/${clientID}`);\n    return data.data;\n  } catch (err) {\n    return null;\n  }\n};\n\nconst getClientCompanies = async (clientID) => {\n  try {\n    const data = await getResource(`admin/client/companies/${clientID}`);\n    return data.data;\n  } catch (err) {\n    return null;\n  }\n};\n\nconst getClientActions = async (clientID) => {\n  try {\n    const data = await getResource(`admin/client/logs/${clientID}`);\n    return data.data;\n  } catch (err) {\n    return null;\n  }\n};\n\nconst postEditClient = async (clientID, form) => {\n  const formData = new FormData();\n  for (let i in form) {\n    formData.append(i, form[i]);\n  }\n  try {\n    const data = await postResource(`admin/client/edit/${clientID}`, formData);\n    return data.data;\n  } catch (err) {\n    return null;\n  }\n};\n\nconst deleteClient = async (clientID) => {\n  try {\n    const data = await deleteResource(`admin/client/${clientID}`);\n    return data.data;\n  } catch (err) {\n    return null;\n  }\n};\n\nconst postCompanyLogo = async (companyId, logo) => {\n  const formData = new FormData();\n  formData.append('logo', logo);\n  try {\n    const data = await postResource(`admin/company/upload-logo/${companyId}`, formData);\n    return data.data;\n  } catch (err) {\n    return null;\n  }\n};\n\nconst deleteComany = async (companyId, clientId) => {\n  try {\n    const data = await deleteResource(`admin/company/delete/${companyId}/${clientId}`);\n    return data.data;\n  } catch (err) {\n    return null;\n  }\n};\n\nconst addNewCompany = async (clientId, company) => {\n  const formData = new FormData();\n  for (let i in company) {\n    if (i === 'industry_ids') {\n      company[i].forEach((el, n) => {\n        formData.append('industry_ids[' + n + ']', el.id);\n      });\n    } else {\n      formData.append(i, company[i]);\n    }\n  }\n  try {\n    const data = await postResource(`admin/company/add/${clientId}`, formData);\n    return data.data;\n  } catch (err) {\n    return null;\n  }\n};\n\nexport {\n  getClient,\n  getClientCompanies,\n  getClientActions,\n  postClientCompanyEdits,\n  getAllClients,\n  postEditClient,\n  deleteClient,\n  postCompanyLogo,\n  deleteComany,\n  addNewCompany,\n};\n","import React from 'react';\nimport lockr from 'lockr';\nimport { notification } from 'antd';\n\nimport { IconWarning } from '../../components/icons';\nconst { REACT_APP_API_URL } = process.env;\n\nconst getResource = async (url) => {\n  const token = lockr.get('auth-key');\n  const res = await fetch(`${REACT_APP_API_URL}/${url}`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n      Authorization: `Bearer ${token}`,\n    },\n  });\n  if (!res.ok) {\n    throw new Error();\n  }\n  const body = await res.json();\n  return body;\n};\n\nconst postResource = async (url, dataBody) => {\n  dataBody = dataBody || new FormData();\n  const token = lockr.get('auth-key');\n  const res = await fetch(`${REACT_APP_API_URL}/${url}`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      Authorization: `Bearer ${token}`,\n    },\n    body: dataBody,\n  });\n  if (!res.ok) {\n    throw new Error();\n  }\n  const body = await res.json();\n  return body;\n};\n\nconst deleteResource = async (url) => {\n  const token = lockr.get('auth-key');\n  const res = await fetch(`${REACT_APP_API_URL}/${url}`, {\n    method: 'DELETE',\n    headers: {\n      Accept: 'application/json',\n      Authorization: `Bearer ${token}`,\n    },\n  });\n  if (!res.ok) {\n    throw new Error();\n  }\n  const body = await res.json();\n  return body;\n};\n\nconst getClaim = async (claimId) => {\n  try {\n    const data = await postResource(`admin/claim/get/${claimId}`);\n    return data.data;\n  } catch (err) {\n    return null;\n  }\n};\n\nconst getIntroductionClaimStep = async (claimId) => {\n  try {\n    const intro = await getResource(`admin/claim/stage/introduction/${claimId}`);\n    return intro.data;\n  } catch (err) {\n    return null;\n  }\n};\nconst getFinancialClaimStep = async (claimId) => {\n  try {\n    const intro = await getResource(`admin/claim/stage/financial/${claimId}`);\n    return intro.data;\n  } catch (err) {\n    return null;\n  }\n};\n\nconst getTechnicalClaimStep = async (claimId) => {\n  try {\n    const intro = await getResource(`admin/claim/stage/technical/${claimId}`);\n    return intro.data;\n  } catch (err) {\n    return null;\n  }\n};\n\nconst getDeliverablesClaimStep = async (claimId) => {\n  try {\n    const intro = await getResource(`admin/claim/stage/deliverables/${claimId}`);\n    return intro.data;\n  } catch (err) {\n    return null;\n  }\n};\n\nconst getSubmissionClaimStep = async (claimId) => {\n  try {\n    const intro = await getResource(`admin/claim/stage/submissions/${claimId}`);\n    return intro.data;\n  } catch (err) {\n    return null;\n  }\n};\n\nconst approveDocument = async (documentId, status) => {\n  try {\n    const appDoc = await postResource(`admin/claim/approve/document/${documentId}/${status}`);\n    return appDoc;\n  } catch (err) {\n    return null;\n  }\n};\n\nconst approveStep = async (claimId, stepNumber) => {\n  try {\n    const appDoc = await postResource(`admin/claim/approve/${claimId}/${stepNumber}`);\n    return appDoc.data;\n  } catch (err) {\n    return null;\n  }\n};\n\nconst uploadDocumentToClaim = async (claimId, documentId, file) => {\n  const formData = new FormData();\n  formData.append('file', file);\n  try {\n    const appDoc = await postResource(`admin/documents/upload/${claimId}/${documentId}`, formData);\n    return appDoc.data;\n  } catch (err) {\n    return null;\n  }\n};\n\nconst deleteDocumentFromClaim = async (claimId, documentId) => {\n  try {\n    const appDoc = await deleteResource(`admin/documents/delete/${claimId}/${documentId}`);\n    return appDoc.data;\n  } catch (err) {\n    notification.error({\n      className: 'error-message',\n      description: 'Document has unresolved comments',\n      icon: <IconWarning />,\n    });\n    return null;\n  }\n};\n\nconst editClaimCards = async (claimId, form) => {\n  const formData = new FormData();\n  for (let i in form) {\n    formData.append(i, form[i]);\n  }\n\n  try {\n    const appDoc = await postResource(`admin/claim/edit/cards/${claimId}`, formData);\n    return appDoc.data;\n  } catch (err) {\n    return null;\n  }\n};\n\nconst editClaimData = async (claimId, form) => {\n  const formData = new FormData();\n  for (let i in form) {\n    formData.append(i, form[i]);\n  }\n  try {\n    const appDoc = await postResource(`admin/claim/edit/dates/${claimId}`, formData);\n    return appDoc.data;\n  } catch (err) {\n    return null;\n  }\n};\n\nexport {\n  getClaim,\n  getIntroductionClaimStep,\n  getFinancialClaimStep,\n  getTechnicalClaimStep,\n  getDeliverablesClaimStep,\n  approveDocument,\n  approveStep,\n  deleteDocumentFromClaim,\n  uploadDocumentToClaim,\n  getSubmissionClaimStep,\n  editClaimCards,\n  editClaimData,\n};\n","import lockr from 'lockr';\nimport { notification } from 'antd';\n\nimport { IconWarning } from '../../components/icons';\nconst { REACT_APP_API_URL } = process.env;\n\nconst getResource = async (url) => {\n  const token = lockr.get('auth-key');\n  const res = await fetch(`${REACT_APP_API_URL}/${url}`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n      Authorization: `Bearer ${token}`,\n    },\n  });\n  if (!res.ok) {\n    throw new Error();\n  }\n  const body = await res.json();\n  return body;\n};\n\nconst postResource = async (url, dataBody) => {\n  dataBody = dataBody || new FormData();\n  const token = lockr.get('auth-key');\n  const res = await fetch(`${REACT_APP_API_URL}/${url}`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      Authorization: `Bearer ${token}`,\n    },\n    body: dataBody,\n  });\n  if (!res.ok) {\n    throw new Error();\n  }\n  const body = await res.json();\n  return body;\n};\n\nconst deleteResource = async (url) => {\n  const token = lockr.get('auth-key');\n  const res = await fetch(`${REACT_APP_API_URL}/${url}`, {\n    method: 'DELETE',\n    headers: {\n      Accept: 'application/json',\n      Authorization: `Bearer ${token}`,\n    },\n  });\n  if (!res.ok) {\n    throw new Error();\n  }\n  const body = await res.json();\n  return body;\n};\n\nconst getDocument = async (claimId, documentId) => {\n  try {\n    const data = await getResource(`admin/documents/comments/${claimId}/${documentId}`);\n    return data.data;\n  } catch (err) {\n    return null;\n  }\n};\n\nconst approveComment = async (commentId) => {\n  try {\n    const data = await postResource(`admin/documents/comment/approve/${commentId}`);\n    return data.data;\n  } catch (err) {\n    return null;\n  }\n};\n\nconst unApproveComment = async (commentId) => {\n  try {\n    const data = await postResource(`admin/documents/comment/unapprove/${commentId}`);\n    return data.data;\n  } catch (err) {\n    return null;\n  }\n};\n\nconst postNewComment = async (claimId, id, text, is_reply, comment_id) => {\n  const formData = new FormData();\n  formData.append('text', text);\n  formData.append('page', 1);\n  if (is_reply) {\n    formData.append('is_reply', is_reply);\n    formData.append('comment_id', comment_id);\n  }\n  try {\n    const data = await postResource(`admin/documents/comment/${claimId}/${id}`, formData);\n    return data.data;\n  } catch (err) {\n    return null;\n  }\n};\n\nconst removeComment = async (claimId, documentId, commentId) => {\n  try {\n    const data = await deleteResource(`admin/documents/comments/${claimId}/${documentId}/${commentId}`);\n    return data.data;\n  } catch (err) {\n    return null;\n  }\n};\n\nconst setSkipFile = async (claimId, documentId) => {\n  try {\n    const data = await postResource(`admin/documents/skip/${claimId}/${documentId}`);\n    return data.data;\n  } catch (err) {\n    return null;\n  }\n};\n\nexport { getDocument, approveComment, postNewComment, removeComment, setSkipFile, unApproveComment };\n","import lockr from 'lockr';\nimport { notification } from 'antd';\n\nimport { IconWarning } from '../../components/icons';\nconst { REACT_APP_API_URL } = process.env;\n\nconst getResource = async (url) => {\n  const token = lockr.get('auth-key');\n  const res = await fetch(`${REACT_APP_API_URL}/${url}`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n      Authorization: `Bearer ${token}`,\n    },\n  });\n  if (!res.ok) {\n    throw new Error();\n  }\n  const body = await res.json();\n  return body;\n};\n\nconst postResource = async (url, dataBody) => {\n  dataBody = dataBody || new FormData();\n  const token = lockr.get('auth-key');\n  const res = await fetch(`${REACT_APP_API_URL}/${url}`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      Authorization: `Bearer ${token}`,\n    },\n    body: dataBody,\n  });\n  if (!res.ok) {\n    throw new Error();\n  }\n  const body = await res.json();\n  return body;\n};\n\nconst deleteResource = async (url) => {\n  const token = lockr.get('auth-key');\n  const res = await fetch(`${REACT_APP_API_URL}/${url}`, {\n    method: 'DELETE',\n    headers: {\n      Accept: 'application/json',\n      Authorization: `Bearer ${token}`,\n    },\n  });\n  if (!res.ok) {\n    throw new Error();\n  }\n  const body = await res.json();\n  return body;\n};\n\nconst setNewProject = async (claimId, form) => {\n  const formData = new FormData();\n  for (let i in form) {\n    if (i === 'documents') {\n      form[i].forEach((doc, index) => {\n        formData.append(`${i}[${index}]`, doc);\n      });\n    } else {\n      if (form[i]) formData.append(i, form[i]);\n    }\n  }\n  try {\n    const data = await postResource(`admin/project/add/${claimId}`, formData);\n    return data.data;\n  } catch (err) {\n    return null;\n  }\n};\n\nconst addDocumentToProject = async (claimId, projectId, file, is_main) => {\n  const formData = new FormData();\n  formData.append('document', file);\n  if (is_main) formData.append('is_main', is_main);\n\n  try {\n    const data = await postResource(`admin/project/add/document/${claimId}/${projectId}`, formData);\n    return data.data;\n  } catch (err) {\n    return null;\n  }\n};\n\nconst editProject = async (claimId, projectId, form) => {\n  const formData = new FormData();\n  for (let i in form) {\n    if (form[i]) formData.append(i, form[i]);\n  }\n\n  try {\n    const data = await postResource(`admin/project/edit/${claimId}/${projectId}`, formData);\n    return data.data;\n  } catch (err) {\n    return null;\n  }\n};\n\nconst removeDocumentFromProject = async (claimId, projectId, documentId) => {\n  try {\n    const data = await deleteResource(`admin/project/delete/document/${claimId}/${projectId}/${documentId}`);\n    return data.data;\n  } catch (err) {\n    return null;\n  }\n};\n\nconst removeProject = async (claimId, projectId) => {\n  try {\n    const data = await deleteResource(`admin/project/delete/${claimId}/${projectId}`);\n    return data.data;\n  } catch (err) {\n    return null;\n  }\n};\n\nconst approveProject = async (projectId, status) => {\n  try {\n    const data = await postResource(`admin/claim/approve/project/${projectId}/${status}`);\n    return data.data;\n  } catch (err) {\n    return null;\n  }\n};\n\nexport { setNewProject, addDocumentToProject, editProject, removeDocumentFromProject, removeProject, approveProject };\n","import lockr from 'lockr';\nconst { REACT_APP_API_URL } = process.env;\n\nconst getResource = async (url) => {\n  const token = lockr.get('auth-key');\n  const res = await fetch(`${REACT_APP_API_URL}/${url}`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n      Authorization: `Bearer ${token}`,\n    },\n  });\n  if (!res.ok) {\n    throw new Error();\n  }\n  const body = await res.json();\n  return body;\n};\n\nconst postResource = async (url, dataBody) => {\n  dataBody = dataBody || new FormData();\n  const token = lockr.get('auth-key');\n  const res = await fetch(`${REACT_APP_API_URL}/${url}`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      Authorization: `Bearer ${token}`,\n    },\n    body: dataBody,\n  });\n  if (!res.ok) {\n    throw new Error();\n  }\n  const body = await res.json();\n  return body;\n};\n\nexport const createNewAdmin = async (email, name, password, phone, avatar) => {\n  const body = new FormData();\n  body.append('email', email);\n  body.append('name', name);\n  body.append('password', password);\n  body.append('phone', phone);\n  body.append('avatar', avatar);\n  try {\n    const newAdmin = await postResource(`admin/admin/create`, body);\n    return newAdmin;\n  } catch (error) {\n    return null;\n  }\n};\n\nexport const getAllAdmins = async () => {\n  try {\n    const allAdmins = await postResource(`admin/get/admins`);\n    return allAdmins.data;\n  } catch (error) {\n    return null;\n  }\n};\n\nexport const deleteAdmin = async (adminId) => {\n  const token = lockr.get('auth-key');\n  try {\n    const delAdmin = await fetch(`${REACT_APP_API_URL}/admin/admin/${adminId}`, {\n      method: 'DELETE',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    const res = await delAdmin.json();\n    return res;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n","import lockr from 'lockr';\nconst { REACT_APP_API_URL } = process.env;\n\nexport const getNotificationsForAdmin = async () => {\n  const token = lockr.get('auth-key');\n  try {\n    const getAdminInfo = await fetch(`${REACT_APP_API_URL}/admin/notifications`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    const data = await getAdminInfo.json();\n    return data.data;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nexport const readAdminNoti = async () => {\n  const token = lockr.get('auth-key');\n  try {\n    const readAdminNoti = await fetch(`${REACT_APP_API_URL}/admin/notifications/set-read`, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    const res = await readAdminNoti.json();\n    if (res.success) return res;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n","import React, { useEffect, useState } from 'react';\nimport { Badge, Drawer } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getNotificationsForUser } from '../../core/services/getNotificationsForUser';\nimport { IconNotificationsLength, IconNotificationsEmpty } from '../icons';\nimport './style.scss';\nimport { showModalNotifications, closeModalNotifications } from '../../core/actions/modal';\nimport { CloseIconModal } from '../icons/index';\nimport { IconCompany } from '../icons';\nimport { Tooltip } from 'antd';\nimport { readNoti } from '../../core/services/readNotiServices';\nimport { getNotificationsForAdmin, readAdminNoti } from '../../core/adminServices/notificationsServices';\nimport { bindActionCreators } from 'redux';\nimport actions from '../../core/actions';\n\nconst HeaderNotification = () => {\n  const company = useSelector((state) => state.user.currentCompany);\n  const [modalNoti, setModalNoti] = useState(false);\n  const dispatch = useDispatch();\n  const [notiData, setNotiData] = useState([]);\n  const [count, setCount] = useState('');\n\n  const { setIsBlur } = bindActionCreators(actions, dispatch);\n\n  useEffect(() => {\n    getNotificationsForAdmin().then((data) => {\n      setNotiData(() => data);\n    });\n\n    return () => {\n      setNotiData(() => []);\n    };\n  }, [company]);\n\n  useEffect(() => {\n    if (notiData === undefined) {\n      return;\n    } else if (notiData.length) {\n      setCount(() => notiData.filter((item) => item.status === 2).length);\n    }\n    return () => setCount(() => '');\n  }, [notiData, dispatch]);\n\n  const showDrawer = () => {\n    readAdminNoti().then((data) => {\n      if (data.success) {\n        getNotificationsForAdmin().then((data) => {\n          setNotiData(() => data);\n        });\n      }\n    });\n\n    if (!notiData.length) {\n      setModalNoti(() => false);\n      setIsBlur(false);\n    } else {\n      setModalNoti(() => true);\n      setIsBlur(true);\n    }\n  };\n\n  const onClose = () => {\n    setModalNoti(() => false);\n    setIsBlur(false);\n  };\n\n  const getTitle = () => {\n    return <div className=\"header__company_name\">Admin Notifications</div>;\n  };\n  const convertDate = (date) => {\n    function convertDate(inputFormat) {\n      function pad(s) {\n        return s < 10 ? '0' + s : s;\n      }\n      var d = new Date(inputFormat);\n      return [pad(d.getDate()), pad(d.getMonth() + 1), d.getFullYear()].join('/');\n    }\n    return convertDate(date);\n  };\n\n  const convertTime = (date) => {\n    function convertDate(inputFormat) {\n      function pad(s) {\n        return s < 10 ? '0' + s : s;\n      }\n      var d = new Date(inputFormat);\n      return [pad(d.getHours()), pad(d.getMinutes())].join(':');\n    }\n    return convertDate(date);\n  };\n\n  return (\n    <div className=\"admin_header__notification\">\n      <button onClick={showDrawer}>\n        {notiData === undefined ? (\n          ''\n        ) : (\n          <>\n            {notiData.length ? (\n              <Badge count={count}>\n                <IconNotificationsLength />\n              </Badge>\n            ) : (\n              <Tooltip placement=\"left\" title=\"You don’t have any notifications yet\">\n                <span>\n                  <IconNotificationsEmpty />\n                </span>\n              </Tooltip>\n            )}\n          </>\n        )}\n      </button>\n      <Drawer\n        title={getTitle()}\n        className=\"header__notification_drawer\"\n        placement=\"right\"\n        onClose={onClose}\n        visible={modalNoti}\n        width={508}\n        closeIcon={\n          <div className=\"custom_close_admin\">\n            <CloseIconModal />\n          </div>\n        }\n        closable={true}>\n        <ul className=\"list_of_notif\">\n          {notiData === undefined ? (\n            ''\n          ) : (\n            <>\n              {notiData !== null ? (\n                notiData.map((item) => (\n                  <li className=\"wrapper_li\" key={item.id}>\n                    <div className=\"time_container\">\n                      <time className=\"created_at\">{convertDate(item.created_at)}</time>\n                      <time className=\"created_at\">{convertTime(item.created_at)}</time>\n                    </div>\n                    <div className=\"details_container\">\n                      <div className=\"item_li\">{item.title}</div>\n                      {item.title !== 'Document was removed' ? (\n                        <Link\n                          to={\n                            item.document_id === null\n                              ? `/admin/project/${item.claim_id}/${item.project_id}/`\n                              : `/admin/document/${item.claim_id}/${item.document_id}/`\n                          }\n                          className=\"check_doc\"\n                          onClick={() => {\n                            setModalNoti(() => false);\n                            setIsBlur(false);\n                          }}>\n                          Check document\n                        </Link>\n                      ) : (\n                        ''\n                      )}\n                    </div>\n                  </li>\n                ))\n              ) : (\n                <div>The list is Empty</div>\n              )}\n            </>\n          )}\n        </ul>\n      </Drawer>\n    </div>\n  );\n};\n\nexport default HeaderNotification;\n","import React, { useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport HeaderSearchAdmin from '../headerSearchAdmin';\nimport AdminHeaderNotifications from '../AdminHeaderNotifications';\nimport { Layout, Button } from 'antd';\nimport { useSelector } from 'react-redux';\n\nimport './style.scss';\n\nconst LayOutAdmin = ({ children, className }) => {\n  const [activeLink, setActiveLink] = useState('');\n  const location = useLocation();\n  const { pathname } = location;\n  const isBlur = useSelector((state) => state.modal.isBlur);\n\n  useEffect(() => {\n    setActiveLink(() => pathname.split('/')[2]);\n\n    return () => setActiveLink(() => '');\n  }, [pathname]);\n\n  const config = [\n    {\n      to: '/admin/clients',\n      text: 'Clients',\n      routeLi: 'clients',\n    },\n    {\n      to: '/admin/calls',\n      text: 'Calls',\n      routeLi: 'calls',\n    },\n    {\n      to: '/admin/settings',\n      text: 'Settings',\n      routeLi: 'settings',\n    },\n  ];\n\n  return (\n    <>\n      <div\n        className={`admin_wrapper ${className}`}\n        style={{\n          filter: isBlur ? 'blur(3px)' : 'blur(0px)',\n        }}>\n        <div className=\"admin_header\">\n          <div className=\"wrapper_links_S\">\n            <ul>\n              {config.map((item) => (\n                <li key={item.text} className={activeLink === item.routeLi ? 'activeLink' : ''}>\n                  <Link to={item.to}>{item.text}</Link>\n                </li>\n              ))}\n            </ul>\n            {/* <div className=\"search\">\n              <HeaderSearchAdmin />\n            </div> */}\n          </div>\n\n          <div className=\"wrapper_btn_Noti\">\n            <div className=\"btn\">\n              <Link to=\"/admin/add-client\" className=\"ant-btn ant-btn-button\">\n                Add Client\n              </Link>\n            </div>\n            <div className=\"noti\">\n              <AdminHeaderNotifications />\n            </div>\n          </div>\n        </div>\n        <Layout.Content className=\"wrapper_content\">\n          <div className=\"admin_dashboard_wrapper\">{children}</div>\n        </Layout.Content>\n      </div>\n    </>\n  );\n};\nexport default LayOutAdmin;\n","import React, { useState, useEffect } from 'react';\nimport { Tooltip, Upload, Spin, Form, Input, Dropdown, Button } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport { IconEditPencil, DeleteCompanySVG } from '../../../components/icons';\nimport iconUpload from '../../../assets/img/icon-upload.svg';\nimport { postCompanyData } from '../../../core/services';\nimport { postClientCompanyEdits, postCompanyLogo } from '../../../core/adminServices';\n\nimport './style.scss';\nimport { Link } from 'react-router-dom';\n\nconst antIcon = <LoadingOutlined style={{ fontSize: 20 }} spin />;\n\nconst { Dragger } = Upload;\nconst Company = ({ companies, company, updateCompany, setModal }) => {\n  const [companyLogo, setCompanyLogo] = useState(null);\n  const [editMode, setEditMode] = useState(false);\n  const [loader, setLoader] = useState(false);\n  const [logoLoader, setLogoLoader] = useState(false);\n  const [loaderDelBtn, setLoaderDelBtn] = useState(false);\n  const [companyForm] = Form.useForm();\n  const [isDropDownDelete, setIsDropDownDelete] = useState(false);\n\n  useEffect(() => {\n    let cleanupFunction = false;\n\n    companyForm.setFieldsValue({\n      number: company.number,\n      accountant_email: company.accountant_email,\n      revenue: company.revenue,\n      utr: company.utr,\n      sme_or_rdec: company.sme_or_rdec,\n    });\n    if (!cleanupFunction) setCompanyLogo(company.avatar);\n\n    return () => (cleanupFunction = true);\n  }, [company, companyForm]);\n\n  const deleteCompanyActions = () => {\n    setLoaderDelBtn(() => true);\n    // deleteCompany(company?.id).then((data) => {\n    //   if (data.success) {\n    //     setLoaderDelBtn(() => true);\n    //     notification.success({\n    //       description: 'Company was deleted successfully',\n    //     });\n    //     setIsDropDownDelete((prev) => !prev);\n    //     setCompaniesList((prev) => prev.filter((item) => item.id !== company?.id));\n    //   }\n    // });\n  };\n\n  const onSave = (form) => {\n    setLoader(true);\n    postClientCompanyEdits(company.id, form).then((data) => {\n      setLoader(false);\n      setEditMode(false);\n      updateCompany(data);\n    });\n    // postCompanyData(company.id, form).then((data) => {\n    //   setLoader(false);\n    //   setEditMode(false);\n    //   updateCompany(data);\n    // });\n  };\n\n  const updateLogo = (e) => {\n    setLogoLoader(true);\n    postCompanyLogo(company.id, e.file).then((data) => {\n      setLogoLoader(false);\n      setCompanyLogo(data.avatar);\n    });\n    e.onSuccess('ok');\n  };\n\n  const getClameName = (status) => {\n    let name;\n    if (company.claims.filter((item) => item.status == status).length) {\n      const claim = company.claims.filter((item) => item.status == status)[0];\n      name = `${claim.title} ${claim.start_date} - ${claim.end_date}`;\n      return name;\n    }\n    return '';\n  };\n\n  const menu = (\n    <div className=\"wrapper_dropDown\">\n      <h4>Are you sure you want to delete this сompany? All the documents, claims will be deleted as well</h4>\n      <div className=\"dropDown__btn_container\">\n        <Button\n          type=\"button\"\n          onClick={() => {\n            setIsDropDownDelete((prev) => !prev);\n          }}>\n          Back\n        </Button>\n        <Button type=\"primary\" className=\"delete__red\" loading={loaderDelBtn} onClick={deleteCompanyActions}>\n          Delete\n        </Button>\n      </div>\n    </div>\n  );\n\n  return (\n    <li className=\"form_claims\">\n      <div className={`profile__company ${isDropDownDelete ? 'red_Company' : ''}`}>\n        <div className=\"profile__company_title\">\n          <h3>\n            <span>{company.name}</span>\n          </h3>\n          <div className=\"profile__wrapper_btn\" id=\"btn_del\">\n            {!editMode && (\n              <>\n                <button\n                  className=\"profile__btn_mode\"\n                  onClick={(e) => {\n                    setEditMode(true);\n                  }}>\n                  <IconEditPencil />\n                </button>\n                {companies.length !== 1 && (\n                  <button\n                    onClick={() => {\n                      setModal(true, company.id);\n                      //setIsDropDownDelete((prev) => !prev);\n                    }}\n                    className=\"profile__btn_delete\">\n                    <DeleteCompanySVG />\n                  </button>\n                )}\n              </>\n            )}\n          </div>\n        </div>\n        <Form form={companyForm} onFinish={onSave}>\n          <section className=\"profile__company_details\">\n            <div className=\"company--row\">\n              <div className=\"label\">Number</div>\n              <div className=\"details\">\n                {!editMode ? (\n                  <span>{company.number}</span>\n                ) : (\n                  <Form.Item\n                    name=\"number\"\n                    rules={[\n                      {\n                        required: true,\n                        message: 'Please input Company Number!',\n                      },\n                    ]}>\n                    <Input />\n                  </Form.Item>\n                )}\n              </div>\n            </div>\n            <div className=\"company--row\">\n              <div className=\"label\">Accountant Email</div>\n              <div className=\"details\">\n                {!editMode ? (\n                  <span>{company.accountant_email}</span>\n                ) : (\n                  <Form.Item\n                    name=\"accountant_email\"\n                    rules={[\n                      {\n                        required: true,\n                        message: 'Please input Company Email!',\n                      },\n                      {\n                        type: 'email',\n                        message: 'Please input valid Company Email!',\n                      },\n                    ]}>\n                    <Input />\n                  </Form.Item>\n                )}\n              </div>\n            </div>\n            <div className=\"company--row\">\n              <div className=\"label\">Revenue</div>\n              <div className=\"details\">\n                {!editMode ? (\n                  <span>{company.revenue}</span>\n                ) : (\n                  <Form.Item\n                    name=\"revenue\"\n                    rules={[\n                      {\n                        required: true,\n                        message: 'Please input Revenue!',\n                      },\n                    ]}>\n                    <Input />\n                  </Form.Item>\n                )}\n              </div>\n            </div>\n            <div className=\"company--row\">\n              <div className=\"label\">UTR</div>\n              <div className=\"details\">\n                {!editMode ? (\n                  <span>{company.utr}</span>\n                ) : (\n                  <Form.Item\n                    name=\"utr\"\n                    rules={[\n                      {\n                        required: true,\n                        message: 'Please input Revenue!',\n                      },\n                    ]}>\n                    <Input />\n                  </Form.Item>\n                )}\n              </div>\n            </div>\n            <div className=\"company--row\">\n              <div className=\"label\">SME or RDEC</div>\n              <div className=\"details\">\n                {!editMode ? (\n                  <span>{company.sme_or_rdec}</span>\n                ) : (\n                  <Form.Item\n                    name=\"sme_or_rdec\"\n                    rules={[\n                      {\n                        required: true,\n                        message: 'Please input Revenue!',\n                      },\n                    ]}>\n                    <Input />\n                  </Form.Item>\n                )}\n              </div>\n            </div>\n            <div className=\"company--row\">\n              <div className=\"label\">Assigned Consultant</div>\n              <div className=\"details\">\n                {company.manager && (\n                  <>\n                    <span className=\"manager\">{company.manager.name},</span>{' '}\n                    <span className=\"manager\">{company.manager.phone}</span>\n                  </>\n                )}\n              </div>\n            </div>\n            <div className=\"company--row\">\n              <div className=\"label\">Company Logo</div>\n              <div className=\"details\">\n                {companyLogo ? (\n                  <div className=\"company--logo\">\n                    <Dragger\n                      customRequest={updateLogo}\n                      showUploadList={false}\n                      accept=\"image/png, image/gif, image/jpeg\">\n                      {logoLoader && (\n                        <div className=\"upload-loading\">\n                          <Spin indicator={antIcon} />\n                        </div>\n                      )}\n                      <Tooltip placement=\"top\" title=\"Upload png or jpeg\">\n                        <img src={companyLogo} alt={companyLogo} />\n                      </Tooltip>\n                    </Dragger>\n                  </div>\n                ) : (\n                  <Dragger customRequest={updateLogo} showUploadList={false} accept=\"image/png, image/gif, image/jpeg\">\n                    {logoLoader && (\n                      <div className=\"upload-loading\">\n                        <Spin indicator={antIcon} />\n                      </div>\n                    )}\n                    <Tooltip placement=\"top\" title=\"Upload png or jpeg\">\n                      <div className=\"upload-title\">\n                        <img src={iconUpload} alt=\"\" />\n                        <span>Upload Logo</span>\n                      </div>\n                    </Tooltip>\n                  </Dragger>\n                )}\n              </div>\n            </div>\n          </section>\n        </Form>\n        {editMode && (\n          <div className=\"profile__company_actions\">\n            <Button\n              type=\"button\"\n              loading={loader}\n              onClick={(e) => {\n                setEditMode(false);\n              }}>\n              Cancel\n            </Button>\n            <Button\n              type=\"primary\"\n              loading={loader}\n              onClick={(e) => {\n                companyForm.submit();\n              }}>\n              Save\n            </Button>\n          </div>\n        )}\n        {/* <Form form={companyForm} onFinish={onSave}>\n          <section className=\"profile__company_details\">\n            <div className=\"company--row\">\n              <div className=\"label\">Number</div>\n              <div className=\"details\">\n                <span>{company.number}</span>\n              </div>\n            </div>\n            <div className=\"company--row\">\n              <div className=\"label\">Accountant Email</div>\n              <div className=\"details\">\n                <span>{company.accountant_email}</span>\n              </div>\n            </div>\n            <div className=\"company--row\">\n              <div className=\"label\">Revenue</div>\n              <div className=\"details\">\n                <span>{company.revenue}</span>\n              </div>\n            </div>\n            <div className=\"company--row\">\n              <div className=\"label\">UTR</div>\n              <div className=\"details\">\n                <span>{company.utr}</span>\n              </div>\n            </div>\n            <div className=\"company--row\">\n              <div className=\"label\">SME or RDEC</div>\n              <div className=\"details\">\n                <span>{company.sme_or_rdec}</span>\n              </div>\n            </div>\n            <div className=\"company--row\">\n              <div className=\"label\">Assigned Consultant</div>\n              <div className=\"details\">\n                {company.manager && (\n                  <>\n                    <span className=\"manager\">{company.manager.name},</span>{' '}\n                    <span className=\"manager\">{company.manager.phone}</span>\n                  </>\n                )}\n              </div>\n            </div>\n            <div className=\"company--row\">\n              <div className=\"label\">Company Logo</div>\n              <div className=\"details\">\n                {companyLogo ? (\n                  <div className=\"company--logo\">\n                    <Dragger\n                      customRequest={updateLogo}\n                      showUploadList={false}\n                      accept=\"image/png, image/gif, image/jpeg\">\n                      {logoLoader && (\n                        <div className=\"upload-loading\">\n                          <Spin indicator={antIcon} />\n                        </div>\n                      )}\n                      <Tooltip placement=\"top\" title=\"Upload png or jpeg\">\n                        <img src={companyLogo} alt={companyLogo} />\n                      </Tooltip>\n                    </Dragger>\n                  </div>\n                ) : (\n                  <Dragger customRequest={updateLogo} showUploadList={false} accept=\"image/png, image/gif, image/jpeg\">\n                    {logoLoader && (\n                      <div className=\"upload-loading\">\n                        <Spin indicator={antIcon} />\n                      </div>\n                    )}\n                    <Tooltip placement=\"top\" title=\"Upload png or jpeg\">\n                      <div className=\"upload-title\">\n                        <img src={iconUpload} alt=\"\" />\n                        <span>Upload Logo</span>\n                      </div>\n                    </Tooltip>\n                  </Dragger>\n                )}\n              </div>\n            </div>\n          </section>\n        </Form> */}\n      </div>\n      <div className=\"block_claims\">\n        <div className=\"container_info\">\n          {company.claims.filter((item) => item.status == 1).length > 0 && (\n            <>\n              <h2>Active</h2>\n              <ul>\n                {company.claims\n                  .filter((item) => item.status == 1)\n                  .map((item) => (\n                    <li key={`claim-${item.id}`}>\n                      <Link to={`/admin/active-claim/${item.id}`}>{`${item.title}${\n                        item.start_date && item.end_date ? ` ${item.start_date} - ${item.start_date}` : ``\n                      }`}</Link>\n                    </li>\n                  ))}\n              </ul>\n            </>\n          )}\n        </div>\n        <div className=\"container_info\">\n          {company.claims.filter((item) => item.status == 2).length > 0 && (\n            <>\n              <h2>Future</h2>\n              <ul>\n                {company.claims\n                  .filter((item) => item.status == 2)\n                  .map((item) => (\n                    <li key={`claim-${item.id}`}>{`${item.title}${\n                      item.start_date && item.end_date ? ` ${item.start_date} - ${item.start_date}` : ``\n                    }`}</li>\n                  ))}\n              </ul>\n            </>\n          )}\n        </div>\n        <div className=\"container_info\">\n          {company.claims.filter((item) => item.status == 3).length > 0 && (\n            <>\n              <h2>Completed</h2>\n              <ul>\n                {company.claims\n                  .filter((item) => item.status == 3)\n                  .map((item) => (\n                    <li key={`claim-${item.id}`}>{`${item.title}${\n                      item.start_date && item.end_date ? ` ${item.start_date} - ${item.start_date}` : ``\n                    }`}</li>\n                  ))}\n              </ul>\n            </>\n          )}\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport default Company;\n","import React, { useEffect, useState, useCallback } from 'react';\nimport { Badge, Drawer } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\nimport { bindActionCreators } from 'redux';\nimport { IconNotificationsLength, IconNotificationsEmpty } from '../icons';\n\nimport actions from '../../core/actions/';\nimport { CloseIconModal } from '../icons/index';\nimport { IconCompany } from '../icons';\nimport { Tooltip } from 'antd';\nimport { readNoti } from '../../core/services/readNotiServices';\n\nimport './style.scss';\n\nconst AdminClientActionLog = ({ visible, list, name, onClose }) => {\n  const company = useSelector((state) => state.user.currentCompany);\n  const dispatch = useDispatch();\n  const { setIsBlur } = bindActionCreators(actions, dispatch);\n\n  useEffect(() => {\n    setIsBlur(visible);\n  }, [visible]);\n\n  // const showDrawer = () => {\n  //   if (!!count) {\n  //     readNoti(company.id).then((data) => {\n  //       if (data.success) {\n  //         getNotificationsForUser(dispatch, company.id).then((data) => {\n  //           setNotiData(() => data);\n  //         });\n  //       }\n  //     });\n  //   }\n\n  //   if (!notiData.length) {\n  //     dispatch(closeModalNotifications());\n  //   } else {\n  //     dispatch(showModalNotifications());\n  //   }\n  // };\n\n  // const onClose = () => {\n  //   dispatch(closeModalNotifications());\n  // };\n\n  const getTitle = () => {\n    return (\n      <>\n        {company && (\n          <>\n            <div className=\"header__company_icon blue\">\n              <IconCompany />\n            </div>\n            <div className=\"header__company_name\">{company.name}</div>\n          </>\n        )}\n      </>\n    );\n  };\n  const convertDate = (date) => {\n    function convertDate(inputFormat) {\n      function pad(s) {\n        return s < 10 ? '0' + s : s;\n      }\n      var d = new Date(inputFormat);\n      return [pad(d.getDate()), pad(d.getMonth() + 1), d.getFullYear()].join('/');\n    }\n    return convertDate(date);\n  };\n\n  const convertTime = (date) => {\n    function convertDate(inputFormat) {\n      function pad(s) {\n        return s < 10 ? '0' + s : s;\n      }\n      var d = new Date(inputFormat);\n      return [pad(d.getHours()), pad(d.getMinutes())].join(':');\n    }\n    return convertDate(date);\n  };\n\n  const checkForLinkTo = useCallback((item) => {\n    if (item.project_id === null) {\n      return `/document/${item.claim_id}/${item.document_id}/`;\n    }\n    if (item.document_id === null) {\n      return `/project/${item.claim_id}/${item.project_id}`;\n    }\n  }, []);\n\n  return (\n    <div className=\"header__notification\">\n      <Drawer\n        title={`${name ? name + ' Actions Log' : 'Actions Log'}`}\n        className=\"header__notification_drawer\"\n        placement=\"right\"\n        closable={false}\n        onClose={() => {\n          setIsBlur(false);\n          onClose();\n        }}\n        visible={visible}\n        width={508}\n        closeIcon={<CloseIconModal />}\n        closable={true}>\n        <ul className=\"list_of_notif\">\n          {list === undefined ? (\n            ''\n          ) : (\n            <>\n              {list ? (\n                list.map((item) => (\n                  <li className=\"wrapper_li\" key={item.id}>\n                    <div className=\"time_container\">\n                      <time className=\"created_at\">{convertDate(item.created_at)}</time>\n                      <time className=\"created_at\">{convertTime(item.created_at)}</time>\n                    </div>\n                    <div className=\"details_container\">\n                      <div className=\"item_li\">{item.title}</div>\n                      {item.claim_id !== null ? (\n                        <Link\n                          to={() => checkForLinkTo(item)}\n                          className=\"check_doc\"\n                          //onClick={() => dispatch(closeModalNotifications())}\n                        >\n                          Check document\n                        </Link>\n                      ) : (\n                        ''\n                      )}\n                    </div>\n                  </li>\n                ))\n              ) : (\n                <div>The list is Empty</div>\n              )}\n            </>\n          )}\n        </ul>\n      </Drawer>\n    </div>\n  );\n};\n\nexport default AdminClientActionLog;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Skeleton, Input, Form, Button, Modal, notification } from 'antd';\nimport { Link, useParams } from 'react-router-dom';\n\nimport { postProfileData, fetchUserCompanies } from '../../core/services';\nimport {\n  getClient,\n  getClientCompanies,\n  getClientActions,\n  postEditClient,\n  deleteClient,\n  deleteComany,\n} from '../../core/adminServices';\n\nimport { IconEditPencil, IconWarning, IconAdd, CloseIconModal } from '../../components/icons';\nimport './style.scss';\nimport actions from '../../core/actions';\nimport { bindActionCreators } from 'redux';\n\nimport LayOutAdmin from '../../components/LayOutAdmin';\nimport Company from './Company';\nimport AdminClientActionLog from '../../components/AdminClientActionLog';\nimport { AdminBackToTablesSVG } from '../../components/icons';\nimport { useHistory } from 'react-router-dom';\n\nconst ProfilePage = () => {\n  const [userData, setUserData] = useState(null);\n  const [editModeGeneral, setEditModeGeneral] = useState(false);\n  const [profileFormLoader, setProfileFormLoader] = useState(false);\n  const [companiesList, setCompaniesList] = useState(null);\n  const [clientLogList, setClientLogList] = useState(null);\n  const [isClientActionLog, setIsClientActionLog] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [appriveIdloading, setAppriveIdloading] = useState(false);\n  const [removeClientModal, setRemoveClientModal] = useState(false);\n  const [removeComanyModal, setRemoveComanyModal] = useState(false);\n  const [removeComanyId, setRemoveComanyId] = useState(false);\n  const [profileForm] = Form.useForm();\n  const { id } = useParams();\n  const dispatch = useDispatch();\n  const { setIsBlur } = bindActionCreators(actions, dispatch);\n  const isBlur = useSelector((state) => state.modal.isBlur);\n\n  const history = useHistory();\n\n  useEffect(() => {\n    getClient(id)\n      .then((data) => {\n        setUserData(data);\n        profileForm.setFieldsValue({\n          name: data.profile?.name,\n          team_role: data.profile?.team_role,\n          address: data.profile?.address,\n          enable_notifications: data.profile?.enable_notifications,\n          phone: data.profile?.phone,\n          id_status: data.profile?.id_status,\n        });\n      })\n      .catch((err) => {});\n    getClientCompanies(id).then((data) => {\n      setCompaniesList(data);\n    });\n\n    // fetchProfileData().then((data) => {\n    //   setUserData(data);\n    //   profileForm.setFieldsValue({\n    //     name: data.profile.name,\n    //     team_role: data.profile.team_role,\n    //     address: data.profile.address,\n    //     enable_notifications: data.profile.enable_notifications,\n    //     phone: data.profile.phone,\n    //   });\n    //   fetchUserCompanies(dispatch).then((data) => {\n    //     setCompaniesList(data);\n    //   });\n    // });\n  }, []);\n\n  const onSave = (form) => {\n    setProfileFormLoader(true);\n    postEditClient(userData.id, form).then((data) => {\n      setUserData(data);\n      setProfileFormLoader(false);\n      setEditModeGeneral(false);\n      setAppriveIdloading(false);\n    });\n  };\n\n  const updateCompany = (company) => {\n    const result = companiesList.map((item) => {\n      if (item.id === company.id) return company;\n      return item;\n    });\n    setCompaniesList(result);\n  };\n\n  const onActionLog = () => {\n    if (!clientLogList) {\n      setLoading(true);\n      getClientActions(id).then((data) => {\n        setIsClientActionLog(true);\n        setClientLogList(data);\n        setLoading(false);\n      });\n    } else {\n      setIsClientActionLog(true);\n    }\n  };\n\n  const onDeleteCompany = () => {\n    setLoading(true);\n    deleteComany(removeComanyId, id).then((data) => {\n      const res = companiesList.filter((item) => item.id !== removeComanyId);\n      setCompaniesList(res);\n      setIsBlur(false);\n      setRemoveComanyModal(false);\n      setLoading(false);\n      setRemoveComanyId(null);\n    });\n  };\n\n  const onDeleteClient = () => {\n    setLoading(true);\n    deleteClient(id).then((data) => {\n      notification.success({\n        description: 'Client was deleted successfully',\n      });\n      setIsBlur(false);\n      history.push('/admin/clients');\n    });\n  };\n\n  const onAppruveId = () => {\n    profileForm.setFieldsValue({\n      id_status: 1,\n    });\n    profileForm.submit();\n    setAppriveIdloading(true);\n  };\n\n  return (\n    <LayOutAdmin>\n      <div className=\"back_to\">\n        <button\n          onClick={() => {\n            history.push('/admin/clients');\n          }}>\n          <div>\n            <AdminBackToTablesSVG />\n          </div>\n          <div className=\"text_btn\">Back to all clients</div>\n        </button>\n      </div>\n      <div className=\"flex_table_btn\">\n        <div className=\"profile__general\">\n          <div className=\"profile__general_title\">\n            <h2>\n              <span>Personal Information</span>\n              {!editModeGeneral && (\n                <button\n                  onClick={(e) => {\n                    setEditModeGeneral(true);\n                  }}>\n                  <IconEditPencil />\n                </button>\n              )}\n            </h2>\n          </div>\n\n          {!userData ? (\n            <Skeleton active />\n          ) : (\n            <Form\n              name=\"profile\"\n              form={profileForm}\n              // initialValues={{\n              //   remember: true,\n              // }}\n              onFinish={onSave}\n              // onFinishFailed={onFinishFailed}\n            >\n              <ul className=\"profile__general_table\">\n                <li>\n                  <div className=\"label\">Full Name</div>\n                  <div className=\"details\">\n                    {!editModeGeneral ? (\n                      <span>{userData.profile?.name}</span>\n                    ) : (\n                      <Form.Item\n                        name=\"name\"\n                        rules={[\n                          {\n                            required: true,\n                            message: 'Please input your name!',\n                          },\n                        ]}>\n                        <Input />\n                      </Form.Item>\n                    )}\n                  </div>\n                </li>\n                <li>\n                  <div className=\"label\">Team Role</div>\n                  <div className=\"details\">\n                    {!editModeGeneral ? (\n                      <>\n                        {userData.profile?.team_role ? (\n                          <span>{userData.profile?.team_role}</span>\n                        ) : (\n                          <div className=\"alert\">\n                            <IconWarning />\n                            <span>Not Setted</span>\n                            <a\n                              href=\"\"\n                              onClick={(e) => {\n                                e.preventDefault();\n                                setEditModeGeneral(true);\n                              }}>\n                              Set the Role\n                            </a>\n                          </div>\n                        )}\n                      </>\n                    ) : (\n                      <Form.Item\n                        name=\"team_role\"\n                        rules={[\n                          {\n                            required: true,\n                            message: 'Please input your Team Role!',\n                          },\n                        ]}>\n                        <Input />\n                      </Form.Item>\n                    )}\n                  </div>\n                </li>\n                <li>\n                  <div className=\"label\">Registered Address</div>\n                  <div className=\"details\">\n                    {!editModeGeneral ? (\n                      <span>{userData.profile?.address}</span>\n                    ) : (\n                      <Form.Item\n                        name=\"address\"\n                        rules={[\n                          {\n                            required: true,\n                            message: 'Please input your Registered Address!',\n                          },\n                        ]}>\n                        <Input />\n                      </Form.Item>\n                    )}\n                  </div>\n                </li>\n                <li>\n                  <div className=\"label\">ID Verification status</div>\n                  <div className=\"details\">\n                    {userData.profile?.id_status === 0 ? (\n                      <div className=\"alert\">\n                        <IconWarning />\n                        <span>Not Verified</span>\n                        <Button type=\"primary\" onClick={onAppruveId} loading={appriveIdloading}>\n                          Verify\n                        </Button>\n                      </div>\n                    ) : (\n                      <div className=\"success\">\n                        <span>Verified</span>\n                      </div>\n                    )}\n                  </div>\n                  <Form.Item name=\"id_status\" hidden>\n                    <Input />\n                  </Form.Item>\n                </li>\n                <li>\n                  <div className=\"label\">Your Email</div>\n                  <div className=\"details\">\n                    <span>{userData.email}</span>\n                  </div>\n                </li>\n                <li>\n                  <div className=\"label\">Your Phone Number</div>\n                  <div className=\"details\">\n                    {!editModeGeneral ? (\n                      <span>{userData.profile?.phone}</span>\n                    ) : (\n                      <Form.Item\n                        name=\"phone\"\n                        rules={[\n                          {\n                            required: true,\n                            message: 'Please input your Phone Number!',\n                          },\n                        ]}>\n                        <Input />\n                      </Form.Item>\n                    )}\n                  </div>\n                </li>\n                {/* <li>\n                  <div className=\"label\">Your Password</div>\n                  <div className=\"details\">\n                    <Link to=\"/profile/change-password/\">Change password</Link>\n                  </div>\n                </li> */}\n              </ul>\n            </Form>\n          )}\n\n          {editModeGeneral && (\n            <div className=\"profile__general_actions\">\n              <Button\n                type=\"button\"\n                onClick={(e) => {\n                  setEditModeGeneral(false);\n                }}>\n                Cancel\n              </Button>\n              <Button\n                type=\"primary\"\n                loading={profileFormLoader}\n                onClick={(e) => {\n                  profileForm.submit();\n                }}>\n                Save\n              </Button>\n            </div>\n          )}\n        </div>\n        <div className=\"btns_actions\">\n          <Button\n            type=\"button\"\n            className=\"delete_client\"\n            onClick={() => {\n              setRemoveClientModal(true);\n              setIsBlur(true);\n            }}>\n            Delete Client\n          </Button>\n          <Button type=\"primary\" className=\"action_logs\" onClick={onActionLog} loading={loading}>\n            Action Logs\n          </Button>\n        </div>\n      </div>\n\n      <div className=\"profile__companies\">\n        <h2>\n          <span>My Companies</span>\n          <Link to={`/admin/add-company/${id}`}>\n            <IconAdd />\n          </Link>\n        </h2>\n        <ul className=\"profile__companies_list\">\n          {companiesList &&\n            companiesList.map((item) => (\n              <Company\n                key={`company-${item.id}`}\n                company={item}\n                companies={companiesList}\n                updateCompany={updateCompany}\n                setCompaniesList={setCompaniesList}\n                setModal={(status, id) => {\n                  if (id) setRemoveComanyId(id);\n                  setRemoveComanyModal(status);\n                  setIsBlur(status);\n                }}\n              />\n            ))}\n        </ul>\n      </div>\n      <Modal\n        title=\"Basic Modal\"\n        className=\"delete-client__modal\"\n        visible={removeClientModal}\n        width={700}\n        onCancel={() => {\n          setIsBlur(false);\n          setRemoveClientModal(false);\n        }}\n        footer={false}\n        title={false}\n        closeIcon={<CloseIconModal />}>\n        <h2>\n          Are you sure you want to <br />\n          delete client?\n        </h2>\n        <div className=\"delete-client__modal_description\">\n          You are trying to delete the client. If you delete the client — the claim will be deleted along with it.\n        </div>\n        <div className=\"delete-client__modal_actions\">\n          <Button\n            type=\"button\"\n            onClick={() => {\n              setIsBlur(false);\n              setRemoveClientModal(false);\n            }}>\n            Back\n          </Button>\n          <Button type=\"primary\" loading={loading} onClick={onDeleteClient}>\n            Delete\n          </Button>\n        </div>\n      </Modal>\n      <Modal\n        title=\"Basic Modal\"\n        className=\"delete-client__modal\"\n        visible={removeComanyModal}\n        width={700}\n        onCancel={() => {\n          setIsBlur(false);\n          setRemoveComanyModal(false);\n        }}\n        footer={false}\n        title={false}\n        closeIcon={<CloseIconModal />}>\n        <h2>\n          Are you sure you want to <br />\n          delete the company and the claim?\n        </h2>\n        <div className=\"delete-client__modal_description\">\n          You are trying to delete the company which has the Active claim. If you delete the company — the claim will be\n          deleted along with it.\n        </div>\n        <div className=\"delete-client__modal_actions\">\n          <Button\n            type=\"button\"\n            onClick={() => {\n              setIsBlur(false);\n              setRemoveComanyModal(false);\n            }}>\n            Back\n          </Button>\n          <Button type=\"primary\" loading={loading} onClick={onDeleteCompany}>\n            Delete\n          </Button>\n        </div>\n      </Modal>\n      <AdminClientActionLog\n        visible={isClientActionLog}\n        list={clientLogList}\n        name={userData?.profile?.name}\n        onClose={() => {\n          setIsClientActionLog(false);\n        }}\n      />\n    </LayOutAdmin>\n  );\n};\n\nexport default ProfilePage;\n","import React, { useState } from 'react';\nimport { Row, Col, Card, Progress, Input, Form, Button } from 'antd';\n\nimport { editClaimCards } from '../../../core/adminServices';\nimport { IconEditPencil } from '../../../components/icons';\n\nimport './style.scss';\n\nconst AdminActiveClaimsCards = ({ activeClaimData, onEdit }) => {\n  const [editMode, setEditMode] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const convertDate = (date, days) => {\n    function convertDate(inputFormat) {\n      function pad(s) {\n        return s < 10 ? '0' + s : s;\n      }\n      var d = new Date(inputFormat);\n      return [pad(d.getDate()), pad(d.getMonth() + 1), d.getFullYear()].join('/');\n    }\n    var newDate = new Date(date);\n    newDate.setDate(newDate.getDate() + days);\n    return convertDate(newDate);\n  };\n\n  const onFinish = (valuse) => {\n    setLoading(true);\n    editClaimCards(activeClaimData.id, valuse).then(() => {\n      onEdit();\n      setLoading(false);\n      setEditMode(false);\n    });\n  };\n\n  return (\n    <Form\n      name=\"basic\"\n      className=\"active-claims__cards_form\"\n      initialValues={{\n        estimated_benefit: activeClaimData.estimated_benefit,\n        estimated_claim_completion: activeClaimData.estimated_claim_completion,\n        project_claim_completion: activeClaimData.estimated_completion,\n      }}\n      onFinish={onFinish}>\n      <div className=\"active-claims__cards\">\n        <button\n          type=\"button\"\n          className=\"active-claims__cards_edit\"\n          onClick={() => {\n            setEditMode(true);\n          }}>\n          {editMode ? (\n            <span>Claim</span>\n          ) : (\n            <>\n              <IconEditPencil />\n              <span>Edit Claims</span>\n            </>\n          )}\n        </button>\n        <Row gutter={16}>\n          <Col span={6}>\n            <Card title=\"Estimated total claim benefit\">\n              {!editMode && (\n                <div className=\"different\">\n                  £{Number(activeClaimData.estimated_benefit_start).toFixed()} - £\n                  {Number(activeClaimData.estimated_benefit_end).toFixed()}\n                </div>\n              )}\n              <div className=\"edit\">\n                <Form.Item\n                  name=\"estimated_benefit\"\n                  hidden={!editMode}\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please input your estimated benefit!',\n                    },\n                  ]}>\n                  <Input type=\"number\" prefix=\"£\" />\n                </Form.Item>\n              </div>\n            </Card>\n          </Col>\n          <Col span={6}>\n            <Card title=\"Estimated total claim benefit\">\n              <div className=\"clime-progress\">\n                <Progress\n                  type=\"circle\"\n                  percent={Math.round(activeClaimData.estimated_total_claim_benefit_percentage * 100)}\n                  width={72}\n                  strokeColor=\"#F9A648\"\n                />\n                <div className=\"clime-progress--info\">\n                  <span>Days since start</span>\n                  <b>\n                    {activeClaimData.estimated_total_claim_benefit_days}{' '}\n                    {activeClaimData.estimated_total_claim_benefit_days > 1 ? 'days' : 'day'}\n                  </b>\n                </div>\n              </div>\n            </Card>\n          </Col>\n          <Col span={6}>\n            <Card title=\"Project Claim Completion\">\n              {!editMode && (\n                <div className=\"info\">\n                  <b>\n                    {activeClaimData.estimated_claim_completion}{' '}\n                    {activeClaimData.estimated_claim_completion > 1 ? 'days' : 'day'}\n                  </b>\n                  <span>{convertDate(activeClaimData.created_at, activeClaimData.estimated_claim_completion)}</span>\n                </div>\n              )}\n              <div className=\"edit\">\n                <Form.Item\n                  name=\"estimated_claim_completion\"\n                  hidden={!editMode}\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please input your estimated claim completion!',\n                    },\n                  ]}>\n                  <Input type=\"number\" suffix=\"days\" />\n                </Form.Item>\n              </div>\n            </Card>\n          </Col>\n          <Col span={6}>\n            <Card title=\"Project Benefit Payment\">\n              {!editMode && (\n                <div className=\"info\">\n                  <b>\n                    {activeClaimData.estimated_completion} {activeClaimData.estimated_completion > 1 ? 'days' : 'day'}\n                  </b>\n                  <span>{convertDate(activeClaimData.created_at, activeClaimData.estimated_completion)}</span>\n                </div>\n              )}\n              <div className=\"edit\">\n                <Form.Item\n                  name=\"project_claim_completion\"\n                  hidden={!editMode}\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please input your project benefit payment!',\n                    },\n                  ]}>\n                  <Input type=\"number\" suffix=\"days\" />\n                </Form.Item>\n              </div>\n            </Card>\n          </Col>\n        </Row>\n        {editMode && (\n          <div className=\"active-claims__cards_form-actions\">\n            <Button\n              type=\"button\"\n              onClick={() => {\n                setEditMode(false);\n              }}>\n              Cancel\n            </Button>\n            <Form.Item>\n              <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\n                Save\n              </Button>\n            </Form.Item>\n          </div>\n        )}\n      </div>\n    </Form>\n  );\n};\n\nexport default AdminActiveClaimsCards;\n","import React, { useState } from 'react';\nimport { Tooltip, Upload, Button, Spin, Dropdown, Menu, notification } from 'antd';\nimport { deleteDocumentFromClaim, uploadDocumentToClaim, setSkipFile } from '../../core/adminServices';\n\nimport iconUpload from '../../assets/img/icon-upload.svg';\nimport iconUploadRed from '../../assets/img/icon-upload-red.svg';\nimport iconSkip from '../../assets/img/icon-skip.svg';\nimport iconUndo from '../../assets/img/icon-undo.svg';\nimport iconPdf from '../../assets/img/icon-pdf.svg';\nimport iconComment from '../../assets/img/icon-comment.svg';\nimport PDFSVG from '../../assets/img/PDF.svg';\nimport XLSXSVG from '../../assets/img/XLSX.svg';\nimport DOCSSVG from '../../assets/img/DOCS.svg';\nimport { IconDeleteFile } from '../icons';\nimport './style.scss';\nimport { Link } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\nimport { approveDocument } from '../../core/adminServices/claimServices';\nimport { AdminArrow, IconWarning } from '../../components/icons';\n\nconst { Dragger } = Upload;\n\nconst AdminUploadFile = ({ skipButton, file, removeButton, onRed, onAction, checkForAllStatus }) => {\n  const [onRemoveDropdown, setOnRemoveDropdown] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const { id } = useParams();\n\n  const customRequest = (e) => {\n    setLoading(true);\n    uploadDocumentToClaim(id, file.id, e.file).then((data) => {\n      onAction(data.document);\n      setLoading(false);\n      if (file.slug === 'final-report') {\n        notification.warning({\n          description:\n            'Please, don’t forget to change the estimated benefit to the final number. We will show this number to the client as soon as (s)he approved the claim.',\n          duration: 0,\n        });\n      }\n    });\n    e.onSuccess('ok');\n  };\n\n  const onDelete = () => {\n    setLoading(true);\n    setOnRemoveDropdown(false);\n    deleteDocumentFromClaim(id, file.id).then((data) => {\n      if (data) {\n        onAction(data.document);\n      } else {\n        onRed(false);\n      }\n      setLoading(false);\n    });\n  };\n\n  const statusName = (s) => {\n    let status = {};\n    switch (s) {\n      case 2:\n        status = {\n          class: 'review',\n          name: 'On Review',\n        };\n        break;\n      case 3:\n        status = {\n          class: 'approved',\n          name: 'Approved',\n        };\n        break;\n\n      default:\n        break;\n    }\n    return status;\n  };\n\n  const checkForExt = (original_name) => {\n    const extensions = original_name.split('.');\n    const extension = extensions[extensions.length - 1];\n    switch (extension) {\n      case 'doc':\n        return DOCSSVG;\n      case 'docx':\n        return DOCSSVG;\n      case 'pdf':\n        return PDFSVG;\n      case 'xls':\n        return XLSXSVG;\n      case 'xlsx':\n        return XLSXSVG;\n      default:\n        return extension;\n    }\n  };\n\n  // if uploaded\n  if (file.status > 1 && file.is_skipped < 1)\n    return (\n      <div className={`step-file admin ${loading ? 'loading' : ''}`}>\n        <div className=\"step-file-loading\">\n          <Spin />\n        </div>\n        <div className={`step-file--title`}>\n          <img src={checkForExt(file.original_name)} alt={file.original_name} />\n          <Link to={`/admin/document/${file.claim_id}/${file.id}/`}>{file.name}</Link>\n          {removeButton &&\n            (!file.has_unresolved_comments ? (\n              <Dropdown\n                placement=\"bottomRight\"\n                trigger=\"click\"\n                visible={onRemoveDropdown}\n                onVisibleChange={(visible) => {\n                  if (!visible) setOnRemoveDropdown(false);\n                  onRed(visible);\n                }}\n                overlay={\n                  <div className=\"step-file--title-dropdown\">\n                    <div className=\"dropdown-title\">Are you sure you want to delete this Document?</div>\n                    <div className=\"dropdown-actions\">\n                      <Button\n                        type=\"button\"\n                        onClick={(e) => {\n                          setOnRemoveDropdown(false);\n                          onRed(false);\n                        }}>\n                        Back\n                      </Button>\n                      <Button type=\"primary\" onClick={onDelete} loading={loading}>\n                        Delete\n                      </Button>\n                    </div>\n                  </div>\n                }>\n                <button\n                  className=\"step-file--remove-button\"\n                  onClick={() => {\n                    setOnRemoveDropdown(true);\n                  }}>\n                  <IconDeleteFile />\n                </button>\n              </Dropdown>\n            ) : (\n              <Tooltip placement=\"left\" title=\"This file cannot be deleted because it contains unresolved comment\">\n                <button className=\"step-file--remove\" disabled>\n                  <IconDeleteFile />\n                </button>\n              </Tooltip>\n            ))}\n        </div>\n        <div className=\"step-file--status admin\">\n          <Dropdown\n            overlayClassName=\"admin_drop_approved\"\n            className=\"admin_drop_status\"\n            getPopupContainer={() => document.querySelector(`#dociment_id_${file.id}`)}\n            trigger=\"click\"\n            overlay={\n              <Menu>\n                {file.status === 2 && (\n                  <Menu.Item>\n                    <div\n                      className=\"status approved\"\n                      onClick={() => {\n                        setLoading(() => true);\n                        approveDocument(file.id, 3).then((data) => {\n                          if (data.success) {\n                            checkForAllStatus();\n                            const file = {\n                              ...data.data.document,\n                              status: Number(data.data.document.status),\n                            };\n                            onAction(file);\n                            setLoading(() => false);\n                          }\n                        });\n                      }}>\n                      <b>Approve</b>\n                    </div>\n                  </Menu.Item>\n                )}\n                {file.status === 3 && (\n                  <Menu.Item>\n                    <div\n                      className=\"status on_review\"\n                      onClick={() => {\n                        setLoading(() => true);\n                        approveDocument(file.id, 2).then((data) => {\n                          if (data.success) {\n                            checkForAllStatus();\n                            const file = {\n                              ...data.data.document,\n                              status: Number(data.data.document.status),\n                            };\n                            onAction(file);\n                            setLoading(() => false);\n                          }\n                        });\n                      }}>\n                      <b>On Review</b>\n                    </div>\n                  </Menu.Item>\n                )}\n              </Menu>\n            }\n            placement=\"bottomCenter\">\n            <div\n              style={{ cursor: 'pointer', position: 'relative' }}\n              id={`dociment_id_${file.id}`}\n              className={`status ${statusName(file.status).class}`}>\n              {statusName(file.status).name}\n              <AdminArrow />\n            </div>\n          </Dropdown>\n          <div className=\"comments\">\n            <img src={iconComment} alt=\"\" />\n            <span>{file.comments_count}</span>\n          </div>\n        </div>\n      </div>\n    );\n\n  return (\n    // if not upload\n    <Tooltip placement=\"topRight\" title={file.is_skipped > 0 ? '' : 'Upload PDF, XLSX or DOCX'}>\n      <Dragger\n        name=\"file\"\n        customRequest={customRequest}\n        accept=\"application/pdf, application/msword, application/vnd.openxmlformats-officedocument.wordprocessingml.document, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\n        className={`upload-file ${loading ? 'loading' : ''} ${file.is_skipped === 1 ? 'skipped' : ''}`}\n        showUploadList={false}>\n        <div className=\"upload-loading\">\n          <Spin />\n        </div>\n        <div className=\"upload-title\">\n          <img src={iconUpload} alt=\"\" />\n          <span>{file.name}</span>\n        </div>\n        {skipButton && (\n          <button\n            className=\"upload-skip\"\n            onClick={(e) => {\n              setLoading(true);\n              const updateFile = { ...file };\n              if (file.is_skipped === 0) {\n                e.preventDefault();\n                e.stopPropagation();\n                setSkipFile(id, file.id).then((data) => {\n                  onAction(data.document);\n                });\n              }\n              setLoading(false);\n            }}>\n            {file.is_skipped ? (\n              <>\n                <img src={iconUndo} alt={iconUndo} />\n                <span>Upload</span>\n              </>\n            ) : (\n              <>\n                <img src={iconSkip} alt=\"\" />\n                <span>Skip</span>\n              </>\n            )}\n          </button>\n        )}\n        {!skipButton && (\n          <div className=\"upload-status\">\n            <img src={iconUploadRed} alt=\"\" />\n            <span>Not uploaded</span>\n          </div>\n        )}\n      </Dragger>\n    </Tooltip>\n  );\n};\n\nexport default AdminUploadFile;\n","import React, { useState } from 'react';\nimport './style.scss';\nimport { Button, Modal } from 'antd';\nimport { CloseIconModal } from '../../../../components/icons/index';\nimport { TimePicker } from 'antd';\nimport { SuffixShedulleCallIcon } from '../../../../components/icons/index';\n\nconst CommonModalShadule = ({ children, isVisibleModalSheduleCall, setIsVisibleModalSheduleCall }) => {\n  return (\n    <Modal\n      visible={isVisibleModalSheduleCall}\n      onCancel={() => {\n        setIsVisibleModalSheduleCall((prev) => !prev);\n      }}\n      cancelButtonProps={{ style: { display: 'none' } }}\n      okButtonProps={{ style: { display: 'none' } }}\n      width={700}\n      closeIcon={<CloseIconModal />}\n      wrapClassName=\"shedule_modal\">\n      <div>\n        <h2>Schedule a Call</h2>\n        <div>{children}</div>\n        <div className=\"wrapper_text_timePicker\">\n          <b>Select the time slot which suits you</b>\n          <TimePicker\n            use12Hours\n            format=\"HH:mm\"\n            // onChange={onChange}\n            placeholder=\"Today,  8:00AM\"\n            style={{ width: '180px', height: '40px' }}\n            className=\"shedule_time_picker\"\n            suffixIcon={<SuffixShedulleCallIcon />}\n\n            //hideDisabledOptions={hideDisabledOptions}\n          />\n        </div>\n        <div className=\"sheduleModal__block_btn\">\n          <Button\n            type=\"button\"\n            onClick={() => {\n              setIsVisibleModalSheduleCall((prev) => !prev);\n            }}>\n            Back\n          </Button>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Ask\n          </Button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default CommonModalShadule;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Tooltip, Skeleton, Drawer } from 'antd';\nimport { getIntroductionClaimStep, approveStep } from '../../../../core/adminServices/claimServices';\nimport AdminUploadFile from '../../../../components/AdminUploadFile';\nimport { IconWarning } from '../../../../components/icons';\nimport iconCalendar from '../../../../assets/img/icon-calendar.svg';\nimport arrowLeft from '../../../../assets/img/arrow-left.svg';\nimport actions from '../../../../core/actions';\nimport { bindActionCreators } from 'redux';\nimport CommonModalShadule from '../CommonModalShadule';\nimport { useParams } from 'react-router-dom';\n\nimport './style.scss';\n\nconst StepIntroduction = () => {\n  const dispatch = useDispatch();\n  const [introductionStep, setIntroductionStep] = useState(null);\n  const [detailsShow, setDetailsShow] = useState(false);\n  const [status, setStatus] = useState(0);\n  const [isVisibleModalSheduleCall, setIsVisibleModalSheduleCall] = useState(false);\n  const { showBlurSheduleCall, closeBlurSheduleCall } = bindActionCreators(actions, dispatch);\n  const { id } = useParams();\n\n  useEffect(() => {\n    if (isVisibleModalSheduleCall) {\n      showBlurSheduleCall();\n    }\n    if (!isVisibleModalSheduleCall) {\n      closeBlurSheduleCall();\n    }\n  }, [isVisibleModalSheduleCall]);\n\n  useEffect(() => {\n    if (id) {\n      setIntroductionStep(null);\n      getIntroductionClaimStep(id).then((data) => {\n        const res = { ...data };\n        res.documents = data.documents.map((item) => {\n          item.red = false;\n          return item;\n        });\n        setIntroductionStep(res);\n        const status = Math.round(\n          (res.documents.filter((item) => item.status === 3).length / res.documents.length) * 100,\n        );\n        setStatus(status);\n      });\n    }\n  }, [id]);\n\n  const onAction = (file) => {\n    const res = { ...introductionStep };\n    res.documents = introductionStep.documents.map((item) => {\n      if (item.id === file.id) {\n        const clone = { ...file };\n        if (!clone.comments_count) clone.comments_count = item.comments_count;\n        item = clone;\n      }\n      return item;\n    });\n    setIntroductionStep(res);\n    const status = Math.round((res.documents.filter((item) => item.status === 3).length / res.documents.length) * 100);\n    setStatus(status);\n  };\n\n  const checkForAllStatus = () => {\n    if (!introductionStep?.documents.filter((item) => item.status !== 3).length) approveStep(id, 1);\n  };\n\n  return (\n    <section className=\"active-claims__steps_step introduction\">\n      <h2\n        onClick={() => {\n          setDetailsShow(true);\n        }}>\n        <p>\n          1<i>/</i>5 Introduction\n        </p>\n        <Tooltip title=\"Required Files\">\n          <span>\n            <IconWarning />\n          </span>\n        </Tooltip>\n      </h2>\n      {!introductionStep ? (\n        <Skeleton active />\n      ) : (\n        <>\n          <div className=\"step-actions\">\n            {introductionStep.documents.map((item) => (\n              <div\n                className=\"row admin\"\n                key={`introduction-document-${item.id}`}\n                style={item.red ? { background: 'rgba(246, 87, 71, 0.15)' } : {}}>\n                <AdminUploadFile\n                  checkForAllStatus={checkForAllStatus}\n                  removeButton={true}\n                  key={`introduction-document-${item.id}`}\n                  file={item}\n                  onAction={onAction}\n                  onRed={(red) => {\n                    //introductionStep, setIntroductionStep\n                    const res = { ...introductionStep };\n                    res.documents.map((row) => {\n                      if (row.id === item.id) row.red = red;\n                      return row;\n                    });\n                    setIntroductionStep(res);\n                    //item.red = red;\n                  }}\n                />\n              </div>\n            ))}\n          </div>\n          <div className=\"step-status\">\n            {introductionStep.call_date === null && (\n              <>\n                <button\n                  className=\"step-status--call-schedule\"\n                  onClick={() => {\n                    setIsVisibleModalSheduleCall((prev) => !prev);\n                  }}>\n                  <img src={iconCalendar} alt=\"\" />\n                  <span>Schedule a call</span>\n                </button>\n                <CommonModalShadule\n                  isVisibleModalSheduleCall={isVisibleModalSheduleCall}\n                  setIsVisibleModalSheduleCall={setIsVisibleModalSheduleCall}>\n                  <ul className=\"list_shedule_intro\">\n                    <li>1. Introduction often takes about one hour.</li>\n                    <li>\n                      2. We want to understand the type of work you have undertaken during the relevant period(s).\n                    </li>\n                    <li>3. We will help you to gain the maximum value from our innovative client portal.</li>\n                  </ul>\n                </CommonModalShadule>\n              </>\n            )}\n            {/* <div className='step-status--call-reminder'>\n              <div className='reminder-title'>\n                <img src={iconScheduled} alt='' />\n                <span>Call today at 8:00PM</span>\n              </div>\n              <div className='reminder-description'>\n                Check email for details\n              </div>\n            </div>\n\n            <div className='step-status--call-completed'>\n              <img src={iconApproved} alt='' />\n              <span>Call is completed</span>\n            </div> */}\n\n            <div className=\"step-status\">\n              <div className={`step-status--bar ${status === 100 ? 'done' : status > 0 ? 'process' : 'waiting'}`}>\n                <span className=\"step-status--bar-fill\" style={{ width: status + '%' }} />\n                <span className=\"step-status--bar-parcent\">{status}%</span>\n                <span className=\"step-status--bar-detail\">\n                  {status === 100 ? 'Finished' : status > 0 ? 'In Progress' : 'Waiting'}\n                </span>\n              </div>\n            </div>\n          </div>\n        </>\n      )}\n    </section>\n  );\n};\n\nexport default StepIntroduction;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Skeleton, Drawer } from 'antd';\nimport { getFinancialClaimStep, approveStep } from '../../../../core/adminServices/claimServices';\nimport AdminUploadFile from '../../../../components/AdminUploadFile';\nimport iconCalendar from '../../../../assets/img/icon-calendar.svg';\nimport arrowLeft from '../../../../assets/img/arrow-left.svg';\nimport actions from '../../../../core/actions';\nimport { bindActionCreators } from 'redux';\nimport CommonModalShadule from '../CommonModalShadule';\nimport { useParams } from 'react-router-dom';\n\nimport './style.scss';\n\nconst StepFinancial = () => {\n  const dispatch = useDispatch();\n  const [financialStep, setFinancialStep] = useState(null);\n  const [detailsShow, setDetailsShow] = useState(false);\n  const [status, setStatus] = useState(0);\n  const [isVisibleModalSheduleCall, setIsVisibleModalSheduleCall] = useState(false);\n  const { showBlurSheduleCall, closeBlurSheduleCall } = bindActionCreators(actions, dispatch);\n  const { id } = useParams();\n\n  useEffect(() => {\n    if (isVisibleModalSheduleCall) {\n      showBlurSheduleCall();\n    }\n    if (!isVisibleModalSheduleCall) {\n      closeBlurSheduleCall();\n    }\n  }, [isVisibleModalSheduleCall]);\n\n  useEffect(() => {\n    if (id) {\n      setFinancialStep(null);\n      getFinancialClaimStep(id)\n        .then((data) => {\n          const res = { ...data };\n          res.documents = data.documents.map((item) => {\n            item.red = false;\n            return item;\n          });\n          setFinancialStep(res);\n          const status = Math.round(\n            (res.documents.filter((item) => item.status === 3).length / res.documents.length) * 100,\n          );\n          setStatus(status);\n        })\n        .catch((error) => {});\n    }\n  }, [id]);\n\n  const onAction = (file) => {\n    const res = { ...financialStep };\n    res.documents = financialStep.documents.map((item) => {\n      if (item.id === file.id) item = file;\n      return item;\n    });\n    setFinancialStep(res);\n    const status = Math.round((res.documents.filter((item) => item.status === 3).length / res.documents.length) * 100);\n    setStatus(status);\n  };\n\n  const checkForAllStatus = () => {\n    if (!financialStep?.documents.filter((item) => item.status !== 3).length) approveStep(id, 2);\n  };\n\n  return (\n    <section className=\"active-claims__steps_step financial\">\n      <h2\n        onClick={() => {\n          setDetailsShow(true);\n        }}>\n        2<i>/</i>5 Financial\n      </h2>\n\n      {!financialStep ? (\n        <Skeleton active />\n      ) : (\n        <>\n          <div className=\"step-actions\">\n            {financialStep.documents.map((item) => (\n              <div\n                className=\"row admin\"\n                key={`introduction-document-${item.id}`}\n                style={item.red ? { background: 'rgba(246, 87, 71, 0.15)' } : {}}>\n                <AdminUploadFile\n                  checkForAllStatus={checkForAllStatus}\n                  key={`introduction-document-${item.id}`}\n                  file={item}\n                  skipButton={true}\n                  onAction={onAction}\n                  removeButton={true}\n                  onRed={(red) => {\n                    const res = { ...financialStep };\n                    res.documents.map((row) => {\n                      if (row.id === item.id) row.red = red;\n                      return row;\n                    });\n                    setFinancialStep(res);\n                  }}\n                />\n              </div>\n            ))}\n          </div>\n          <div className=\"step-status\">\n            {financialStep.call_date === null && (\n              <>\n                <button\n                  className=\"step-status--call-schedule\"\n                  onClick={() => {\n                    setIsVisibleModalSheduleCall((prev) => !prev);\n                  }}>\n                  <img src={iconCalendar} alt=\"iconCalendar\" />\n                  <span>Schedule a call</span>\n                </button>\n                <CommonModalShadule\n                  isVisibleModalSheduleCall={isVisibleModalSheduleCall}\n                  setIsVisibleModalSheduleCall={setIsVisibleModalSheduleCall}>\n                  <ul className=\"list_shedule_intro\">\n                    <li>1. Financial call often takes about 1 hour.</li>\n                    <li>\n                      2. We want to assist you in accurately analysing project expenditure that occurred within the\n                      relevant period(s).\n                    </li>\n                    <li>\n                      3. We will do our due diligence and benchmark your claim in order to maximise the robustness of\n                      submission.\n                    </li>\n                  </ul>\n                </CommonModalShadule>\n              </>\n            )}\n            {/* <div className='step-status--call-reminder'>\n              <div className='reminder-title'>\n                <img src={iconScheduled} alt='' />\n                <span>Call today at 8:00PM</span>\n              </div>\n              <div className='reminder-description'>\n                Check email for details\n              </div>\n            </div>\n\n            <div className='step-status--call-completed'>\n              <img src={iconApproved} alt='' />\n              <span>Call is completed</span>\n            </div> */}\n\n            <div className=\"step-status\">\n              <div className={`step-status--bar ${status === 100 ? 'done' : status > 0 ? 'process' : 'waiting'}`}>\n                <span className=\"step-status--bar-fill\" style={{ width: status + '%' }} />\n                <span className=\"step-status--bar-parcent\">{status}%</span>\n                <span className=\"step-status--bar-detail\">\n                  {status === 100 ? 'Finished' : status > 0 ? 'In Progress' : 'Waiting'}\n                </span>\n              </div>\n            </div>\n          </div>\n        </>\n      )}\n    </section>\n  );\n};\n\nexport default StepFinancial;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router-dom';\nimport lockr from 'lockr';\nimport { Collapse, Upload, Dropdown, Button, Spin, Menu } from 'antd';\n\nimport arrow from '../../assets/img/icon-arrow-dropdown.svg';\nimport iconUpload from '../../assets/img/icon-upload.svg';\nimport iconUploadRed from '../../assets/img/icon-upload-red.svg';\nimport iconSkip from '../../assets/img/icon-skip.svg';\nimport iconFileS from '../../assets/img/icon-file-s.svg';\nimport iconPdf from '../../assets/img/icon-pdf.svg';\nimport iconFile from '../../assets/img/icon-file-s.svg';\nimport { approveProject, removeProject } from '../../core/adminServices';\n\nimport { IconDeleteFile, AdminArrow } from '../icons';\nimport './style.scss';\nimport { Link } from 'react-router-dom';\n\nconst { Panel } = Collapse;\n\nconst { Dragger } = Upload;\nconst { REACT_APP_API_URL } = process.env;\n\nconst AdminProject = ({ file, removeButton, onRed, onDelete, onChangeStatus, index, checkForAllStatus }) => {\n  const [onRemoveDropdown, setOnRemoveDropdown] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n  const { id: activeClaimId } = useParams();\n\n  const onDeleteProject = () => {\n    setLoading(true);\n    setOnRemoveDropdown(false);\n    removeProject(activeClaimId, file.id).then((data) => {\n      setLoading(false);\n      onDelete(file.id);\n    });\n  };\n\n  const statusName = (s) => {\n    let status = {};\n    switch (s) {\n      case 2:\n        status = {\n          class: 'review',\n          name: 'On Review',\n        };\n        break;\n      case 3:\n        status = {\n          class: 'approved',\n          name: 'Approved',\n        };\n        break;\n\n      default:\n        break;\n    }\n    return status;\n  };\n\n  const onEditProject = () => {\n    history.push(`/admin/project/${activeClaimId}/${file.id}`);\n    // const { addProjectDetails } = bindActionCreators(actions, dispatch);\n  };\n\n  return (\n    <div className={`step-file step-project ${loading ? 'loading' : ''}`}>\n      <div className=\"step-file-loading\">\n        <Spin />\n      </div>\n      <div className=\"step-file--title\">\n        <img src={iconFileS} alt=\"\" />\n        <Button type=\"link\" onClick={onEditProject}>\n          {file.title}\n        </Button>\n        {removeButton && (\n          <Dropdown\n            placement=\"bottomRight\"\n            trigger=\"click\"\n            visible={onRemoveDropdown}\n            onVisibleChange={(visible) => {\n              if (!visible) setOnRemoveDropdown(false);\n              onRed(visible);\n            }}\n            overlay={\n              <div className=\"step-file--title-dropdown\">\n                <div className=\"dropdown-title\">Are you sure you want to delete this Document?</div>\n                <div className=\"dropdown-actions\">\n                  <Button\n                    type=\"button\"\n                    onClick={(e) => {\n                      setOnRemoveDropdown(false);\n                      onRed(false);\n                    }}>\n                    Back\n                  </Button>\n                  <Button type=\"primary\" onClick={onDeleteProject} loading={loading}>\n                    Delete\n                  </Button>\n                </div>\n              </div>\n            }>\n            <button\n              className=\"step-file--remove-button\"\n              onClick={() => {\n                setOnRemoveDropdown(true);\n              }}>\n              <IconDeleteFile />\n            </button>\n          </Dropdown>\n        )}\n      </div>\n      <div className=\"wrapper_tech_rev admin\" id={`wrapper_tech_rev-${file.id}`}>\n        <Dropdown\n          overlayClassName=\"admin_drop_approved_adminPR\"\n          trigger=\"click\"\n          getPopupContainer={() => document.querySelector(`#wrapper_tech_rev-${file.id}`)}\n          overlay={\n            <Menu>\n              {file.status === 2 && (\n                <Menu.Item>\n                  <div\n                    className=\"status approved\"\n                    onClick={() => {\n                      setLoading(() => true);\n                      approveProject(file.id, 3).then((data) => {\n                        if (data) {\n                          checkForAllStatus();\n                          const file = {\n                            ...data.project,\n                            status: Number(data.project.status),\n                          };\n                          onChangeStatus(file);\n                          setLoading(() => false);\n                        }\n                      });\n                    }}>\n                    <b>Approve</b>\n                  </div>\n                </Menu.Item>\n              )}\n              {file.status === 3 && (\n                <Menu.Item>\n                  <div\n                    className=\"status on_review\"\n                    onClick={() => {\n                      setLoading(() => true);\n                      approveProject(file.id, 2).then((data) => {\n                        if (data) {\n                          checkForAllStatus();\n                          const file = {\n                            ...data.project,\n                            status: Number(data.project.status),\n                          };\n                          onChangeStatus(file);\n                          setLoading(() => false);\n                        }\n                      });\n                    }}>\n                    <b>On Review</b>\n                  </div>\n                </Menu.Item>\n              )}\n            </Menu>\n          }\n          placement=\"bottomCenter\">\n          <div className=\"step-file--status admin\">\n            <div\n              style={{ cursor: 'pointer', position: 'relative' }}\n              id={`project_id_${file.id}`}\n              className={`status ${statusName(file.status).class}`}>\n              {statusName(file.status).name}\n              <AdminArrow />\n            </div>\n          </div>\n        </Dropdown>\n      </div>\n      {file.documents?.length > 0 && (\n        <Collapse bordered={false} ghost={true} expandIcon={() => <img src={arrow} alt={arrow} />}>\n          <Panel header={`Show All (${file.documents.length})`} key=\"1\">\n            {file.documents.map((item) => (\n              <div key={`sub-${item.id}`} className=\"step-sub\">\n                <div className=\"step-sub__title\">\n                  <img src={iconPdf} alt=\"project\" />\n                  <span>{item.name}</span>\n                </div>\n                {/* <div className=\"step-file--status\">\n                  <div className={`status ${statusName(item.status).class}`}>{statusName(item.status).name}</div>\n                </div> */}\n              </div>\n            ))}\n          </Panel>\n        </Collapse>\n      )}\n    </div>\n  );\n};\n\nexport default AdminProject;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { bindActionCreators } from 'redux';\nimport { Tooltip, Skeleton, Upload, Spin, Modal, Button, Drawer } from 'antd';\nimport actions from '../../../../core/actions';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport { setNewProject, removeProject } from '../../../../core/adminServices';\n\nimport { getTechnicalClaimStep, approveStep } from '../../../../core/adminServices/claimServices';\n\nimport AdminProject from '../../../../components/AdminProject';\nimport CommonModalShadule from '../CommonModalShadule';\n\nimport { IconWarning, CloseIconModal } from '../../../../components/icons';\nimport arrowLeft from '../../../../assets/img/arrow-left.svg';\nimport iconCalendar from '../../../../assets/img/icon-calendar.svg';\nimport iconFile from '../../../../assets/img/icon-file-b.svg';\nimport iconAddProject from '../../../../assets/img/icon-add-project.svg';\n\nimport './style.scss';\n\nconst { Dragger } = Upload;\nconst antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\n\nconst StepTechnical = () => {\n  const [technicalStep, setTechnicalStep] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [status, setStatus] = useState(0);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [isVisibleModalSheduleCall, setIsVisibleModalSheduleCall] = useState(false);\n  const [newProjectId, setNewProjectId] = useState(null);\n  const [detailsShow, setDetailsShow] = useState(false);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { blurActiveSteps } = bindActionCreators(actions, dispatch);\n  const { id } = useParams();\n\n  useEffect(() => {\n    if (id) {\n      setTechnicalStep(null);\n      getTechnicalClaimStep(id).then((data) => {\n        const result = { ...data };\n        result.documents = data.documents.filter((item) => item.title.length && item.start_date && item.end_date);\n        data.documents.forEach((item) => {\n          if (item.title === '' || !item.start_date || !item.end_date) {\n            removeProject(item.claim_id, item.id);\n          }\n        });\n        setTechnicalStep(result);\n        const { addProjectsDetails } = bindActionCreators(actions, dispatch);\n        addProjectsDetails(result.documents);\n        const status = Math.round(\n          (data.documents.filter((item) => item.status === 3).length / data.documents.length) * 100,\n        );\n        setStatus(status);\n      });\n    }\n  }, [id]);\n\n  const customRequest = (e) => {\n    setLoading(true);\n    const form = {\n      main_document: e.file,\n    };\n    setNewProject(id, form).then((data) => {\n      const { addProjectsDetails } = bindActionCreators(actions, dispatch);\n      const res = { ...technicalStep };\n      res.documents.push(data);\n      addProjectsDetails(res.documents);\n      // setTechnicalStep(res);\n      setTimeout(() => {\n        history.push(`/admin/project/${id}/${data.id}`);\n        blurActiveSteps();\n      }, 150);\n    });\n    e.onSuccess('ok');\n  };\n\n  const uploadInformation = () => {\n    history.push(`/project/${id}/${newProjectId}`);\n  };\n\n  const onDelete = (id) => {\n    const res = { ...technicalStep };\n    res.documents = technicalStep.documents.filter((item) => item.id !== id);\n    setTechnicalStep(res);\n    const status = res.documents.filter((item) => item.status === 3).length\n      ? Math.round((res.documents.filter((item) => item.status === 3).length / res.documents.length) * 100)\n      : 0;\n    setStatus(status);\n  };\n\n  const onChangeStatus = (project) => {\n    const res = { ...technicalStep };\n    res.documents = technicalStep.documents.map((item) => {\n      if (item.id === project.id) {\n        item.status = project.status;\n      }\n      return item;\n    });\n    setTechnicalStep(res);\n    const status = Math.round((res.documents.filter((item) => item.status === 3).length / res.documents.length) * 100);\n    setStatus(status);\n  };\n\n  const checkForAllStatus = () => {\n    if (!technicalStep?.documents.filter((item) => item.status !== 3).length) approveStep(id, 3);\n  };\n\n  return (\n    <>\n      <section className=\"active-claims__steps_step technical\">\n        <h2\n          onClick={() => {\n            setDetailsShow(true);\n            blurActiveSteps();\n          }}>\n          <p>\n            3<i>/</i>5 Technical\n          </p>\n          <Tooltip title=\"Required Files\">\n            <span>\n              <IconWarning />\n            </span>\n          </Tooltip>\n        </h2>\n        {!technicalStep ? (\n          <Skeleton active />\n        ) : (\n          <div className=\"technical__scroll\">\n            <div className=\"step-actions\">\n              <button\n                className=\"technical__add-project_button\"\n                onClick={() => {\n                  setModalVisible(true);\n                  blurActiveSteps();\n                }}>\n                <img src={iconAddProject} alt=\"\" />\n                <span>Add a Project</span>\n              </button>\n              {/* <Dragger\n                name=\"file\"\n                customRequest={customRequest}\n                accept=\"application/pdf, application/msword, application/vnd.openxmlformats-officedocument.wordprocessingml.document, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\n                className={`upload-file ${loading ? 'loading' : ''}`}\n                showUploadList={false}>\n                <div className=\"upload-loading\">\n                  <Spin indicator={antIcon} />\n                </div>\n                <div className=\"upload-title\">\n                  <img src={iconAddProject} alt=\"\" />\n                  <span>Add a Project</span>\n                </div>\n              </Dragger> */}\n              {technicalStep.documents.map((item, index) => (\n                <div\n                  className=\"row admin\"\n                  key={`introduction-document-${item.id}`}\n                  style={item.red ? { background: 'rgba(246, 87, 71, 0.15)' } : {}}>\n                  <AdminProject\n                    checkForAllStatus={checkForAllStatus}\n                    removeButton={true}\n                    key={`technical-project-${item.id}`}\n                    file={item}\n                    onDelete={onDelete}\n                    onChangeStatus={onChangeStatus}\n                    index={technicalStep.documents.length > 1 ? index + 1 : null}\n                    onRed={(red) => {\n                      //introductionStep, setIntroductionStep\n                      const res = { ...technicalStep };\n                      res.documents.map((row) => {\n                        if (row.id === item.id) row.red = red;\n                        return row;\n                      });\n                      setTechnicalStep(res);\n                      //item.red = red;\n                    }}\n                  />\n                </div>\n              ))}\n            </div>\n            <div className=\"step-status\">\n              {technicalStep.call_date === null && (\n                <>\n                  <button\n                    className={`step-status--call-schedule ${technicalStep.documents.length === 0 ? 'disabled' : ''}`}\n                    onClick={() => {\n                      if (technicalStep.documents.length === 0) return;\n                      setIsVisibleModalSheduleCall((prev) => !prev);\n                    }}>\n                    <img src={iconCalendar} alt=\"\" />\n                    <span>Schedule a call</span>\n                    {technicalStep.documents.length === 0 && (\n                      <Tooltip\n                        title=\"Please, upload documents \n                      to be able to schedule this call. \n                      Or contact our support\">\n                        <span className=\"warning\">\n                          <IconWarning />\n                        </span>\n                      </Tooltip>\n                    )}\n                  </button>\n                  <CommonModalShadule\n                    isVisibleModalSheduleCall={isVisibleModalSheduleCall}\n                    setIsVisibleModalSheduleCall={setIsVisibleModalSheduleCall}>\n                    <ul className=\"list_shedule_intro\">\n                      <li>1. Introduction often takes about one hour.</li>\n                      <li>\n                        2. We want to understand the type of work you have undertaken during the relevant period(s).\n                      </li>\n                      <li>3. We will help you to gain the maximum value from our innovative client portal.</li>\n                    </ul>\n                  </CommonModalShadule>\n                </>\n              )}\n              {/* <div className='step-status--call-reminder'>\n              <div className='reminder-title'>\n                <img src={iconScheduled} alt='' />\n                <span>Call today at 8:00PM</span>\n              </div>\n              <div className='reminder-description'>\n                Check email for details\n              </div>\n            </div>\n\n            <div className='step-status--call-completed'>\n              <img src={iconApproved} alt='' />\n              <span>Call is completed</span>\n            </div> */}\n\n              <div className=\"step-status\">\n                <div className={`step-status--bar ${status === 100 ? 'done' : status > 0 ? 'process' : 'waiting'}`}>\n                  <span className=\"step-status--bar-fill\" style={{ width: status + '%' }} />\n                  <span className=\"step-status--bar-parcent\">{status}%</span>\n                  <span className=\"step-status--bar-detail\">\n                    {status === 100 ? 'Finished' : status > 0 ? 'In Progress' : 'Waiting'}\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </section>\n\n      <Modal\n        title=\"Basic Modal\"\n        className=\"technical__modal\"\n        visible={modalVisible}\n        width={700}\n        onCancel={() => {\n          setModalVisible(false);\n          blurActiveSteps();\n        }}\n        footer={false}\n        title={false}\n        closeIcon={<CloseIconModal />}>\n        <h2>Create your first project</h2>\n        <div className=\"technical__modal_description\">\n          <p>Upload project information using our online tool. </p>\n          <p>\n            Alternatively, you can upload <br />a pdf or word document for your consultant to review.\n          </p>\n        </div>\n        <div className=\"technical__modal_actions\">\n          <Dragger\n            name=\"file\"\n            customRequest={customRequest}\n            accept=\"application/pdf, application/msword, application/vnd.openxmlformats-officedocument.wordprocessingml.document, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\n            className={`upload-file ${loading ? 'loading' : ''}`}\n            showUploadList={false}>\n            <Button type=\"button\" loading={loading}>\n              <img src={iconFile} alt=\"\" />\n              <span>Add file</span>\n            </Button>\n          </Dragger>\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              history.push(`/admin/project/${id}`);\n              setModalVisible(false);\n              blurActiveSteps();\n            }}>\n            Add your First Project\n          </Button>\n        </div>\n      </Modal>\n    </>\n  );\n};\n\nexport default StepTechnical;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Skeleton } from 'antd';\n\nimport { getDeliverablesClaimStep } from '../../../../core/adminServices';\n\nimport AdminUploadFile from '../../../../components/AdminUploadFile';\n\nimport './style.scss';\n\nconst StepDeliverables = () => {\n  const [deliverablesStep, setDeliverablesStep] = useState(null);\n  const [status, setStatus] = useState(0);\n  const { id } = useParams();\n\n  useEffect(() => {\n    if (id) {\n      getDeliverablesClaimStep(id).then((data) => {\n        setDeliverablesStep(data);\n        const status = Math.round(\n          (data.documents.filter((item) => item.status === 3).length / data.documents.length) * 100,\n        );\n        setStatus(status);\n      });\n      // setTechnicalStep(null);\n      // getTechnicalClaimStep(id).then((data) => {\n      //   const result = { ...data };\n      //   result.documents = data.documents.filter((item) => item.title.length && item.start_date && item.end_date);\n      //   data.documents.forEach((item) => {\n      //     if (item.title === '' || !item.start_date || !item.end_date) {\n      //       removeProject(item.claim_id, item.id);\n      //     }\n      //   });\n      //   setTechnicalStep(result);\n      //   const { addProjectsDetails } = bindActionCreators(actions, dispatch);\n      //   addProjectsDetails(result.documents);\n      // });\n    }\n  }, [id]);\n\n  const onAction = (file) => {\n    const res = { ...deliverablesStep };\n    res.documents = deliverablesStep.documents.map((item) => {\n      if (item.id === file.id) {\n        const clone = { ...file };\n        if (!clone.comments_count) clone.comments_count = item.comments_count;\n        item = clone;\n      }\n      return item;\n    });\n    setDeliverablesStep(res);\n    const status = Math.round((res.documents.filter((item) => item.status === 3).length / res.documents.length) * 100);\n    setStatus(status);\n  };\n\n  const checkForAllStatus = () => {\n    //if (!deliverablesStep?.documents.filter((item) => item.status !== 3).length) approveStep(id, 1);\n  };\n\n  return (\n    <section className=\"active-claims__steps_step admin-deliverables\">\n      <h2>\n        4<i>/</i>5 Deliverables\n      </h2>\n      {!deliverablesStep ? (\n        <Skeleton active />\n      ) : (\n        <>\n          <div className=\"step-actions\">\n            {deliverablesStep.documents.map((item) => (\n              <div\n                className=\"row admin\"\n                key={`introduction-document-${item.id}`}\n                style={item.red ? { background: 'rgba(246, 87, 71, 0.15)' } : {}}>\n                <AdminUploadFile\n                  checkForAllStatus={checkForAllStatus}\n                  removeButton={true}\n                  key={`introduction-document-${item.id}`}\n                  file={item}\n                  onAction={onAction}\n                  onRed={(red) => {\n                    //introductionStep, setIntroductionStep\n                    const res = { ...deliverablesStep };\n                    res.documents.map((row) => {\n                      if (row.id === item.id) row.red = red;\n                      return row;\n                    });\n                    setDeliverablesStep(res);\n                    //item.red = red;\n                  }}\n                />\n              </div>\n            ))}\n          </div>\n          <div className=\"step-status\">\n            <div className={`step-status--bar ${status === 100 ? 'done' : status > 0 ? 'process' : 'waiting'}`}>\n              <span className=\"step-status--bar-fill\" style={{ width: status + '%' }} />\n              <span className=\"step-status--bar-parcent\">{status}%</span>\n              <span className=\"step-status--bar-detail\">\n                {status === 100 ? 'Finished' : status > 0 ? 'In Progress' : 'Waiting'}\n              </span>\n            </div>\n          </div>\n        </>\n      )}\n    </section>\n  );\n};\n\nexport default StepDeliverables;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Skeleton } from 'antd';\n\nimport { getSubmissionClaimStep } from '../../../../core/adminServices';\n\nimport AdminUploadFile from '../../../../components/AdminUploadFile';\n\nimport './style.scss';\n\nconst StepSubmission = () => {\n  const [submissionStep, setSubmissionStep] = useState(null);\n  const [status, setStatus] = useState(0);\n  const { id } = useParams();\n\n  useEffect(() => {\n    if (id) {\n      getSubmissionClaimStep(id).then((data) => {\n        setSubmissionStep(data);\n        const status = Math.round(\n          (data.documents.filter((item) => item.status === 3).length / data.documents.length) * 100,\n        );\n        setStatus(status);\n      });\n    }\n  }, [id]);\n\n  const onAction = (file) => {\n    const res = { ...submissionStep };\n    res.documents = submissionStep.documents.map((item) => {\n      if (item.id === file.id) {\n        const clone = { ...file };\n        if (!clone.comments_count) clone.comments_count = item.comments_count;\n        item = clone;\n      }\n      return item;\n    });\n    setSubmissionStep(res);\n    const status = Math.round((res.documents.filter((item) => item.status === 3).length / res.documents.length) * 100);\n    setStatus(status);\n  };\n\n  const checkForAllStatus = () => {\n    //if (!submissionStep?.documents.filter((item) => item.status !== 3).length) approveStep(id, 1);\n  };\n\n  return (\n    <section className=\"active-claims__steps_step admin-deliverables\">\n      <h2>\n        4<i>/</i>5 Deliverables\n      </h2>\n      {!submissionStep ? (\n        <Skeleton active />\n      ) : (\n        <>\n          <div className=\"step-actions\">\n            {submissionStep.documents.map((item) => (\n              <div\n                className=\"row admin\"\n                key={`introduction-document-${item.id}`}\n                style={item.red ? { background: 'rgba(246, 87, 71, 0.15)' } : {}}>\n                <AdminUploadFile\n                  checkForAllStatus={checkForAllStatus}\n                  removeButton={true}\n                  key={`introduction-document-${item.id}`}\n                  file={item}\n                  onAction={onAction}\n                  onRed={(red) => {\n                    //introductionStep, setIntroductionStep\n                    const res = { ...submissionStep };\n                    res.documents.map((row) => {\n                      if (row.id === item.id) row.red = red;\n                      return row;\n                    });\n                    setSubmissionStep(res);\n                    //item.red = red;\n                  }}\n                />\n              </div>\n            ))}\n          </div>\n          <div className=\"step-status\">\n            <div className={`step-status--bar ${status === 100 ? 'done' : status > 0 ? 'process' : 'waiting'}`}>\n              <span className=\"step-status--bar-fill\" style={{ width: status + '%' }} />\n              <span className=\"step-status--bar-parcent\">{status}%</span>\n              <span className=\"step-status--bar-detail\">\n                {status === 100 ? 'Finished' : status > 0 ? 'In Progress' : 'Waiting'}\n              </span>\n            </div>\n          </div>\n        </>\n      )}\n    </section>\n  );\n};\n\nexport default StepSubmission;\n","import React from 'react';\n\nimport StepIntroduction from './StepIntroduction';\nimport StepFinancial from './StepFinancial';\nimport StepTechnical from './StepTechnical';\nimport StepDeliverables from './StepDeliverables';\nimport StepSubmission from './StepSubmission';\n\nimport './style.scss';\n\nconst ActiveClaimsSteps = () => {\n  return (\n    <div className=\"active-claims__steps\">\n      <StepIntroduction />\n      <StepFinancial />\n      <StepTechnical />\n      <StepDeliverables />\n      <StepSubmission />\n    </div>\n  );\n};\n\nexport default ActiveClaimsSteps;\n","import React, { useEffect, useState } from 'react';\nimport { Skeleton, Form, Input, Button } from 'antd';\n\nimport { editClaimData } from '../../../core/adminServices';\nimport { IconEditPencil } from '../../../components/icons';\n\nconst AdminActiveClaimsDates = ({ activeClaimData }) => {\n  const [startDate, setStartDate] = useState(activeClaimData.start_date);\n  const [endDate, setEndDate] = useState(activeClaimData.end_date);\n  const [editMode, setEditMode] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const onFinish = (valuse) => {\n    setLoading(true);\n    editClaimData(activeClaimData.id, valuse).then(() => {\n      setStartDate(valuse.start_date);\n      setEndDate(valuse.end_date);\n      setLoading(false);\n      setEditMode(false);\n    });\n  };\n\n  return (\n    <div className=\"admin-claims__dates\">\n      {!editMode ? (\n        <div className=\"admin-claims__dates_info\">\n          <span>\n            {startDate} - {endDate}\n          </span>\n          <button\n            type=\"button\"\n            onClick={() => {\n              setEditMode(true);\n            }}>\n            <IconEditPencil />\n          </button>\n        </div>\n      ) : (\n        <div className=\"admin-claims__dates_form\">\n          <Form\n            name=\"basic\"\n            className=\"active-claims__dates_form\"\n            initialValues={{\n              start_date: activeClaimData.start_date,\n              end_date: activeClaimData.end_date,\n            }}\n            onFinish={onFinish}>\n            <Form.Item\n              name=\"start_date\"\n              rules={[\n                {\n                  required: true,\n                  message: 'Please input your estimated benefit!',\n                },\n              ]}>\n              <Input placeholder=\"Start date\" />\n            </Form.Item>\n            <div className=\"devider\">-</div>\n            <Form.Item\n              name=\"end_date\"\n              rules={[\n                {\n                  required: true,\n                  message: 'Please input your estimated benefit!',\n                },\n              ]}>\n              <Input placeholder=\"End date\" />\n            </Form.Item>\n            <div className=\"active-claims__dates_form-actions\">\n              <Button\n                type=\"button\"\n                onClick={() => {\n                  setEditMode(false);\n                }}>\n                Cancel\n              </Button>\n              <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\n                  Save\n                </Button>\n              </Form.Item>\n            </div>\n          </Form>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AdminActiveClaimsDates;\n","import React, { useEffect, useState } from 'react';\nimport { Skeleton, Form, Input, Button } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport AdminActiveClaimsCards from './AdminActiveClaimsCards';\nimport AdminActiveClaimsSteps from './AdminActiveClaimsSteps';\nimport LayOutAdmin from '../../components/LayOutAdmin';\nimport { useHistory } from 'react-router-dom';\nimport { getActiveClaimData } from '../../core/services';\nimport { getClaim } from '../../core/adminServices';\n\nimport { AdminBackToTablesSVG } from '../../components/icons';\n\nimport './style.scss';\nimport AdminActiveClaimsDates from './AdminActiveClaimsDates';\n\nconst AdminActiveClaimsPage = (props) => {\n  const [activeClaimData, setActiveClaimData] = useState(null);\n  const dispatch = useDispatch();\n  const prevRout = useSelector((state) => state.user.prevRout);\n  const history = useHistory();\n  const { id } = useParams();\n\n  useEffect(() => {\n    getClaim(id).then((data) => {\n      setActiveClaimData(() => data);\n    });\n  }, []);\n\n  const onActiveClaimDataEdit = () => {\n    setActiveClaimData(null);\n    getClaim(id).then((data) => {\n      setActiveClaimData(() => data);\n    });\n  };\n\n  return (\n    <LayOutAdmin>\n      <div className=\"wrapper_admin_claims\">\n        <div className=\"back_to\">\n          <button\n            onClick={() => {\n              // history.push('/admin/clients');\n              if (prevRout && (prevRout.includes('admin/clients') || prevRout.includes('admin/client/'))) {\n                history.goBack();\n              } else {\n                history.push('/admin/clients');\n              }\n            }}>\n            <div>\n              <AdminBackToTablesSVG />\n            </div>\n            <div className=\"text_btn\">Back</div>\n          </button>\n        </div>\n        <div className=\"active-claims admin\">\n          {/*{!activeClaimData ? <Skeleton active /> : <></>}*/}\n\n          {/* <div className='active-claims__title'>\n          <h2>Active claim title</h2>\n          <time>01/01/2018 – 31/12/2018</time>\n        </div>\n        <div className='active-claims__verify-message'>\n          Welcome! Verify your email to see approximate benefits\n        </div>\n        <ActiveClaimsCards /> */}\n          {activeClaimData ? (\n            <AdminActiveClaimsCards activeClaimData={activeClaimData} onEdit={onActiveClaimDataEdit} />\n          ) : (\n            <Skeleton active className=\"cards-skeleton\" />\n          )}\n          {activeClaimData && <AdminActiveClaimsDates activeClaimData={activeClaimData} />}\n          <AdminActiveClaimsSteps />\n        </div>\n      </div>\n    </LayOutAdmin>\n  );\n};\n\nexport default AdminActiveClaimsPage;\n","import React, { useState, useMemo, useEffect, useCallback } from 'react';\nimport { Table, Form } from 'antd';\nimport './style.scss';\nimport { ColumnVisibilitySVG } from '../../components/icons';\nimport LayOutAdmin from '../../components/LayOutAdmin';\nimport { Menu, Dropdown, Checkbox, Pagination, Skeleton } from 'antd';\nimport { getAllClients } from '../../core/adminServices/clientServices';\nimport { Link } from 'react-router-dom';\nimport { bindActionCreators } from 'redux';\nimport { useDispatch, useSelector } from 'react-redux';\nimport actions from '../../core/actions';\n\nconst dataColumns = [\n  {\n    title: 'Company',\n    dataIndex: 'company',\n    key: 'company',\n    sorter: {},\n    disabled: true,\n  },\n  {\n    title: 'Client name',\n    dataIndex: 'client_name',\n    key: 'client_name',\n    sorter: {},\n    render: (text) => <a>{text}</a>,\n    disabled: true,\n  },\n\n  {\n    title: 'Active claim',\n    dataIndex: 'active_claim_id',\n    key: 'active_claim_id',\n    render: (text) => <a>{text}</a>,\n    disabled: true,\n  },\n  {\n    title: 'Yearend',\n    dataIndex: 'yearned',\n    key: 'yearned',\n    sorter: {},\n  },\n  {\n    title: 'Due date',\n    dataIndex: 'due_date',\n    key: 'due_date',\n    sorter: {},\n  },\n  {\n    title: 'Progress % of stages',\n    dataIndex: 'perStages',\n    key: 'perStages',\n  },\n  {\n    title: 'Projected value',\n    dataIndex: 'project_value',\n    key: 'project_value',\n    sorter: {},\n  },\n  {\n    title: 'Date completed',\n    dataIndex: 'date_completed',\n    key: 'date_completed',\n    sorter: {},\n  },\n];\n\nconst AdminClientsPage = () => {\n  const [visible, setVisible] = useState(false);\n  const [dataSource, setDataSource] = useState(null);\n  const [tableLoading, setTableLoading] = useState(false);\n  const [totalCountPages, setTotalCountPages] = useState(0);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [perPage, setPerPage] = useState(0);\n  const [sorterType, setSorterType] = useState('');\n  const [currentColumnKey, setCurrentColumnKey] = useState('');\n  const dispatch = useDispatch();\n  const { pageAdminClientsGLOBAL } = useSelector((state) => state.modal);\n  const { setCurrentPageGLOBAL } = bindActionCreators(actions, dispatch);\n\n  const [columns, setColumns] = useState([\n    {\n      title: 'Company',\n      dataIndex: 'company',\n      key: 'company',\n      sorter: {},\n      disabled: true,\n    },\n    {\n      title: 'Client name',\n      dataIndex: 'client_name',\n      key: 'client_name',\n      sorter: {},\n      disabled: true,\n      sorter: {},\n    },\n    {\n      title: 'Active claim',\n      dataIndex: 'active_claim_id',\n      key: 'active_claim_id',\n      sorter: {},\n      disabled: true,\n    },\n    {\n      title: 'Yearend',\n      dataIndex: 'yearned',\n      key: 'yearned',\n      sorter: {},\n    },\n    {\n      title: 'Due date',\n      dataIndex: 'due_date',\n      key: 'due_date',\n      sorter: {},\n    },\n    {\n      title: 'Progress % of stages',\n      dataIndex: 'perStages',\n      key: 'perStages',\n      className: 'td_progress',\n    },\n    {\n      title: 'Projected value',\n      dataIndex: 'project_value',\n      key: 'project_value',\n      sorter: {},\n    },\n    {\n      title: 'Date completed',\n      dataIndex: 'date_completed',\n      key: 'date_completed',\n      sorter: {},\n    },\n  ]);\n\n  const defaultCheckedList = useMemo(\n    () => [\n      { title: 'Company', disabled: true, dataIndex: 'company' },\n      { title: 'Client name', disabled: true, dataIndex: 'client_name' },\n      { title: 'Active claim', disabled: true, dataIndex: 'active_claim_id' },\n      { title: 'Yearend', disabled: false, dataIndex: 'yearned' },\n      { title: 'Due date', disabled: false, dataIndex: 'due_date' },\n      { title: 'Progress % of stages', disabled: false, dataIndex: 'perStages' },\n      { title: 'Projected value', disabled: false, dataIndex: 'project_value' },\n      { title: 'Date completed', disabled: false, dataIndex: 'date_completed' },\n    ],\n    [],\n  );\n\n  useEffect(() => {\n    if (pageAdminClientsGLOBAL !== null) {\n      setCurrentPage(() => pageAdminClientsGLOBAL);\n      setTableLoading(() => true);\n      getAllClients(pageAdminClientsGLOBAL).then((data) => {\n        setPageInfo(data);\n      });\n      return;\n    }\n    getAllClients(currentPage).then((data) => {\n      setPageInfo(data);\n    });\n  }, [pageAdminClientsGLOBAL]);\n\n  const onChange = (pagination, filters, sorter, extra) => {\n    setTableLoading(() => true);\n    setSorterType(() => sorter.order);\n    setCurrentColumnKey(() => sorter.columnKey);\n    if (sorter.order === undefined)\n      return getAllClients(currentPage).then((data) => {\n        setPageInfo(data);\n        setSorterType(() => '');\n        setCurrentColumnKey(() => '');\n      });\n\n    getAllClients(currentPage, sorter.columnKey, sorter.order).then((data) => {\n      setPageInfo(data);\n    });\n  };\n\n  const onFilterChange = (changedValues, filters) => {\n    const res = dataColumns.filter((itemData) => filters.checkedProp.includes(itemData.dataIndex));\n    setColumns(() => res);\n  };\n\n  const onVisibleChange = (flag) => {\n    setVisible(() => flag);\n  };\n\n  const onChangeSizePage = (page) => {\n    if (currentColumnKey !== '' && sorterType !== '') {\n      setCurrentPage(() => page);\n      setTableLoading(() => true);\n      setCurrentPageGLOBAL(page);\n\n      return getAllClients(page, currentColumnKey, sorterType).then((data) => {\n        setPageInfo(data);\n      });\n    }\n    setCurrentPage(() => page);\n    setTableLoading(() => true);\n    setCurrentPageGLOBAL(page);\n    getAllClients(page).then((data) => {\n      setPageInfo(data);\n    });\n  };\n\n  const setPageInfo = useCallback(\n    (data) => {\n      const { companies, total_count, per_page } = data;\n      setTotalCountPages(() => total_count);\n      setPerPage(() => per_page);\n      const newData = [];\n      companies.forEach((item) => {\n        newData.push({\n          key: item.id,\n          client_name: (\n            <h3 className=\"active_client_name\">\n              <Link to={`/admin/client/${item.client_id}`}>\n                {item.client_name === null ? 'Go to profile' : item.client_name}\n              </Link>\n            </h3>\n          ),\n          company: item.company,\n          active_claim_id: (\n            <h3 className=\"active_claim_id\">\n              <Link to={`/admin/active-claim/${item.active_claim_id}`}>link</Link>\n            </h3>\n          ),\n          yearned: item.yearned,\n          due_date: item.due_date,\n          perStages: getActiveStage(item.progress),\n          project_value: checkForValue(item.project_value),\n          date_completed: item.date_completed,\n        });\n      });\n      setDataSource(() => newData);\n      setTableLoading(() => false);\n    },\n    [dataSource],\n  );\n  const getActiveStage = (progressComp) => {\n    let approvedClaims = 0;\n    Object.values(progressComp).forEach((step) => {\n      if (step.in_done) approvedClaims++;\n    });\n    return `${approvedClaims} / ${Object.keys(progressComp).length} Approved`;\n  };\n\n  const checkForValue = (value) => {\n    if (value === null) return '£ 0';\n    return `£ ${value}`;\n  };\n\n  return (\n    <LayOutAdmin>\n      <div className=\"table_wrapper\">\n        {dataSource === null ? (\n          <div className=\"clients_admin_skeletons\">\n            <Skeleton active />\n            <Skeleton active />\n            <Skeleton active />\n            <Skeleton active />\n          </div>\n        ) : (\n          <>\n            <div className=\"dropdown_filter\" id=\"drop_down_filter\">\n              <button className=\"btn_filter\">\n                <ColumnVisibilitySVG />\n                <Dropdown\n                  visible={visible}\n                  onVisibleChange={onVisibleChange}\n                  trigger={['click']}\n                  arrow={false}\n                  getPopupContainer={() => document.getElementById('drop_down_filter')}\n                  overlay={\n                    <Menu>\n                      <Menu.Item>\n                        <Form\n                          initialValues={{\n                            checkedProp: [\n                              'company',\n                              'client_name',\n                              'active_claim_id',\n                              'yearned',\n                              'due_date',\n                              'perStages',\n                              'project_value',\n                              'date_completed',\n                            ],\n                          }}\n                          name=\"basic\"\n                          className=\"clients__filter_form\"\n                          onValuesChange={onFilterChange}>\n                          <Form.Item name=\"checkedProp\">\n                            <Checkbox.Group>\n                              {defaultCheckedList.map(({ title, disabled, dataIndex }) => (\n                                <Checkbox key={dataIndex} value={dataIndex} disabled={disabled}>\n                                  {title}\n                                </Checkbox>\n                              ))}\n                            </Checkbox.Group>\n                          </Form.Item>\n                        </Form>\n                      </Menu.Item>\n                    </Menu>\n                  }\n                  placement=\"bottomRight\"\n                  arrow>\n                  <h3>Show/Hide Columns</h3>\n                </Dropdown>\n              </button>\n            </div>\n            <Table\n              loading={tableLoading}\n              dataSource={dataSource}\n              columns={columns}\n              onChange={onChange}\n              pagination={false}\n            />\n            <div className=\"pagination_clients\">\n              <Pagination\n                showSizeChanger={false}\n                pageSize={perPage}\n                total={totalCountPages - perPage}\n                current={currentPage}\n                showQuickJumper\n                showLessItems={false}\n                onChange={onChangeSizePage}\n              />\n            </div>\n          </>\n        )}\n      </div>\n    </LayOutAdmin>\n  );\n};\nexport default AdminClientsPage;\n","import React from 'react';\nimport { Tooltip, Upload, Dropdown, Button, Spin } from 'antd';\nimport iconUpload from '../../assets/img/icon-upload.svg';\nimport { EditPhotoAdmin } from '../../components/icons';\n\nimport './style.scss';\n\nconst { Dragger } = Upload;\n\nconst UploadPhoto = ({ form, edit, setEdit, avatarUrl, setAvatarUrl }) => {\n  const customRequest = (e) => {\n    form.setFieldsValue({\n      avatar: e.file,\n    });\n    setAvatarUrl(() => URL.createObjectURL(e.file));\n    e.onSuccess('ok');\n    setEdit(() => true);\n  };\n\n  if (edit) {\n    return (\n      <div className=\"edit_dragger\">\n        <Dragger\n          name=\"file\"\n          customRequest={customRequest}\n          accept=\".jpg,.jpeg,.png\"\n          className={`upload-file--edit ${false ? 'loading' : ''} `}\n          showUploadList={false}>\n          <div className=\"wrapper\">\n            <div className=\"edit_avatar\">\n              <img src={avatarUrl !== null ? avatarUrl : ''} alt=\"avatar\" />\n            </div>\n            <EditPhotoAdmin />\n          </div>\n        </Dragger>\n      </div>\n    );\n  }\n  return (\n    <Tooltip placement=\"rightTop\" title={'Upload PNG, JPG, JPEG'}>\n      <Dragger\n        name=\"file\"\n        customRequest={customRequest}\n        accept=\".jpg,.jpeg,.png\"\n        className={`upload-file ${false ? 'loading' : ''} `}\n        showUploadList={false}>\n        <div className=\"upload-loading\">\n          <Spin />\n        </div>\n        <div className=\"upload-title\">\n          <img src={iconUpload} alt=\"iconUpload\" />\n          <span className=\"upload_photo\">Upload Photo</span>\n          <span className=\"upload_only\">upload png or jpeg</span>\n        </div>\n      </Dragger>\n    </Tooltip>\n  );\n};\n\nexport default UploadPhoto;\n","import React, { useState } from 'react';\nimport { Modal, Form, Input, Button } from 'antd';\nimport './style.scss';\nimport UploadPhoto from '../../../components/UploadPhoto';\nimport { AdminCreateClose } from '../../../components/icons/index';\nimport { createNewAdmin } from '../../../core/adminServices/settingsServices';\nimport { getAllAdmins } from '../../../core/adminServices/settingsServices';\n\nconst CreateAdminModal = ({ setTableLoading, setDataTable, isCreateAdminModal, setIsCreateAdminModal }) => {\n  const [form] = Form.useForm();\n  const [edit, setEdit] = useState(false);\n  const [avatarUrl, setAvatarUrl] = useState(null);\n\n  const onFinish = (values) => {\n    createNewAdmin(values.email, values.name, values.password, values.phone, values.avatar).then((data) => {\n      if (data.success) {\n        setTableLoading(() => true);\n        getAllAdmins().then((data) => {\n          if (data !== null) {\n            const { admins } = data;\n            const updatedInfo = admins.map((item) => ({\n              name: item.name,\n              avatar: item.profile?.avatar,\n              email: item.email,\n              key: item.email,\n            }));\n            setDataTable(() => updatedInfo);\n            setTableLoading(() => false);\n          }\n        });\n      }\n    });\n    form.resetFields();\n    setIsCreateAdminModal(() => false);\n    setEdit(() => false);\n  };\n\n  return (\n    <Modal\n      visible={isCreateAdminModal}\n      closeIcon={<AdminCreateClose />}\n      onCancel={() => {\n        setIsCreateAdminModal(() => false);\n      }}\n      cancelButtonProps={{ style: { display: 'none' } }}\n      okButtonProps={{ style: { display: 'none' } }}\n      width={560}\n      className=\"modal_createAdmin\">\n      <Form name=\"admin_create\" layout=\"horizontal\" form={form} requiredMark={true} onFinish={onFinish}>\n        <h2>Add Admin</h2>\n\n        <Form.Item\n          name=\"name\"\n          label=\"First Name\"\n          labelCol={{ span: 24 }}\n          wrapperCol={{ span: 24 }}\n          rules={[\n            {\n              required: true,\n              message: 'Type first name',\n            },\n          ]}>\n          <Input placeholder=\"Type first name\" />\n        </Form.Item>\n\n        <Form.Item\n          name=\"phone\"\n          label=\"Phone\"\n          labelCol={{ span: 24 }}\n          wrapperCol={{ span: 24 }}\n          rules={[\n            {\n              pattern: /^(\\+)(\\d+)$/,\n              required: true,\n              message: 'Phone number must start with +, allowed characters is 0-9',\n            },\n          ]}>\n          <Input placeholder=\"Type phone\" />\n        </Form.Item>\n\n        <Form.Item\n          name=\"email\"\n          labelCol={{ span: 24 }}\n          wrapperCol={{ span: 24 }}\n          label=\"Email\"\n          rules={[\n            {\n              type: 'email',\n              required: true,\n              message: 'Type email',\n            },\n          ]}>\n          <Input placeholder=\"Type email\" />\n        </Form.Item>\n\n        <Form.Item\n          name=\"password\"\n          labelCol={{ span: 24 }}\n          wrapperCol={{ span: 24 }}\n          label=\"Password\"\n          rules={[\n            { min: 8, message: 'Password must be at least 8 characters!' },\n            { required: true, message: 'Please input your password!' },\n          ]}>\n          <Input type=\"password\" placeholder=\"Create password\" />\n        </Form.Item>\n\n        <Form.Item\n          className=\"upload_photo_admin\"\n          name=\"avatar\"\n          valuePropName=\"fileList\"\n          rules={[\n            {\n              required: true,\n              message: 'Please upload your avatar!',\n            },\n          ]}>\n          <UploadPhoto setAvatarUrl={setAvatarUrl} avatarUrl={avatarUrl} setEdit={setEdit} edit={edit} form={form} />\n        </Form.Item>\n\n        <Form.Item className=\"submit__create_modal_admin\">\n          <Button\n            type=\"button\"\n            onClick={() => {\n              setIsCreateAdminModal(() => false);\n            }}>\n            Back\n          </Button>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Save\n          </Button>\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\nexport default CreateAdminModal;\n","import React from 'react';\nimport { Modal, Button } from 'antd';\nimport './style.scss';\nimport { CloseIconModal } from '../../../components/icons';\nimport { deleteAdmin } from '../../../core/adminServices/settingsServices';\nimport actions from '../../../core/actions';\nimport { bindActionCreators } from 'redux';\nimport { useDispatch } from 'react-redux';\n\nconst DeleteAdminModal = ({\n  setRecordId,\n  recordId,\n  filteredListAdmins,\n  setDataTable,\n  isDeleteAdminModal,\n  setIsDeleteAdminModal,\n  setFilteredListAdmins,\n}) => {\n  const dispatch = useDispatch();\n  const { setIsBlur } = bindActionCreators(actions, dispatch);\n\n  const deleteAdminHandler = () => {\n    deleteAdmin(recordId).then((data) => {\n      if (data.success) {\n        setDataTable(() => filteredListAdmins);\n        setRecordId(() => '');\n        setFilteredListAdmins(() => []);\n        setIsDeleteAdminModal(false);\n        setIsBlur(false);\n      }\n    });\n  };\n  return (\n    <Modal\n      title=\"Basic Modal\"\n      className=\"delete-admin__modal\"\n      visible={isDeleteAdminModal}\n      width={700}\n      onCancel={() => {\n        setIsBlur(false);\n        setIsDeleteAdminModal(false);\n      }}\n      footer={false}\n      title={false}\n      closeIcon={<CloseIconModal />}>\n      <h2>\n        Are you sure you want <br />\n        to delete admin?\n      </h2>\n      <div className=\"delete-client__modal_actions\">\n        <Button\n          type=\"button\"\n          onClick={() => {\n            setIsDeleteAdminModal(() => false);\n            setIsBlur(false);\n          }}>\n          Back\n        </Button>\n        <Button type=\"primary\" onClick={deleteAdminHandler}>\n          Delete\n        </Button>\n      </div>\n    </Modal>\n  );\n};\nexport default DeleteAdminModal;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport LayOutAdmin from '../../components/LayOutAdmin';\nimport './style.scss';\nimport { LogOutSVG } from '../../components/icons';\nimport { Form, Button, Skeleton } from 'antd';\nimport { Table } from 'antd';\nimport { DeleteAdminSVG } from '../../components/icons';\nimport CreateAdminModal from './CreateAdminModal';\nimport { getAllAdmins } from '../../core/adminServices/settingsServices';\nimport DeleteAdminModal from './DeleteAdminModal';\nimport actions from '../../core/actions';\nimport { bindActionCreators } from 'redux';\nimport { useDispatch } from 'react-redux';\nimport { logOut } from '../../core/services/logOut';\n\nconst AdminSettings = () => {\n  const [tableLoading, setTableLoading] = useState(false);\n  const [dataTable, setDataTable] = useState(null);\n  const [isCreateAdminModal, setIsCreateAdminModal] = useState(false);\n  const [isDeleteAdminModal, setIsDeleteAdminModal] = useState(false);\n  const [filteredListAdmins, setFilteredListAdmins] = useState([]);\n  const [recordId, setRecordId] = useState('');\n  const [form] = Form.useForm();\n  const dispatch = useDispatch();\n  const { setIsBlur } = bindActionCreators(actions, dispatch);\n\n  useEffect(() => {\n    getAllAdmins().then((data) => {\n      if (data !== null) {\n        const { admins } = data;\n        const updatedInfo = admins.map((item) => ({\n          name: item.name,\n          avatar: item.profile?.avatar,\n          phone: item.profile?.phone,\n          email: item.email,\n          key: item.email,\n          id: item.id,\n        }));\n        setDataTable(() => updatedInfo);\n      }\n    });\n  }, []);\n\n  //const deleteHandler = useCallback((record, dataTable) => {}, []);\n\n  const deleteHandler = (record, dataTable) => {\n    const filteredData = dataTable.filter((item) => item.key !== record.key);\n    setFilteredListAdmins(() => filteredData);\n    setRecordId(() => record.id);\n    setIsDeleteAdminModal(() => true);\n    setIsBlur(true);\n  };\n\n  const onFinishName = (value) => {\n    form.resetFields();\n  };\n\n  const columns = [\n    {\n      dataIndex: 'avatar',\n      className: 'except_avatar',\n      render: (text) => (\n        <>\n          <div className=\"wrapper_img_name\">\n            <img src={text} alt=\"avatar\" />\n          </div>\n        </>\n      ),\n    },\n    {\n      title: 'Admin name',\n      dataIndex: 'name',\n      className: 'except_admin_name',\n      sorter: (a, b) => a.name.length - b.name.length,\n      render: (text) => (\n        <>\n          <div className=\"wrapper_img_name\">\n            <h4>{text}</h4>\n          </div>\n        </>\n      ),\n    },\n    {\n      title: 'Email',\n      dataIndex: 'email',\n    },\n    {\n      title: 'Phone',\n      dataIndex: 'phone',\n    },\n    {\n      title: 'Action',\n      dataIndex: 'delete',\n      align: 'right',\n      className: 'deleteBtn',\n      render: (_, record) => {\n        return (\n          <button onClick={() => deleteHandler(record, dataTable)} style={{ padding: '2px', cursor: 'pointer' }}>\n            <DeleteAdminSVG />\n          </button>\n        );\n      },\n    },\n  ];\n\n  return (\n    <LayOutAdmin>\n      <div className=\"settings_page\">\n        {dataTable === null ? (\n          <>\n            <Skeleton active />\n            <Skeleton active />\n          </>\n        ) : (\n          <>\n            <div className=\"box_title_logOut\">\n              <div className=\"title\">\n                <h2>Admins</h2>\n              </div>\n              <button className=\"block_log\" onClick={() => logOut(dispatch)}>\n                <LogOutSVG />\n                <h3>Log out</h3>\n              </button>\n            </div>\n\n            <Button type=\"primary\" style={{ marginTop: '20px' }} onClick={() => setIsCreateAdminModal(() => true)}>\n              Add\n            </Button>\n\n            <CreateAdminModal\n              setTableLoading={setTableLoading}\n              setDataTable={setDataTable}\n              isCreateAdminModal={isCreateAdminModal}\n              setIsCreateAdminModal={setIsCreateAdminModal}\n            />\n\n            <DeleteAdminModal\n              setFilteredListAdmins={setFilteredListAdmins}\n              setRecordId={setRecordId}\n              recordId={recordId}\n              filteredListAdmins={filteredListAdmins}\n              setDataTable={setDataTable}\n              isDeleteAdminModal={isDeleteAdminModal}\n              setIsDeleteAdminModal={setIsDeleteAdminModal}\n            />\n\n            <Table\n              tableLoading={tableLoading}\n              className=\"table_admins\"\n              dataSource={dataTable}\n              columns={columns}\n              // onChange={onChange}\n              pagination={{\n                defaultPageSize: 5,\n                pageSize: 5,\n                position: ['bottomCenter'],\n                showQuickJumper: true,\n                showQuickJumper: { goButton: 'Page:' },\n                showSizeChanger: false,\n              }}\n            />\n          </>\n        )}\n      </div>\n    </LayOutAdmin>\n  );\n};\nexport default AdminSettings;\n","import React, { useRef, useState } from 'react';\nimport { Form, Carousel, Button, Input, AutoComplete } from 'antd';\nimport { bindActionCreators } from 'redux';\nimport { useDispatch, useSelector } from 'react-redux';\nimport _ from 'underscore';\n\nimport { fetchCompanyHouse } from '../../../../core/services';\nimport actions from '../../../../core/actions';\n\nimport './style.scss';\n\nconst WelcomeStep1 = ({ goNextStep }) => {\n  const slider = useRef();\n  const inputSearch = useRef();\n  const [options, setOptions] = useState([]);\n  const [companyName, setCompanyName] = useState(null);\n  const [loader, setLoader] = useState(false);\n  const dispatch = useDispatch();\n  const state = useSelector((state) => state.registration);\n\n  const [form] = Form.useForm();\n  const { registrationUpdateState } = bindActionCreators(actions, dispatch);\n\n  const fetchCompanyHouseDelay = _.debounce((searchText) => {\n    setCompanyName(null);\n    if (searchText.length < 3) {\n      setOptions([]);\n    } else {\n      setLoader(true);\n      fetchCompanyHouse(searchText).then((data) => {\n        let results = [];\n        if (data.length) {\n          results = data.map((item, index) => {\n            item.value = item.company_name;\n            item.key = `company-${index}`;\n            return item;\n          });\n        } else {\n          if (data.company_name) {\n            data.value = data.company_name;\n            results.push(data);\n          }\n        }\n        setOptions(results);\n        setLoader(false);\n      });\n    }\n  }, 500);\n\n  const onSearch = (searchText) => {\n    fetchCompanyHouseDelay(searchText);\n  };\n\n  const onSelect = (value, options) => {\n    setCompanyName(options);\n  };\n\n  const onFinishName = (value) => {\n    const companyData = {\n      name: companyName.company_name,\n      number: companyName.company_number,\n      industry: companyName.industries ? companyName.industries : [],\n    };\n    registrationUpdateState(companyData);\n    setOptions([]);\n    slider.current.next();\n  };\n\n  return (\n    <div className=\"hello-page__step\">\n      <Carousel ref={slider} dots={false} effect=\"fade\" swipe={false}>\n        {/* WHAT IS YOUR COMPANY NAME? */}\n        <div className=\"step--wrapper\">\n          <Form\n            name=\"name\"\n            layout=\"vertical\"\n            requiredMark={false}\n            onFinish={onFinishName}\n            className=\"teszt\"\n            // onFinishFailed={onFinishFailed}\n          >\n            <Form.Item\n              label=\"What is your company name?\"\n              name=\"name\"\n              validateTrigger=\"onSelect\"\n              rules={[\n                {\n                  validateTrigger: 'onSelect',\n                  validator: (_, value) => {\n                    if (companyName) {\n                      return Promise.resolve();\n                    }\n\n                    return Promise.reject(new Error('Please input your company name!'));\n                  },\n                },\n              ]}>\n              <AutoComplete\n                options={options}\n                onSelect={onSelect}\n                onSearch={onSearch}\n                className=\"hello-page__autocomplete\"\n                notFoundContent=\"Nothing found\"\n                getPopupContainer={() => document.getElementById('name')}\n                dropdownClassName=\"drop_down__list\">\n                <Input.Search placeholder=\"Enter the name\" loading={loader} />\n              </AutoComplete>\n            </Form.Item>\n\n            <Form.Item>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Next\n              </Button>\n            </Form.Item>\n          </Form>\n        </div>\n\n        {/* IS THIS YOUR COMPANY NUMBER ON COMPANIES HOUSE? */}\n        <div className=\"step--wrapper\">\n          <div className=\"step--label\">Is this your company number on companies house?</div>\n          <div className=\"step--value\">{state.number}</div>\n          <div className=\"control-submit\">\n            <Button\n              type=\"primary\"\n              onClick={() => {\n                //slider.current.goTo(3);\n                goNextStep();\n              }}>\n              Yes\n            </Button>\n            <Button\n              type=\"text\"\n              onClick={() => {\n                slider.current.goTo(2);\n                setCompanyName(null);\n                form.setFieldsValue({\n                  number: '',\n                });\n              }}>\n              No\n            </Button>\n          </div>\n        </div>\n\n        {/* WHAT IS YOUR REGISTERED COMPANY NAME OR NUMBER? */}\n        <div className=\"step--wrapper\">\n          <Form\n            name=\"number\"\n            form={form}\n            layout=\"vertical\"\n            requiredMark={false}\n            onFinish={(values) => {\n              const companyData = {\n                name: companyName.company_name,\n                number: companyName.company_number,\n                industry: companyName.industries ? companyName.industries : [],\n              };\n              registrationUpdateState(companyData);\n              setOptions([]);\n              //slider.current.goTo(1);\n              goNextStep();\n            }}\n            // onFinishFailed={onFinishFailed}\n          >\n            <Form.Item\n              label=\"What is your registered company name or number?\"\n              name=\"number\"\n              validateTrigger=\"onSelect\"\n              rules={[\n                {\n                  validateTrigger: 'onSelect',\n                  validator: (_, value) => {\n                    if (companyName) {\n                      return Promise.resolve();\n                    }\n\n                    return Promise.reject(new Error('Please input your company name or number!'));\n                  },\n                },\n              ]}>\n              <AutoComplete\n                options={options}\n                onSelect={onSelect}\n                onSearch={onSearch}\n                className=\"hello-page__autocomplete\"\n                notFoundContent=\"Nothing found\">\n                <Input.Search placeholder=\"Enter the name\" loading={loader} ref={inputSearch} />\n              </AutoComplete>\n            </Form.Item>\n            <Form.Item className=\"control-submit\">\n              <Button type=\"primary\" htmlType=\"submit\">\n                Next\n              </Button>\n              {/* <Button\n                type='text'\n                onClick={() => {\n                  slider.current.prev();\n                  setOptions([]);\n                  setCompanyName(null);\n                }}\n              >\n                Back\n              </Button> */}\n            </Form.Item>\n          </Form>\n        </div>\n\n        {/* IS THIS YOUR COMPANY? */}\n        <div className=\"step--wrapper\">\n          <div className=\"step--label\">Is this your company?</div>\n          <div className=\"step--value\">{state.name}</div>\n          <div className=\"control-submit\">\n            <Button type=\"primary\" onClick={goNextStep}>\n              Yes\n            </Button>\n            <Button\n              type=\"text\"\n              onClick={() => {\n                setCompanyName(null);\n                setOptions([]);\n                slider.current.prev();\n                form.setFieldsValue({\n                  number: '',\n                });\n              }}>\n              No\n            </Button>\n          </div>\n        </div>\n      </Carousel>\n    </div>\n  );\n};\n\nexport default WelcomeStep1;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { Form, Carousel, Button, Select } from 'antd';\nimport { bindActionCreators } from 'redux';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport actions from '../../../../core/actions';\nimport { fetchAllIndustries } from '../../../../core/services';\n\nimport './style.scss';\n\nconst WelcomeStep2 = ({ goNextStep, goPrevStep }) => {\n  const [industry, setIndustry] = useState(null);\n  const slider = useRef();\n  const state = useSelector((state) => state.registration);\n  const dispatch = useDispatch();\n  const { registrationUpdateState } = bindActionCreators(actions, dispatch);\n\n  useEffect(() => {\n    fetchAllIndustries(dispatch);\n  }, []);\n\n  useEffect(() => {\n    if (!state.industry.length) slider.current.next();\n  }, [state.industry]);\n\n  const onFinishName = (value) => {\n    slider.current.next();\n    registrationUpdateState({\n      industry: industry,\n    });\n  };\n\n  const onSelect = (value, option) => {\n    setIndustry([option]);\n  };\n\n  return (\n    <div className=\"hello-page__step\">\n      <Carousel ref={slider} dots={false} effect=\"fade\" swipe={false}>\n        <div className=\"step--wrapper\">\n          <div className=\"step--label\">Is your company in the industry of</div>\n          <div className=\"step--value\">\n            {state.industry.length > 0 &&\n              state.industry.map((item, index) => (\n                <p key={`in-${index}`}>\n                  {item.sic_code} - {item.display_value}\n                </p>\n              ))}\n          </div>\n          <div className=\"control-submit\">\n            <Button\n              type=\"primary\"\n              onClick={() => {\n                goNextStep();\n              }}>\n              Yes\n            </Button>\n            <Button\n              type=\"text\"\n              onClick={() => {\n                slider.current.prev();\n              }}>\n              No\n            </Button>\n          </div>\n        </div>\n        <div className=\"step--wrapper\">\n          <Form\n            layout=\"vertical\"\n            requiredMark={false}\n            onFinish={onFinishName}\n            // onFinishFailed={onFinishFailed}\n          >\n            <Form.Item\n              label=\"What is your company’s industry?\"\n              name=\"industry\"\n              rules={[\n                {\n                  required: true,\n                  message: 'Please select your company’s industry!',\n                },\n              ]}>\n              <Select\n                showSearch\n                size=\"large\"\n                showArrow={false}\n                placeholder=\"Select an industry\"\n                optionFilterProp=\"children\"\n                options={state.industriesList}\n                onSelect={onSelect}\n                // onChange={onChange}\n                // onFocus={onFocus}\n                // onBlur={onBlur}\n                // onSearch={onSearch}\n                filterOption={(input, option) => {\n                  return option.display_value.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n                }}></Select>\n            </Form.Item>\n\n            <Form.Item className=\"control-submit\">\n              <Button type=\"primary\" htmlType=\"submit\">\n                Next\n              </Button>\n              <Button\n                type=\"text\"\n                onClick={() => {\n                  goPrevStep();\n                }}>\n                Back\n              </Button>\n            </Form.Item>\n          </Form>\n        </div>\n      </Carousel>\n    </div>\n  );\n};\n\nexport default WelcomeStep2;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { Form, Button, Input, Row, Col } from 'antd';\nimport { bindActionCreators } from 'redux';\nimport { useDispatch, useSelector } from 'react-redux';\nimport actions from '../../../../core/actions';\nimport './style.scss';\n\nconst WelcomeStep3 = ({ goNextStep, goPrevStep, setMinPrice, setMaxPrice }) => {\n  const hight = useRef({\n    hightPersent: '',\n  });\n  const dispatch = useDispatch();\n  const { industry } = useSelector((state) => state?.registration);\n  const { registrationUpdateState, registrationChangeEstimate } = bindActionCreators(actions, dispatch);\n\n  const checkForHighestPercent = () => {\n    const check = industry.map((item) => {\n      if (item.percent >= 0) {\n        return item.percent;\n      }\n    });\n    if (Math.max(...check) > 0) {\n      hight.current.hightPersent = Math.max(...check);\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const setToBenefitPriceHandler = (values) => {\n    const { staffing_costs, materials_costs, subcontracting_costs, software_costs } = values;\n\n    const estimated_benefit =\n      (Number(staffing_costs) + Number(materials_costs) + Number(subcontracting_costs) + Number(software_costs)) *\n      0.25 *\n      (Number(hight.current.hightPersent) / 100);\n    setMinPrice(() => Math.floor(estimated_benefit * 0.8));\n    setMaxPrice(() => Math.floor(estimated_benefit * 1.2));\n  };\n\n  const onFinishName = (values) => {\n    registrationUpdateState(values);\n    if (checkForHighestPercent()) {\n      setToBenefitPriceHandler(values);\n      registrationChangeEstimate('benefit');\n    } else {\n      registrationChangeEstimate('estimate');\n    }\n    goNextStep();\n  };\n\n  return (\n    <div className=\"hello-page__step\">\n      <div className=\"step--grid\">\n        <Form\n          layout=\"vertical\"\n          requiredMark={false}\n          onFinish={onFinishName}\n          // onFinishFailed={onFinishFailed}\n        >\n          <Row gutter={56}>\n            <Col className=\"gutter-row\" span={12}>\n              <Form.Item\n                label=\"What are your approximate internal staffing costs per year?\"\n                name=\"staffing_costs\"\n                rules={[\n                  {\n                    required: true,\n                    message: 'Please select your approximate internal staffing costs!',\n                  },\n                ]}>\n                <Input placeholder=\"Enter the number\" type=\"number\" suffix=\"£\" />\n              </Form.Item>\n            </Col>\n            <Col className=\"gutter-row\" span={12}>\n              <Form.Item\n                label=\"What are your approximate consumed materials costs per year?\"\n                name=\"materials_costs\"\n                rules={[\n                  {\n                    required: true,\n                    message: 'Please select your approximate consumed materials costs!',\n                  },\n                ]}>\n                <Input placeholder=\"Enter the number\" type=\"number\" suffix=\"£\" />\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row gutter={56}>\n            <Col className=\"gutter-row\" span={12}>\n              <Form.Item\n                label=\"What are your approximate subcontracting costs per year?\"\n                name=\"subcontracting_costs\"\n                rules={[\n                  {\n                    required: true,\n                    message: 'Please select your approximate subcontracting costs!',\n                  },\n                ]}>\n                <Input placeholder=\"Enter the number\" type=\"number\" suffix=\"£\" />\n              </Form.Item>\n            </Col>\n            <Col className=\"gutter-row\" span={12}>\n              <Form.Item\n                label=\"What are your approximate software costs per year?\"\n                name=\"software_costs\"\n                rules={[\n                  {\n                    required: true,\n                    message: 'Please select your approximate software costs!',\n                  },\n                ]}>\n                <Input placeholder=\"Enter the number\" type=\"number\" suffix=\"£\" />\n              </Form.Item>\n            </Col>\n          </Row>\n\n          <Form.Item className=\"control-submit\">\n            <Button type=\"primary\" htmlType=\"submit\">\n              Next\n            </Button>\n            <Button\n              type=\"text\"\n              onClick={() => {\n                goPrevStep();\n              }}>\n              Back\n            </Button>\n          </Form.Item>\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default WelcomeStep3;\n","import React, { useState, useRef } from 'react';\nimport { Carousel, Steps } from 'antd';\n\nimport WelcomeStep1 from './Step1';\nimport WelcomeStep2 from './Step2';\nimport WelcomeStep3 from './Step3';\n\nimport './style.scss';\n\nconst { Step } = Steps;\n\nconst WelcomeSteps = ({ goNextStep, setMaxPrice, setMinPrice }) => {\n  const [currentStep, setCurrentStep] = useState(0);\n  const slider = useRef();\n\n  const contentStyle = {\n    height: '160px',\n    color: '#364d79',\n    lineHeight: '160px',\n    textAlign: 'center',\n    border: '1px solid #364d79',\n  };\n\n  return (\n    <>\n      <h1>Add Client</h1>\n      <div className=\"hello-page__steps\">\n        <Steps current={currentStep}>\n          <Step title=\"Company\" />\n          <Step title=\"Industry\" />\n          <Step title=\"Numbers\" />\n        </Steps>\n      </div>\n\n      <Carousel\n        ref={slider}\n        swipe={false}\n        dots={false}\n        easing=\"ease-in-out\"\n        effect=\"fade\"\n        className=\"hello-page__steps_slider\">\n        <div>\n          <WelcomeStep1\n            goNextStep={() => {\n              slider.current.next();\n              setCurrentStep(currentStep + 1);\n            }}\n          />\n        </div>\n\n        <div>\n          {currentStep === 1 && (\n            <WelcomeStep2\n              goNextStep={() => {\n                slider.current.next();\n                setCurrentStep(currentStep + 1);\n              }}\n              goPrevStep={() => {\n                slider.current.prev();\n                setCurrentStep(currentStep - 1);\n              }}\n            />\n          )}\n        </div>\n        <div>\n          <div>\n            {currentStep === 2 && (\n              <WelcomeStep3\n                setMaxPrice={setMaxPrice}\n                setMinPrice={setMinPrice}\n                goNextStep={() => {\n                  goNextStep();\n                }}\n                goPrevStep={() => {\n                  slider.current.prev();\n                  setCurrentStep(currentStep - 1);\n                }}\n              />\n            )}\n          </div>\n        </div>\n        <div>\n          <h3 style={contentStyle}>4</h3>\n        </div>\n      </Carousel>\n    </>\n  );\n};\n\nexport default WelcomeSteps;\n","import React from 'react';\nimport { Modal, Form, Input, Button, Col } from 'antd';\nimport './style.scss';\nimport { setUserToUnregister } from '../../../../core/services/setUserToUnregister';\n\nconst BenefitModal = ({ state, isModalBenefit, setIsModalBenefit, goNextStep }) => {\n  const formItemLayout = {\n    labelCol: {\n      span: 6,\n    },\n    wrapperCol: {\n      span: 14,\n    },\n  };\n  const onFinish = (values) => {\n    const { name, number, industry, materials_costs, staffing_costs, subcontracting_costs, software_costs } = state;\n    const updatedList = {\n      ...values,\n      name,\n      number,\n      industry,\n      materials_costs,\n      staffing_costs,\n      subcontracting_costs,\n      software_costs,\n    };\n    setUserToUnregister(updatedList);\n    setIsModalBenefit(() => false);\n    goNextStep();\n  };\n  return (\n    <Modal\n      visible={isModalBenefit}\n      closable={false}\n      onCancel={() => {\n        setIsModalBenefit(() => false);\n      }}\n      cancelButtonProps={{ style: { display: 'none' } }}\n      okButtonProps={{ style: { display: 'none' } }}\n      width={316}\n      className=\"modal_benefit\">\n      <Form\n        {...formItemLayout}\n        name=\"askFormBenefit\"\n        onFinish={onFinish}\n        // form={askFrom}\n      >\n        <div className=\"wrapper_info\">\n          <div className=\"promWrapperText\">\n            <p>\n              Due to the nature of your SIC code, we cannot give your company a predicted R&D benefit, please input your\n              phone number and we will give you a call to discuss this.\n            </p>\n          </div>\n          <Col className=\"gutter-row\" span={24}>\n            <Form.Item\n              name=\"modal_phone\"\n              rules={[\n                {\n                  pattern: /^(\\+)(\\d+)$/,\n                  required: true,\n                  message: 'Phone number must start with +, allowed characters is 0-9',\n                },\n              ]}>\n              <Input placeholder=\"Enter your phone number\" style={{ width: '90%', margin: '10px auto 0px auto' }} />\n            </Form.Item>\n          </Col>\n          <Col className=\"gutter-row\" span={24}>\n            <Form.Item\n              name=\"modal_email\"\n              rules={[\n                {\n                  type: 'email',\n                  required: true,\n                  message: 'Please input your email!',\n                },\n              ]}>\n              <Input placeholder=\"Enter your the email\" style={{ width: '90%', margin: '0px auto 10px auto' }} />\n            </Form.Item>\n          </Col>\n          <div className=\"wrapper-btn-modal\">\n            <Button type=\"primary\" htmlType=\"submit\">\n              Confirm\n            </Button>\n          </div>\n        </div>\n      </Form>\n    </Modal>\n  );\n};\nexport default BenefitModal;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { Button, Row, Col, Card, Spin } from 'antd';\nimport { useSelector } from 'react-redux';\nimport './style.scss';\nimport { UpVector } from '../../../components/icons';\nimport BenefitModal from './BenefitModal';\nimport actions from '../../../core/actions';\nimport { useDispatch } from 'react-redux';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport { bindActionCreators } from 'redux';\n\nconst antIcon = <LoadingOutlined style={{ fontSize: 20 }} spin />;\n\nconst Сonfirm = ({ goNextStep, goPrevStep, maxPrice, minPrice }) => {\n  const state = useSelector((state) => state.registration);\n  const [isModalBenefit, setIsModalBenefit] = useState(false);\n  const { showEstimate } = useSelector((state) => state.registration);\n  const dispatch = useDispatch();\n\n  const { registrationChangeEstimate } = bindActionCreators(actions, dispatch);\n\n  useEffect(() => {\n    if (showEstimate === 'estimate') {\n      setIsModalBenefit(() => true);\n    }\n\n    return () => {\n      setIsModalBenefit(() => false);\n    };\n  }, [showEstimate]);\n\n  const checkorForRenderBenefitModal = useCallback(() => {\n    if (showEstimate === 'benefit') {\n      return (\n        <div className=\"wrapper_total_benefit\">\n          <p>Estimated total claim benefit</p>\n          <h2>{`£${minPrice} - £${maxPrice}`}</h2>\n          {/* <div className=\"block_info_img\">\n            <h5>YoY Change:</h5>\n            <UpVector />\n            <h6>13%</h6>\n          </div> */}\n        </div>\n      );\n    } else if (showEstimate === 'estimate') {\n      return (\n        <BenefitModal\n          goNextStep={goNextStep}\n          state={state}\n          isModalBenefit={isModalBenefit}\n          setIsModalBenefit={setIsModalBenefit}\n        />\n      );\n    }\n  }, [isModalBenefit, setIsModalBenefit, showEstimate]);\n\n  if (state.showEstimate === null)\n    return (\n      <div className=\"upload-loading\">\n        <Spin indicator={antIcon} />\n      </div>\n    );\n\n  return (\n    <div className={`welcome__comfirm ${isModalBenefit ? '' : 'isBenefitModal'}`}>\n      <h1>Please confirm information to proceed to official service agreement</h1>\n      <div className=\"hello-page__description\">\n        Thank you for signing up to work with Granter or your next R&D tax credit claim. We are excited to be working\n        with you in the future.\n      </div>\n\n      {showEstimate !== null && checkorForRenderBenefitModal()}\n\n      <div className=\"welcome__comfirm_info\">\n        <Row gutter={24}>\n          <Col span={8}>\n            <Card>\n              <p>{state.name}</p>\n              <span>Company name</span>\n            </Card>\n          </Col>\n          <Col span={8}>\n            <Card>\n              <p>{state.number}</p>\n              <span>Company numbner</span>\n            </Card>\n          </Col>\n          <Col span={8}>\n            <Card>\n              {state.industry?.length > 0 &&\n                state.industry.map((item, index) => (\n                  <p key={`ind-${index}`}>\n                    {item.sic_code} - {item.display_value}\n                  </p>\n                ))}\n              <span>Industry</span>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n      <div className=\"welcome__comfirm_submit\">\n        <Button\n          type=\"primary\"\n          onClick={() => {\n            goNextStep();\n            registrationChangeEstimate(null);\n          }}>\n          Confirm\n        </Button>\n        <Button type=\"text\" onClick={goPrevStep}>\n          Back\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default Сonfirm;\n","import React, { useState } from 'react';\nimport ReactPasswordStrength from 'react-password-strength';\nimport { Form, Button, Input, Tooltip, notification } from 'antd';\nimport { EyeOutlined, EyeInvisibleOutlined } from '@ant-design/icons';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport { fetchRegistration } from '../../../core/services';\n\nimport { IconInfo } from '../../../components/icons';\n\nimport './style.scss';\n\nconst RegistrationForm = ({ goNextStep }) => {\n  const [loader, setLoader] = useState(false);\n  const [passwordError, setPasswordError] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const [form] = Form.useForm();\n  const state = useSelector((state) => state.registration);\n  const history = useHistory();\n\n  const onFinishName = (value) => {\n    const industryIds = [];\n    state.industry.forEach((item) => {\n      industryIds.push(item.id);\n    });\n    const form = {\n      name: state.name,\n      number: state.number,\n      email: value.email,\n      phone: value.phone,\n      industry_ids: industryIds,\n      password: value.password,\n      staffing_costs: state.staffing_costs,\n      materials_costs: state.materials_costs,\n      subcontracting_costs: state.subcontracting_costs,\n      software_costs: state.software_costs,\n    };\n    setLoader(true);\n    fetchRegistration(form)\n      .then(() => {\n        setLoader(false);\n        notification.success({\n          description: 'Client was created',\n        });\n        history.push('/admin/clients');\n      })\n      .catch(() => {\n        setLoader(false);\n      });\n  };\n  const changeCallback = (score, password, isValid) => {\n    if (score.password) {\n      form.setFieldsValue({\n        password: score.password,\n      });\n      form.validateFields(['password']);\n    }\n  };\n\n  const onFieldsChange = (changedFields, allFields) => {\n    const password = changedFields.filter((item) => item.name[0] === 'password')[0];\n    if (password) {\n      if (password.errors.length) {\n        setPasswordError(true);\n      } else {\n        setPasswordError(false);\n      }\n    }\n  };\n  const onFinishFailed = (value) => {\n    //value.errorFields.\n    // if (value.errorFields.filter((item) => item.name[0] === \"password\").length)\n    //   setPasswordError(true);\n  };\n\n  return (\n    <div className=\"hello-page__registration\">\n      <h1>Welcome to Granter</h1>\n      <div className=\"hello-page__description\">\n        Thank you for signing up to a new approach for claiming tax benefits. We are excited to be working with you in\n        the future.{' '}\n      </div>\n      <Form\n        name=\"name\"\n        layout=\"vertical\"\n        form={form}\n        requiredMark={false}\n        onFinish={onFinishName}\n        onFieldsChange={onFieldsChange}\n        onFinishFailed={onFinishFailed}\n        className=\"registration--form\"\n        // onFinishFailed={onFinishFailed}\n      >\n        <Form.Item\n          label=\"Your Email\"\n          name=\"email\"\n          rules={[\n            {\n              type: 'email',\n              required: true,\n              message: 'Please input your email!',\n            },\n          ]}>\n          <Input placeholder=\"Enter the email\" />\n        </Form.Item>\n        <Form.Item\n          label=\"Your Phone Number\"\n          name=\"phone\"\n          rules={[\n            {\n              required: true,\n              message: 'Please input your Phone!',\n            },\n          ]}>\n          <Input placeholder=\"Enter the phone\" />\n        </Form.Item>\n        <div className=\"password-label\">\n          Please <b>create a secure password</b> to protect your account\n        </div>\n        <div className={`password-controle ${passwordError ? 'error' : ''}`}>\n          <button\n            className=\"password-controle--show\"\n            type=\"button\"\n            onClick={() => {\n              setShowPassword(!showPassword);\n            }}>\n            {!showPassword && <EyeInvisibleOutlined />}\n            {showPassword && <EyeOutlined />}\n          </button>\n          <ReactPasswordStrength\n            className=\"registration--form-password\"\n            minLength={8}\n            minScore={2}\n            tooShortWord=\"Too short\"\n            scoreWords={['Weak', 'Okay', 'Good', 'Strong', 'Stronger']}\n            changeCallback={changeCallback}\n            inputProps={{\n              autoComplete: 'off',\n              className: 'form-control',\n              placeholder: 'Enter the password',\n              type: showPassword ? 'text' : 'password',\n            }}\n          />\n          <div className=\"password-strength-info\">\n            <span>Password Strength</span>\n            <Tooltip\n              placement=\"top\"\n              title=\"Use upper and lower case letters, numbers and symbols like !, @, &, $, etc. Don’t use personal info (birth date, etc.)\">\n              <div className=\"info--tooltype\">\n                <IconInfo />\n              </div>\n            </Tooltip>\n          </div>\n        </div>\n        <Form.Item\n          name=\"password\"\n          rules={[\n            { min: 8, message: 'Password must be at least 8 characters!' },\n            { required: true, message: 'Please input your password!' },\n          ]}>\n          <Input type=\"password\" hidden />\n        </Form.Item>\n\n        <Form.Item className=\"registration--submit\">\n          <Button type=\"primary\" htmlType=\"submit\" loading={loader}>\n            Create an Account\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n\nexport default RegistrationForm;\n","import React, { useRef, useState } from 'react';\nimport { Carousel } from 'antd';\nimport Layout from '../../components/LayOutAdmin';\n\nimport WelcomeSteps from './Steps';\nimport WelcomeСonfirm from './Сonfirm';\nimport RegistrationForm from './RegistrationForm';\n\nimport './style.scss';\n\nconst WelcomePage = (props) => {\n  const slider = useRef();\n  const [minPrice, setMinPrice] = useState(null);\n  const [maxPrice, setMaxPrice] = useState(null);\n\n  return (\n    <Layout isLogged={false} className=\"hello-page\" mode=\"registration\">\n      <div className=\"admin-add-client\">\n        <Carousel\n          ref={slider}\n          swipe={false}\n          dots={false}\n          easing=\"ease-in-out\"\n          effect=\"fade\"\n          className=\"hello-page__steps_slider\">\n          <div>\n            <WelcomeSteps\n              setMinPrice={setMinPrice}\n              setMaxPrice={setMaxPrice}\n              goNextStep={() => {\n                slider.current.next();\n              }}\n            />\n          </div>\n          <div>\n            <WelcomeСonfirm\n              minPrice={minPrice}\n              maxPrice={maxPrice}\n              goNextStep={() => {\n                slider.current.next();\n              }}\n              goPrevStep={() => {\n                slider.current.prev();\n              }}\n            />\n          </div>\n          <div>\n            <RegistrationForm />\n          </div>\n        </Carousel>\n      </div>\n    </Layout>\n  );\n};\n\nexport default WelcomePage;\n","import React, { useRef, useState } from 'react';\nimport { Form, Carousel, Button, Input, AutoComplete } from 'antd';\nimport { bindActionCreators } from 'redux';\nimport { useDispatch, useSelector } from 'react-redux';\nimport _ from 'underscore';\n\nimport { fetchCompanyHouse } from '../../../../core/services';\nimport actions from '../../../../core/actions';\n\nimport './style.scss';\n\nconst WelcomeStep1 = ({ goNextStep }) => {\n  const slider = useRef();\n  const inputSearch = useRef();\n  const [options, setOptions] = useState([]);\n  const [companyName, setCompanyName] = useState(null);\n  const [loader, setLoader] = useState(false);\n  const dispatch = useDispatch();\n  const state = useSelector((state) => state.registration);\n\n  const [form] = Form.useForm();\n  const { registrationUpdateState } = bindActionCreators(actions, dispatch);\n\n  const fetchCompanyHouseDelay = _.debounce((searchText) => {\n    setCompanyName(null);\n    if (searchText.length < 3) {\n      setOptions([]);\n    } else {\n      setLoader(true);\n      fetchCompanyHouse(searchText).then((data) => {\n        let results = [];\n        if (data.length) {\n          results = data.map((item, index) => {\n            item.value = item.company_name;\n            item.key = `company-${index}`;\n            return item;\n          });\n        } else {\n          if (data.company_name) {\n            data.value = data.company_name;\n            results.push(data);\n          }\n        }\n        setOptions(results);\n        setLoader(false);\n      });\n    }\n  }, 500);\n\n  const onSearch = (searchText) => {\n    fetchCompanyHouseDelay(searchText);\n  };\n\n  const onSelect = (value, options) => {\n    setCompanyName(options);\n  };\n\n  const onFinishName = (value) => {\n    const companyData = {\n      name: companyName.company_name,\n      number: companyName.company_number,\n      industry: companyName.industries ? companyName.industries : [],\n    };\n    registrationUpdateState(companyData);\n    setOptions([]);\n    slider.current.next();\n  };\n\n  return (\n    <div className=\"hello-page__step\">\n      <Carousel ref={slider} dots={false} effect=\"fade\" swipe={false}>\n        {/* WHAT IS YOUR COMPANY NAME? */}\n        <div className=\"step--wrapper\">\n          <Form\n            name=\"name\"\n            layout=\"vertical\"\n            requiredMark={false}\n            onFinish={onFinishName}\n            className=\"teszt\"\n            // onFinishFailed={onFinishFailed}\n          >\n            <Form.Item\n              label=\"What is your company name?\"\n              name=\"name\"\n              validateTrigger=\"onSelect\"\n              rules={[\n                {\n                  validateTrigger: 'onSelect',\n                  validator: (_, value) => {\n                    if (companyName) {\n                      return Promise.resolve();\n                    }\n\n                    return Promise.reject(new Error('Please input your company name!'));\n                  },\n                },\n              ]}>\n              <AutoComplete\n                options={options}\n                onSelect={onSelect}\n                onSearch={onSearch}\n                className=\"hello-page__autocomplete\"\n                notFoundContent=\"Nothing found\"\n                getPopupContainer={() => document.getElementById('name')}\n                dropdownClassName=\"drop_down__list\">\n                <Input.Search placeholder=\"Enter the name\" loading={loader} />\n              </AutoComplete>\n            </Form.Item>\n\n            <Form.Item>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Next\n              </Button>\n            </Form.Item>\n          </Form>\n        </div>\n\n        {/* IS THIS YOUR COMPANY NUMBER ON COMPANIES HOUSE? */}\n        <div className=\"step--wrapper\">\n          <div className=\"step--label\">Is this your company number on companies house?</div>\n          <div className=\"step--value\">{state.number}</div>\n          <div className=\"control-submit\">\n            <Button\n              type=\"primary\"\n              onClick={() => {\n                //slider.current.goTo(3);\n                goNextStep();\n              }}>\n              Yes\n            </Button>\n            <Button\n              type=\"text\"\n              onClick={() => {\n                slider.current.goTo(2);\n                setCompanyName(null);\n                form.setFieldsValue({\n                  number: '',\n                });\n              }}>\n              No\n            </Button>\n          </div>\n        </div>\n\n        {/* WHAT IS YOUR REGISTERED COMPANY NAME OR NUMBER? */}\n        <div className=\"step--wrapper\">\n          <Form\n            name=\"number\"\n            form={form}\n            layout=\"vertical\"\n            requiredMark={false}\n            onFinish={(values) => {\n              const companyData = {\n                name: companyName.company_name,\n                number: companyName.company_number,\n                industry: companyName.industries ? companyName.industries : [],\n              };\n              registrationUpdateState(companyData);\n              setOptions([]);\n              //slider.current.goTo(1);\n              goNextStep();\n            }}\n            // onFinishFailed={onFinishFailed}\n          >\n            <Form.Item\n              label=\"What is your registered company name or number?\"\n              name=\"number\"\n              validateTrigger=\"onSelect\"\n              rules={[\n                {\n                  validateTrigger: 'onSelect',\n                  validator: (_, value) => {\n                    if (companyName) {\n                      return Promise.resolve();\n                    }\n\n                    return Promise.reject(new Error('Please input your company name or number!'));\n                  },\n                },\n              ]}>\n              <AutoComplete\n                options={options}\n                onSelect={onSelect}\n                onSearch={onSearch}\n                className=\"hello-page__autocomplete\"\n                notFoundContent=\"Nothing found\">\n                <Input.Search placeholder=\"Enter the name\" loading={loader} ref={inputSearch} />\n              </AutoComplete>\n            </Form.Item>\n            <Form.Item className=\"control-submit\">\n              <Button type=\"primary\" htmlType=\"submit\">\n                Next\n              </Button>\n              {/* <Button\n                type='text'\n                onClick={() => {\n                  slider.current.prev();\n                  setOptions([]);\n                  setCompanyName(null);\n                }}\n              >\n                Back\n              </Button> */}\n            </Form.Item>\n          </Form>\n        </div>\n\n        {/* IS THIS YOUR COMPANY? */}\n        <div className=\"step--wrapper\">\n          <div className=\"step--label\">Is this your company?</div>\n          <div className=\"step--value\">{state.name}</div>\n          <div className=\"control-submit\">\n            <Button type=\"primary\" onClick={goNextStep}>\n              Yes\n            </Button>\n            <Button\n              type=\"text\"\n              onClick={() => {\n                setCompanyName(null);\n                setOptions([]);\n                slider.current.prev();\n                form.setFieldsValue({\n                  number: '',\n                });\n              }}>\n              No\n            </Button>\n          </div>\n        </div>\n      </Carousel>\n    </div>\n  );\n};\n\nexport default WelcomeStep1;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { Form, Carousel, Button, Select } from 'antd';\nimport { bindActionCreators } from 'redux';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport actions from '../../../../core/actions';\nimport { fetchAllIndustries } from '../../../../core/services';\n\nimport './style.scss';\n\nconst WelcomeStep2 = ({ goNextStep, goPrevStep }) => {\n  const [industry, setIndustry] = useState(null);\n  const slider = useRef();\n  const state = useSelector((state) => state.registration);\n  const dispatch = useDispatch();\n  const { registrationUpdateState } = bindActionCreators(actions, dispatch);\n\n  useEffect(() => {\n    fetchAllIndustries(dispatch);\n  }, []);\n\n  useEffect(() => {\n    if (!state.industry.length) slider.current.next();\n  }, [state.industry]);\n\n  const onFinishName = (value) => {\n    slider.current.next();\n    registrationUpdateState({\n      industry: industry,\n    });\n  };\n\n  const onSelect = (value, option) => {\n    setIndustry([option]);\n  };\n\n  return (\n    <div className=\"hello-page__step\">\n      <Carousel ref={slider} dots={false} effect=\"fade\" swipe={false}>\n        <div className=\"step--wrapper\">\n          <div className=\"step--label\">Is your company in the industry of</div>\n          <div className=\"step--value\">\n            {state.industry.length > 0 &&\n              state.industry.map((item, index) => (\n                <p key={`in-${index}`}>\n                  {item.sic_code} - {item.display_value}\n                </p>\n              ))}\n          </div>\n          <div className=\"control-submit\">\n            <Button\n              type=\"primary\"\n              onClick={() => {\n                goNextStep();\n              }}>\n              Yes\n            </Button>\n            <Button\n              type=\"text\"\n              onClick={() => {\n                slider.current.prev();\n              }}>\n              No\n            </Button>\n          </div>\n        </div>\n        <div className=\"step--wrapper\">\n          <Form\n            layout=\"vertical\"\n            requiredMark={false}\n            onFinish={onFinishName}\n            // onFinishFailed={onFinishFailed}\n          >\n            <Form.Item\n              label=\"What is your company’s industry?\"\n              name=\"industry\"\n              rules={[\n                {\n                  required: true,\n                  message: 'Please select your company’s industry!',\n                },\n              ]}>\n              <Select\n                showSearch\n                size=\"large\"\n                showArrow={false}\n                placeholder=\"Select an industry\"\n                optionFilterProp=\"children\"\n                options={state.industriesList}\n                onSelect={onSelect}\n                // onChange={onChange}\n                // onFocus={onFocus}\n                // onBlur={onBlur}\n                // onSearch={onSearch}\n                filterOption={(input, option) => {\n                  return option.display_value.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n                }}></Select>\n            </Form.Item>\n\n            <Form.Item className=\"control-submit\">\n              <Button type=\"primary\" htmlType=\"submit\">\n                Next\n              </Button>\n              <Button\n                type=\"text\"\n                onClick={() => {\n                  goPrevStep();\n                }}>\n                Back\n              </Button>\n            </Form.Item>\n          </Form>\n        </div>\n      </Carousel>\n    </div>\n  );\n};\n\nexport default WelcomeStep2;\n","import { validZero } from '../../../../core/constants';\n\nexport const firstRow = [\n  {\n    label: 'What are your approximate internal staffing costs per year?',\n    name: 'staffing_costs',\n    rules: [\n      {\n        required: true,\n        message: 'Please select your approximate internal staffing costs!',\n      },\n      {\n        required: true,\n        pattern: validZero,\n        message: 'The minimum value is one',\n      },\n    ],\n    placeholder: 'Enter the number',\n    type: 'number',\n    suffix: '£',\n  },\n  {\n    label: 'What are your approximate consumed materials costs per year?',\n    name: 'materials_costs',\n    rules: [\n      {\n        required: true,\n        message: 'Please select your approximate consumed materials costs!',\n      },\n      {\n        required: true,\n        pattern: validZero,\n        message: 'The minimum value is one',\n      },\n    ],\n    placeholder: 'Enter the number',\n    type: 'number',\n    suffix: '£',\n  },\n];\nexport const secondRow = [\n  {\n    label: 'What are your approximate subcontracting costs per year?',\n    name: 'subcontracting_costs',\n    rules: [\n      {\n        required: true,\n        message: 'Please select your approximate subcontracting costs!',\n      },\n      {\n        required: true,\n        pattern: validZero,\n        message: 'The minimum value is one',\n      },\n    ],\n    placeholder: 'Enter the number',\n    type: 'number',\n    suffix: '£',\n  },\n  {\n    label: 'What are your approximate software costs per year?',\n    name: 'software_costs',\n    rules: [\n      {\n        required: true,\n        message: 'Please select your approximate software costs!',\n      },\n      {\n        required: true,\n        pattern: validZero,\n        message: 'Please, don’t start your number with 0',\n      },\n    ],\n    placeholder: 'Enter the number',\n    type: 'number',\n    suffix: '£',\n  },\n];\n","import React, { useState, useEffect, useRef } from 'react';\nimport { Form, Button, Input, Row, Col } from 'antd';\nimport { bindActionCreators } from 'redux';\nimport { useDispatch, useSelector } from 'react-redux';\nimport actions from '../../../../core/actions';\nimport './style.scss';\nimport { firstRow, secondRow } from './config';\n\nconst WelcomeStep3 = ({ goNextStep, goPrevStep, setMinPrice, setMaxPrice }) => {\n  const hight = useRef({\n    hightPersent: '',\n  });\n  const dispatch = useDispatch();\n  const { industry } = useSelector((state) => state?.registration);\n  const { registrationUpdateState, registrationChangeEstimate } = bindActionCreators(actions, dispatch);\n\n  const checkForHighestPercent = () => {\n    const check = industry.map((item) => {\n      if (item.percent >= 0) {\n        return item.percent;\n      }\n    });\n    if (Math.max(...check) > 0) {\n      hight.current.hightPersent = Math.max(...check);\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const setToBenefitPriceHandler = (values) => {\n    const { staffing_costs, materials_costs, subcontracting_costs, software_costs } = values;\n\n    const estimated_benefit =\n      (Number(staffing_costs) + Number(materials_costs) + Number(subcontracting_costs) + Number(software_costs)) *\n      0.25 *\n      (Number(hight.current.hightPersent) / 100);\n    setMinPrice(() => Math.floor(estimated_benefit * 0.8));\n    setMaxPrice(() => Math.floor(estimated_benefit * 1.2));\n  };\n\n  const onFinishName = (values) => {\n    registrationUpdateState(values);\n    if (checkForHighestPercent()) {\n      setToBenefitPriceHandler(values);\n      registrationChangeEstimate('benefit');\n    } else {\n      registrationChangeEstimate('estimate');\n    }\n    goNextStep();\n  };\n\n  return (\n    <div className=\"hello-page__step\">\n      <div className=\"step--grid\">\n        <Form\n          layout=\"vertical\"\n          requiredMark={false}\n          onFinish={onFinishName}\n          // onFinishFailed={onFinishFailed}\n        >\n          <Row gutter={56}>\n            {firstRow.map((item) => (\n              <Col key={item.name} className=\"gutter-row\" span={12}>\n                <Form.Item label={item.label} name={item.name} rules={item.rules}>\n                  <Input placeholder={item.placeholder} type={item.type} suffix={item.suffix} />\n                </Form.Item>\n              </Col>\n            ))}\n          </Row>\n          <Row gutter={56}>\n            {secondRow.map((item) => (\n              <Col key={item.name} className=\"gutter-row\" span={12}>\n                <Form.Item label={item.label} name={item.name} rules={item.rules}>\n                  <Input placeholder={item.placeholder} type={item.type} suffix={item.suffix} />\n                </Form.Item>\n              </Col>\n            ))}\n          </Row>\n\n          <Form.Item className=\"control-submit\">\n            <Button type=\"primary\" htmlType=\"submit\">\n              Next\n            </Button>\n            <Button\n              type=\"text\"\n              onClick={() => {\n                goPrevStep();\n              }}>\n              Back\n            </Button>\n          </Form.Item>\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default WelcomeStep3;\n","import React, { useState, useRef } from 'react';\nimport { Carousel, Steps } from 'antd';\n\nimport WelcomeStep1 from './Step1';\nimport WelcomeStep2 from './Step2';\nimport WelcomeStep3 from './Step3';\n\nimport './style.scss';\n\nconst { Step } = Steps;\n\nconst WelcomeSteps = ({ goNextStep, setMaxPrice, setMinPrice }) => {\n  const [currentStep, setCurrentStep] = useState(0);\n  const slider = useRef();\n\n  const contentStyle = {\n    height: '160px',\n    color: '#364d79',\n    lineHeight: '160px',\n    textAlign: 'center',\n    border: '1px solid #364d79',\n  };\n\n  return (\n    <>\n      <h1>Add Client</h1>\n      <div className=\"hello-page__steps\">\n        <Steps current={currentStep}>\n          <Step title=\"Company\" />\n          <Step title=\"Industry\" />\n          <Step title=\"Numbers\" />\n        </Steps>\n      </div>\n\n      <Carousel\n        ref={slider}\n        swipe={false}\n        dots={false}\n        easing=\"ease-in-out\"\n        effect=\"fade\"\n        className=\"hello-page__steps_slider\">\n        <div>\n          <WelcomeStep1\n            goNextStep={() => {\n              slider.current.next();\n              setCurrentStep(currentStep + 1);\n            }}\n          />\n        </div>\n\n        <div>\n          {currentStep === 1 && (\n            <WelcomeStep2\n              goNextStep={() => {\n                slider.current.next();\n                setCurrentStep(currentStep + 1);\n              }}\n              goPrevStep={() => {\n                slider.current.prev();\n                setCurrentStep(currentStep - 1);\n              }}\n            />\n          )}\n        </div>\n        <div>\n          <div>\n            {currentStep === 2 && (\n              <WelcomeStep3\n                setMaxPrice={setMaxPrice}\n                setMinPrice={setMinPrice}\n                goNextStep={() => {\n                  goNextStep();\n                }}\n                goPrevStep={() => {\n                  slider.current.prev();\n                  setCurrentStep(currentStep - 1);\n                }}\n              />\n            )}\n          </div>\n        </div>\n        <div>\n          <h3 style={contentStyle}>4</h3>\n        </div>\n      </Carousel>\n    </>\n  );\n};\n\nexport default WelcomeSteps;\n","import React from 'react';\nimport { Modal, Form, Input, Button, Col } from 'antd';\nimport './style.scss';\nimport { setUserToUnregister } from '../../../../core/services/setUserToUnregister';\n\nconst BenefitModal = ({ state, isModalBenefit, setIsModalBenefit, goNextStep }) => {\n  const formItemLayout = {\n    labelCol: {\n      span: 6,\n    },\n    wrapperCol: {\n      span: 14,\n    },\n  };\n  const onFinish = (values) => {\n    const { name, number, industry, materials_costs, staffing_costs, subcontracting_costs, software_costs } = state;\n    const updatedList = {\n      ...values,\n      name,\n      number,\n      industry,\n      materials_costs,\n      staffing_costs,\n      subcontracting_costs,\n      software_costs,\n    };\n    setUserToUnregister(updatedList);\n    setIsModalBenefit(() => false);\n    goNextStep();\n  };\n  return (\n    <Modal\n      visible={isModalBenefit}\n      closable={false}\n      onCancel={() => {\n        setIsModalBenefit(() => false);\n      }}\n      cancelButtonProps={{ style: { display: 'none' } }}\n      okButtonProps={{ style: { display: 'none' } }}\n      width={316}\n      className=\"modal_benefit\">\n      <Form\n        {...formItemLayout}\n        name=\"askFormBenefit\"\n        onFinish={onFinish}\n        // form={askFrom}\n      >\n        <div className=\"wrapper_info\">\n          <div className=\"promWrapperText\">\n            <p>\n              Due to the nature of your SIC code, we cannot give your company a predicted R&D benefit, please input your\n              phone number and we will give you a call to discuss this.\n            </p>\n          </div>\n          <Col className=\"gutter-row\" span={24}>\n            <Form.Item\n              name=\"modal_phone\"\n              rules={[\n                {\n                  pattern: /^(\\+)(\\d+)$/,\n                  required: true,\n                  message: 'Phone number must start with +, allowed characters is 0-9',\n                },\n              ]}>\n              <Input placeholder=\"Enter your phone number\" style={{ width: '90%', margin: '10px auto 0px auto' }} />\n            </Form.Item>\n          </Col>\n          <Col className=\"gutter-row\" span={24}>\n            <Form.Item\n              name=\"modal_email\"\n              rules={[\n                {\n                  type: 'email',\n                  required: true,\n                  message: 'Please input your email!',\n                },\n              ]}>\n              <Input placeholder=\"Enter your the email\" style={{ width: '90%', margin: '0px auto 10px auto' }} />\n            </Form.Item>\n          </Col>\n          <div className=\"wrapper-btn-modal\">\n            <Button type=\"primary\" htmlType=\"submit\">\n              Confirm\n            </Button>\n          </div>\n        </div>\n      </Form>\n    </Modal>\n  );\n};\nexport default BenefitModal;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { Button, Row, Col, Card, Spin, notification } from 'antd';\nimport { useSelector } from 'react-redux';\nimport { useParams, useHistory } from 'react-router-dom';\nimport './style.scss';\nimport { UpVector } from '../../../components/icons';\nimport BenefitModal from './BenefitModal';\nimport actions from '../../../core/actions';\nimport { useDispatch } from 'react-redux';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport { bindActionCreators } from 'redux';\nimport { addNewCompany } from '../../../core/adminServices';\n\nconst antIcon = <LoadingOutlined style={{ fontSize: 20 }} spin />;\n\nconst Сonfirm = ({ goNextStep, goPrevStep, maxPrice, minPrice }) => {\n  const state = useSelector((state) => state.registration);\n  const [loader, setLoader] = useState(false);\n  const [isModalBenefit, setIsModalBenefit] = useState(false);\n  const { showEstimate } = useSelector((state) => state.registration);\n  const dispatch = useDispatch();\n  const { clientId } = useParams();\n  const history = useHistory();\n\n  const { registrationChangeEstimate } = bindActionCreators(actions, dispatch);\n\n  useEffect(() => {\n    if (showEstimate === 'estimate') {\n      setIsModalBenefit(() => true);\n    }\n\n    return () => {\n      setIsModalBenefit(() => false);\n    };\n  }, [showEstimate]);\n\n  const addCompany = () => {\n    setLoader(true);\n    const companyData = {\n      name: state.name,\n      number: state.number,\n      industry_ids: state.industry,\n      staffing_costs: state.staffing_costs,\n      materials_costs: state.materials_costs,\n      subcontracting_costs: state.subcontracting_costs,\n      software_costs: state.software_costs,\n    };\n    addNewCompany(clientId, companyData).then((data) => {\n      setLoader(false);\n      notification.success({\n        description: 'Company was created successfully',\n      });\n      history.push(`/admin/client/${clientId}`);\n    });\n\n    registrationChangeEstimate(null);\n  };\n\n  const checkorForRenderBenefitModal = useCallback(() => {\n    if (showEstimate === 'benefit') {\n      return (\n        <div className=\"wrapper_total_benefit\">\n          <p>Estimated total claim benefit</p>\n          <h2>{`£${minPrice} - £${maxPrice}`}</h2>\n          {/* <div className=\"block_info_img\">\n            <h5>YoY Change:</h5>\n            <UpVector />\n            <h6>13%</h6>\n          </div> */}\n        </div>\n      );\n    } else if (showEstimate === 'estimate') {\n      return (\n        <BenefitModal\n          goNextStep={goNextStep}\n          state={state}\n          isModalBenefit={isModalBenefit}\n          setIsModalBenefit={setIsModalBenefit}\n        />\n      );\n    }\n  }, [isModalBenefit, setIsModalBenefit, showEstimate]);\n\n  if (state.showEstimate === null)\n    return (\n      <div className=\"upload-loading\">\n        <Spin indicator={antIcon} />\n      </div>\n    );\n\n  return (\n    <div className={`welcome__comfirm ${isModalBenefit ? '' : 'isBenefitModal'}`}>\n      <h1>Please confirm information to proceed to official service agreement</h1>\n      <div className=\"hello-page__description\">\n        Thank you for signing up to work with Granter or your next R&D tax credit claim. We are excited to be working\n        with you in the future.\n      </div>\n\n      {showEstimate !== null && checkorForRenderBenefitModal()}\n\n      <div className=\"welcome__comfirm_info\">\n        <Row gutter={24}>\n          <Col span={8}>\n            <Card>\n              <p>{state.name}</p>\n              <span>Company name</span>\n            </Card>\n          </Col>\n          <Col span={8}>\n            <Card>\n              <p>{state.number}</p>\n              <span>Company numbner</span>\n            </Card>\n          </Col>\n          <Col span={8}>\n            <Card>\n              {state.industry?.length > 0 &&\n                state.industry.map((item, index) => (\n                  <p key={`ind-${index}`}>\n                    {item.sic_code} - {item.display_value}\n                  </p>\n                ))}\n              <span>Industry</span>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n      <div className=\"welcome__comfirm_submit\">\n        <Button type=\"primary\" onClick={addCompany} loading={loader}>\n          Confirm\n        </Button>\n        <Button type=\"text\" onClick={goPrevStep}>\n          Back\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default Сonfirm;\n","import React, { useState } from 'react';\nimport ReactPasswordStrength from 'react-password-strength';\nimport { Form, Button, Input, Tooltip, notification } from 'antd';\nimport { EyeOutlined, EyeInvisibleOutlined } from '@ant-design/icons';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport { fetchRegistration } from '../../../core/services';\n\nimport { IconInfo } from '../../../components/icons';\n\nimport './style.scss';\n\nconst RegistrationForm = ({ goNextStep }) => {\n  const [loader, setLoader] = useState(false);\n  const [passwordError, setPasswordError] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const [form] = Form.useForm();\n  const state = useSelector((state) => state.registration);\n  const history = useHistory();\n\n  const onFinishName = (value) => {\n    const industryIds = [];\n    state.industry.forEach((item) => {\n      industryIds.push(item.id);\n    });\n    const form = {\n      name: state.name,\n      number: state.number,\n      email: value.email,\n      phone: value.phone,\n      industry_ids: industryIds,\n      password: value.password,\n      staffing_costs: state.staffing_costs,\n      materials_costs: state.materials_costs,\n      subcontracting_costs: state.subcontracting_costs,\n      software_costs: state.software_costs,\n    };\n    setLoader(true);\n    fetchRegistration(form)\n      .then(() => {\n        setLoader(false);\n        notification.success({\n          description: 'Client was created',\n        });\n        history.push('/admin/clients');\n      })\n      .catch(() => {\n        setLoader(false);\n      });\n  };\n  const changeCallback = (score, password, isValid) => {\n    if (score.password) {\n      form.setFieldsValue({\n        password: score.password,\n      });\n      form.validateFields(['password']);\n    }\n  };\n\n  const onFieldsChange = (changedFields, allFields) => {\n    const password = changedFields.filter((item) => item.name[0] === 'password')[0];\n    if (password) {\n      if (password.errors.length) {\n        setPasswordError(true);\n      } else {\n        setPasswordError(false);\n      }\n    }\n  };\n  const onFinishFailed = (value) => {\n    //value.errorFields.\n    // if (value.errorFields.filter((item) => item.name[0] === \"password\").length)\n    //   setPasswordError(true);\n  };\n\n  return (\n    <div className=\"hello-page__registration\">\n      <h1>Welcome to Granter</h1>\n      <div className=\"hello-page__description\">\n        Thank you for signing up to a new approach for claiming tax benefits. We are excited to be working with you in\n        the future.{' '}\n      </div>\n      <Form\n        name=\"name\"\n        layout=\"vertical\"\n        form={form}\n        requiredMark={false}\n        onFinish={onFinishName}\n        onFieldsChange={onFieldsChange}\n        onFinishFailed={onFinishFailed}\n        className=\"registration--form\"\n        // onFinishFailed={onFinishFailed}\n      >\n        <Form.Item\n          label=\"Your Email\"\n          name=\"email\"\n          rules={[\n            {\n              type: 'email',\n              required: true,\n              message: 'Please input your email!',\n            },\n          ]}>\n          <Input placeholder=\"Enter the email\" />\n        </Form.Item>\n        <Form.Item\n          label=\"Your Phone Number\"\n          name=\"phone\"\n          rules={[\n            {\n              required: true,\n              message: 'Please input your Phone!',\n            },\n          ]}>\n          <Input placeholder=\"Enter the phone\" />\n        </Form.Item>\n        <div className=\"password-label\">\n          Please <b>create a secure password</b> to protect your account\n        </div>\n        <div className={`password-controle ${passwordError ? 'error' : ''}`}>\n          <button\n            className=\"password-controle--show\"\n            type=\"button\"\n            onClick={() => {\n              setShowPassword(!showPassword);\n            }}>\n            {!showPassword && <EyeInvisibleOutlined />}\n            {showPassword && <EyeOutlined />}\n          </button>\n          <ReactPasswordStrength\n            className=\"registration--form-password\"\n            minLength={8}\n            minScore={2}\n            tooShortWord=\"Too short\"\n            scoreWords={['Weak', 'Okay', 'Good', 'Strong', 'Stronger']}\n            changeCallback={changeCallback}\n            inputProps={{\n              autoComplete: 'off',\n              className: 'form-control',\n              placeholder: 'Enter the password',\n              type: showPassword ? 'text' : 'password',\n            }}\n          />\n          <div className=\"password-strength-info\">\n            <span>Password Strength</span>\n            <Tooltip\n              placement=\"top\"\n              title=\"Use upper and lower case letters, numbers and symbols like !, @, &, $, etc. Don’t use personal info (birth date, etc.)\">\n              <div className=\"info--tooltype\">\n                <IconInfo />\n              </div>\n            </Tooltip>\n          </div>\n        </div>\n        <Form.Item\n          name=\"password\"\n          rules={[\n            { min: 8, message: 'Password must be at least 8 characters!' },\n            { required: true, message: 'Please input your password!' },\n          ]}>\n          <Input type=\"password\" hidden />\n        </Form.Item>\n\n        <Form.Item className=\"registration--submit\">\n          <Button type=\"primary\" htmlType=\"submit\" loading={loader}>\n            Create an Account\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n\nexport default RegistrationForm;\n","import React, { useRef, useState } from 'react';\nimport { Carousel } from 'antd';\nimport Layout from '../../components/LayOutAdmin';\n\nimport WelcomeSteps from './Steps';\nimport WelcomeСonfirm from './Сonfirm';\nimport RegistrationForm from './RegistrationForm';\n\nimport './style.scss';\n\nconst WelcomePage = (props) => {\n  const slider = useRef();\n  const [minPrice, setMinPrice] = useState(null);\n  const [maxPrice, setMaxPrice] = useState(null);\n\n  return (\n    <Layout isLogged={false} className=\"hello-page\" mode=\"registration\">\n      <div className=\"admin-add-client\">\n        <Carousel\n          ref={slider}\n          swipe={false}\n          dots={false}\n          easing=\"ease-in-out\"\n          effect=\"fade\"\n          className=\"hello-page__steps_slider\">\n          <div>\n            <WelcomeSteps\n              setMinPrice={setMinPrice}\n              setMaxPrice={setMaxPrice}\n              goNextStep={() => {\n                slider.current.next();\n              }}\n            />\n          </div>\n          <div>\n            <WelcomeСonfirm\n              minPrice={minPrice}\n              maxPrice={maxPrice}\n              goNextStep={() => {\n                slider.current.next();\n              }}\n              goPrevStep={() => {\n                slider.current.prev();\n              }}\n            />\n          </div>\n          <div>\n            <RegistrationForm />\n          </div>\n        </Carousel>\n      </div>\n    </Layout>\n  );\n};\n\nexport default WelcomePage;\n","import React, { useState } from 'react';\nimport { Checkbox, Dropdown, Button } from 'antd';\n\nimport { IconDeleteFile } from '../../icons';\n\nimport './style.scss';\n\nconst Reply = ({ reply, onReplyDelete }) => {\n  const [onRemoveDropdown, setOnRemoveDropdown] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const onDelete = () => {\n    setLoading(true);\n    onReplyDelete(reply.id);\n  };\n\n  const convertDate = (date) => {\n    function convertDate(inputFormat) {\n      function pad(s) {\n        return s < 10 ? '0' + s : s;\n      }\n      var d = new Date(inputFormat);\n      return [pad(d.getDate()), pad(d.getMonth() + 1), d.getFullYear()].join('/');\n    }\n    return convertDate(date);\n  };\n\n  return (\n    <div className={`comment__section reply ${onRemoveDropdown ? 'red' : ''}`}>\n      <div className=\"comment--header\">\n        <div className=\"comment--author\">\n          <div className=\"comment--author-info\">\n            <span>{reply.user}</span>\n            <time>{convertDate(reply.updated_at)}</time>\n          </div>\n        </div>\n        <Dropdown\n          placement=\"bottomRight\"\n          trigger=\"click\"\n          visible={onRemoveDropdown}\n          onVisibleChange={(visible) => {\n            if (!visible) setOnRemoveDropdown(false);\n          }}\n          overlay={\n            <div className=\"step-file--title-dropdown\">\n              <div className=\"dropdown-title\">Are you sure you want to delete this Reply?</div>\n              <div className=\"dropdown-actions\">\n                <Button\n                  type=\"button\"\n                  onClick={() => {\n                    setOnRemoveDropdown(false);\n                  }}>\n                  Back\n                </Button>\n                <Button type=\"primary\" onClick={onDelete} loading={loading}>\n                  Delete\n                </Button>\n              </div>\n            </div>\n          }>\n          <button\n            className=\"step-file--remove\"\n            onClick={() => {\n              setOnRemoveDropdown(true);\n            }}>\n            <IconDeleteFile />\n          </button>\n        </Dropdown>\n        {/* <Checkbox className=\"reply-checkbox\" /> */}\n      </div>\n      <div\n        className=\"comment--message\"\n        dangerouslySetInnerHTML={{\n          __html: reply.text.replace(/(?:\\r\\n|\\r|\\n)/g, '<br>'),\n        }}\n      />\n    </div>\n  );\n};\n\nexport default Reply;\n","import React, { useState, useEffect } from 'react';\nimport { Checkbox, Input, Collapse, Dropdown, Button, Skeleton } from 'antd';\n\nimport { approveComment, unApproveComment } from '../../core/adminServices';\n\nimport Reply from './Reply';\nimport arrow from '../../assets/img/icon-arrow-dropdown.svg';\n\nimport { IconDeleteFile, IconReply } from '../icons';\n\nimport './style.scss';\n\nconst { Panel } = Collapse;\n\nconst AdminComment = ({ comment, onCommentDelete, onAddReply }) => {\n  const [onRemoveDropdown, setOnRemoveDropdown] = useState(false);\n  const [status, setStatus] = useState(null);\n\n  const [replyForm, setReplyForm] = useState(false);\n  const [replyLoader, setReplyLoader] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setStatus(comment.status > 1 ? true : false);\n  }, []);\n\n  const onDelete = () => {\n    setLoading(true);\n    onCommentDelete(comment.id);\n  };\n\n  const onAprove = (e) => {\n    if (e.target.checked) {\n      approveComment(comment.id);\n    } else {\n      unApproveComment(comment.id);\n    }\n    setStatus(e.target.checked);\n  };\n\n  const convertDate = (date) => {\n    function convertDate(inputFormat) {\n      function pad(s) {\n        return s < 10 ? '0' + s : s;\n      }\n      var d = new Date(inputFormat);\n      return [pad(d.getDate()), pad(d.getMonth() + 1), d.getFullYear()].join('/');\n    }\n    return convertDate(date);\n  };\n\n  return (\n    <div className={`comment ${onRemoveDropdown ? 'red' : ''}`}>\n      <div className=\"comment__section\">\n        <div className=\"comment--header\">\n          <div className=\"comment--author\">\n            <div className=\"comment--author-info\">\n              <span title={comment.user}>{comment.user}</span>\n              <time>{convertDate(comment.updated_at)}</time>\n            </div>\n          </div>\n          <Dropdown\n            placement=\"bottomRight\"\n            trigger=\"click\"\n            visible={onRemoveDropdown}\n            onVisibleChange={(visible) => {\n              if (!visible) setOnRemoveDropdown(false);\n              // onRed(visible);\n            }}\n            overlay={\n              <div className=\"step-file--title-dropdown\">\n                <div className=\"dropdown-title\">Are you sure you want to delete this Comment?</div>\n                <div className=\"dropdown-actions\">\n                  <Button\n                    type=\"button\"\n                    onClick={(e) => {\n                      setOnRemoveDropdown(false);\n                      // onRed(false);\n                    }}>\n                    Back\n                  </Button>\n                  <Button type=\"primary\" onClick={onDelete} loading={loading}>\n                    Delete\n                  </Button>\n                </div>\n              </div>\n            }>\n            <button\n              className=\"step-file--remove\"\n              onClick={() => {\n                setOnRemoveDropdown(true);\n              }}>\n              <IconDeleteFile />\n            </button>\n          </Dropdown>\n          <button\n            onClick={(e) => {\n              setReplyForm(true);\n            }}>\n            <IconReply />\n          </button>\n          <Checkbox checked={status} className=\"reply-checkbox\" onChange={onAprove} />\n        </div>\n        <div\n          className=\"comment--message\"\n          escape=\"false\"\n          dangerouslySetInnerHTML={{\n            __html: comment.text.replace(/(?:\\r\\n|\\r|\\n)/g, '<br>'),\n          }}\n        />\n      </div>\n      {replyForm && (\n        <div className=\"comment__reply\">\n          {!replyLoader ? (\n            <>\n              <div className=\"comment__reply_title\">Reply:</div>\n              <Input.TextArea\n                placeholder=\"Type to Reply, Enter to Send\"\n                onPressEnter={(e) => {\n                  const value = e.currentTarget.value;\n                  if (e.shiftKey || value.trim().length === 0) return;\n                  setReplyLoader(true);\n                  onAddReply(e, comment.id).then(() => {\n                    setReplyForm(false);\n                    setReplyLoader(false);\n                  });\n                }}\n              />\n            </>\n          ) : (\n            <Skeleton active />\n          )}\n        </div>\n      )}\n      {comment.replies.length > 0 && (\n        <Collapse bordered={false} ghost={true} expandIcon={() => <img src={arrow} alt={arrow} />}>\n          <Panel header={`Replies (${comment.replies.length})`} key=\"1\">\n            {comment.replies.map((item, index) => (\n              <Reply\n                key={`reply-${item.id}`}\n                reply={item}\n                onReplyDelete={(id) => {\n                  onCommentDelete(id);\n                }}\n              />\n            ))}\n          </Panel>\n        </Collapse>\n      )}\n    </div>\n  );\n};\n\nexport default AdminComment;\n","import React, { useEffect, useState } from 'react';\nimport { Link, useParams, useHistory } from 'react-router-dom';\nimport { Upload, Select, Button, Spin, Skeleton, Tooltip, Input } from 'antd';\n\nimport { postNewVersionDocument } from '../../core/services';\nimport { getDocument, postNewComment, removeComment } from '../../core/adminServices';\n\nimport DocumentViewer from '../../components/DocumentViewer';\nimport AdminComment from '../../components/AdminComment';\nimport { IconComment } from '../../components/icons';\n\nimport iconBack from '../../assets/img/arrow-left.svg';\nimport iconDownload from '../../assets/img/icon-download.svg';\nimport iconUpload from '../../assets/img/icon-upload-blue.svg';\nimport iconSelectArrow from '../../assets/img/iceon-select-arrow.svg';\n\nimport './style.scss';\n\nconst { Dragger } = Upload;\nconst { Option } = Select;\n\nconst AdminDocumentPage = () => {\n  const { climeId, id } = useParams();\n  const [commentsList, setCommentsList] = useState(null);\n  const [mode, setMode] = useState('all');\n  const [document, setDocument] = useState(null);\n  const [documentUploadLoader, setDocumentUploadLoader] = useState(false);\n  const [newCommentForm, setNewCommentForm] = useState(false);\n  const [newCommentLoader, setNewCommentLoader] = useState(false);\n  const history = useHistory();\n\n  useEffect(() => {\n    getDocument(climeId, id)\n      .then((data) => {\n        setCommentsList(data.comments);\n        setDocument(data.document);\n      })\n      .catch(() => {\n        history.push('/document/notFound');\n      });\n  }, [id]);\n\n  const onChangeMode = (e) => {\n    const result = [...commentsList];\n    if (e === 'latest') {\n      result.sort((a, b) => (a.updated_at > b.updated_at ? -1 : b.updated_at > a.updated_at ? 1 : 0));\n    } else {\n      result.sort((a, b) => (a.updated_at > b.updated_at ? 1 : b.updated_at > a.updated_at ? -1 : 0));\n    }\n    setCommentsList(result);\n    setMode(e);\n  };\n\n  const uploadNewDocument = ({ file }) => {\n    setDocumentUploadLoader(true);\n    postNewVersionDocument(climeId, id, file).then((data) => {\n      setDocument(data.document);\n      setDocumentUploadLoader(false);\n    });\n  };\n\n  const addComment = (e) => {\n    const value = e.currentTarget.value;\n    if (e.shiftKey || value.trim().length === 0) return;\n    setNewCommentLoader(true);\n\n    postNewComment(climeId, id, value).then((data) => {\n      if (!data) return;\n      const result = [...data.comment];\n      if (mode === 'latest') {\n        result.sort((a, b) => (a.updated_at > b.updated_at ? -1 : b.updated_at > a.updated_at ? 1 : 0));\n      }\n      setCommentsList(result);\n      setNewCommentLoader(false);\n      setNewCommentForm(false);\n      if (mode === 'latest') {\n        setTimeout(() => {\n          window.document.querySelector('.document-details__comments_list').scrollTo(0, 0);\n        }, 100);\n      }\n    });\n  };\n\n  const addReply = (e, comment_id) => {\n    const value = e.currentTarget.value;\n    return new Promise((resolve, reject) => {\n      postNewComment(climeId, id, value, 1, comment_id).then((data) => {\n        setCommentsList(data.comment);\n        resolve();\n      });\n    });\n  };\n\n  const onCommentDelete = (commentId) => {\n    removeComment(climeId, id, commentId).then((data) => {\n      setCommentsList(data.comments);\n    });\n  };\n\n  const isCommentsApproved = () => {\n    return commentsList.filter((item) => item.status === 1).length > 0;\n  };\n\n  return (\n    <div className=\"document-details\">\n      <div className=\"document-details__viewer\">\n        <header className=\"document-details__header\">\n          <Link to={`/admin/active-claim/${climeId}`} className=\"header--back\">\n            <img src={iconBack} alt=\"\" />\n            <span>To Dashboard</span>\n          </Link>\n          {document && (\n            <>\n              <a href={document.url} className=\"header--download\">\n                <img src={iconDownload} alt=\"\" />\n                <span>Download File</span>\n              </a>\n              <Dragger\n                className=\"header--upload\"\n                name=\"file\"\n                customRequest={uploadNewDocument}\n                accept=\"application/pdf, application/msword, application/vnd.openxmlformats-officedocument.wordprocessingml.document, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\n                showUploadList={false}>\n                {documentUploadLoader && (\n                  <div className=\"loading\">\n                    <Spin />\n                  </div>\n                )}\n                {isCommentsApproved() ? (\n                  <Tooltip\n                    placement=\"bottom\"\n                    title=\"You cannot update this file because it contains an unresolved comment.\">\n                    <div>\n                      <img src={iconUpload} alt=\"\" />\n                      <span>Upload New Version</span>\n                    </div>\n                  </Tooltip>\n                ) : (\n                  <div>\n                    <img src={iconUpload} alt=\"\" />\n                    <span>Upload New Version</span>\n                  </div>\n                )}\n              </Dragger>\n            </>\n          )}\n        </header>\n        <article className=\"document-wrapper\">{document && <DocumentViewer url={document.url} />}</article>\n      </div>\n      <div className=\"document-details__comments\">\n        {!commentsList ? (\n          <Skeleton active />\n        ) : (\n          <>\n            <div className=\"document-details__comments_header\">\n              <div className=\"header--title\">\n                <IconComment />\n                <span>Comments ({commentsList.length})</span>\n              </div>\n              {commentsList.length > 0 && (\n                <Select\n                  defaultValue=\"all\"\n                  suffixIcon={<img src={iconSelectArrow} alt=\"\" />}\n                  dropdownMatchSelectWidth={false}\n                  onChange={onChangeMode}>\n                  <Option value=\"all\">All</Option>\n                  <Option value=\"latest\">Latest</Option>\n                </Select>\n              )}\n            </div>\n            <div className=\"document-details__comments_list\">\n              {commentsList.map((comment) => (\n                <AdminComment\n                  key={comment.id}\n                  comment={comment}\n                  climeId={climeId}\n                  onCommentDelete={onCommentDelete}\n                  onAddReply={addReply}\n                />\n              ))}\n              {newCommentForm && (\n                <div className=\"new-comment\">\n                  {!newCommentLoader ? (\n                    <>\n                      <label>Comment:</label>\n                      <Input.TextArea placeholder=\"Type to Comment, Enter to Send\" onPressEnter={addComment} />\n                    </>\n                  ) : (\n                    <Skeleton active />\n                  )}\n                </div>\n              )}\n            </div>\n          </>\n        )}\n        <div className=\"document-details__comments_new\">\n          <Button\n            type=\"primary\"\n            disabled={newCommentForm}\n            onClick={(e) => {\n              setNewCommentForm(true);\n              setTimeout(() => {\n                window.document.querySelector('.document-details__comments_list').scrollTo(0, 50000);\n              }, 100);\n            }}>\n            New Comment\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AdminDocumentPage;\n","import React, { useState, useEffect } from 'react';\nimport { Form, Select, Button, Input, Upload, Dropdown } from 'antd';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport { IconDeleteFile } from '../../../components/icons';\nimport { addDocumentToProject, removeDocumentFromProject, removeProject } from '../../../core/adminServices';\n\nimport ProjectFileListItem from '../../../components/ProjectFileListItem';\nimport iconSelectArrow from '../../../assets/img/iceon-select-arrow.svg';\nimport iconUpload from '../../../assets/img/icon-upload.svg';\nimport iconFile from '../../../assets/img/icon-file-s.svg';\n\nimport './style.scss';\n\nconst { Option } = Select;\n\nconst Project = ({ form, project, onRemove, isRemoved }) => {\n  const [status, setStatus] = useState(null);\n  const [isRed, setIsRed] = useState(false);\n  const [onRemoveDropdown, setOnRemoveDropdown] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const { climeId } = useParams();\n  const history = useHistory();\n\n  useEffect(() => {\n    if (project.status) setStatus(status);\n  }, [project]);\n\n  const customRequest = (e) => {\n    const id = form.getFieldsValue().id;\n    if (id) {\n      addDocumentToProject(climeId, id, e.file).then((data) => {\n        form.setFieldsValue({\n          documents: data.documents,\n        });\n      });\n    }\n    e.onSuccess('ok');\n  };\n\n  const normFile = (e) => {\n    if (Array.isArray(e)) {\n      return e;\n    }\n    return e && e.fileList;\n  };\n\n  const onDeleteProject = () => {\n    const id = form.getFieldsValue().id;\n    if (id) {\n      setLoading(true);\n      removeProject(climeId, id)\n        .then((data) => {\n          onRemove();\n          setIsRed(false);\n          setStatus(null);\n          history.push(`/admin/project/${climeId}`);\n          setOnRemoveDropdown(false);\n          form.setFieldsValue({\n            challenges: null,\n            documents: [],\n            id: null,\n            objectives: null,\n            status: null,\n            title: null,\n            'start-months': null,\n            'start-year': null,\n            'end-months': null,\n            'end-year': null,\n            status: null,\n          });\n          setLoading(false);\n        })\n        .catch((error) => {\n          setLoading(false);\n        });\n    }\n  };\n\n  const onRemoveDocument = (file) => {\n    const id = form.getFieldsValue().id;\n    if (id) {\n      removeDocumentFromProject(file.claim_id, file.project_id, file.id);\n    }\n  };\n\n  const statusName = (s) => {\n    let status = {};\n    switch (s) {\n      case 2:\n        status = {\n          class: 'review',\n          name: 'On Review',\n        };\n        break;\n      case 3:\n        status = {\n          class: 'approved',\n          name: 'Approved',\n        };\n        break;\n\n      default:\n        break;\n    }\n    return status;\n  };\n\n  return (\n    <div className=\"project\">\n      <div className=\"project__forms\">\n        {/* <h1 style={{ visibility: form.getFieldValue('id') || isRemoved ? 'hidden' : 'visible' }}>New Project</h1> */}\n        {isRemoved && (\n          <div className=\"removed-message\">\n            <img src={iconFile} alt=\"\" />\n            <span>There are no projects yet</span>\n          </div>\n        )}\n        <div className={`project__form ${isRemoved ? 'removed' : ''} ${isRed ? 'red' : ''}`}>\n          <Dropdown\n            placement=\"bottomRight\"\n            trigger=\"click\"\n            visible={onRemoveDropdown}\n            onVisibleChange={(visible) => {\n              if (!visible) {\n                setOnRemoveDropdown(false);\n                setIsRed(false);\n              } else {\n                setIsRed(true);\n              }\n            }}\n            overlay={\n              <div className=\"step-file--title-dropdown\">\n                <div className=\"dropdown-title\">Are you sure you want to delete this Document?</div>\n                <div className=\"dropdown-actions\">\n                  <Button\n                    type=\"button\"\n                    onClick={(e) => {\n                      setOnRemoveDropdown(false);\n                      setIsRed(false);\n                    }}>\n                    Back\n                  </Button>\n                  <Button type=\"primary\" onClick={onDeleteProject} loading={loading}>\n                    Delete\n                  </Button>\n                </div>\n              </div>\n            }>\n            {/* <button\n              className=\"step-file--remove-button\"\n              onClick={() => {\n                setOnRemoveDropdown(true);\n              }}>\n              <IconDeleteFile />\n            </button> */}\n            <button\n              type=\"button\"\n              className=\"project__form_remove\"\n              style={{\n                display: !project.id || isRemoved ? 'none' : '',\n              }}\n              onClick={() => {\n                setOnRemoveDropdown(true);\n                //onDeleteProject();\n              }}>\n              <IconDeleteFile />\n            </button>\n          </Dropdown>\n          <div className=\"project__form_inputs\">\n            <Form.Item\n              label=\"Project Title\"\n              name=\"title\"\n              rules={[\n                {\n                  required: true,\n                  message: 'Please input your facility title!',\n                },\n              ]}>\n              <Input placeholder=\"Enter the title\" />\n            </Form.Item>\n          </div>\n          <div className=\"project__form_dates\">\n            <div className=\"start-dates\">\n              <Form.Item\n                name=\"start-months\"\n                label=\"Start Date\"\n                className=\"row-months\"\n                rules={[\n                  {\n                    required: true,\n                    message: false,\n                  },\n                ]}>\n                <Select\n                  placeholder=\"Months\"\n                  suffixIcon={<img src={iconSelectArrow} alt=\"\" />}\n                  className=\"months-select\">\n                  <Option value={0}>January</Option>\n                  <Option value={1}>February</Option>\n                  <Option value={2}>March</Option>\n                  <Option value={3}>April</Option>\n                  <Option value={4}>May</Option>\n                  <Option value={5}>June</Option>\n                  <Option value={6}>July</Option>\n                  <Option value={7}>August</Option>\n                  <Option value={8}>September</Option>\n                  <Option value={9}>October</Option>\n                  <Option value={10}>November</Option>\n                  <Option value={11}>December</Option>\n                </Select>\n              </Form.Item>\n              <Form.Item\n                name=\"start-year\"\n                className=\"row-year\"\n                rules={[\n                  {\n                    required: true,\n                    message: false,\n                  },\n                ]}>\n                <Select placeholder=\"Year\" suffixIcon={<img src={iconSelectArrow} alt=\"\" />} className=\"years-select\">\n                  <Option value=\"2021\">2021</Option>\n                  <Option value=\"2020\">2020</Option>\n                  <Option value=\"2019\">2019</Option>\n                  <Option value=\"2018\">2018</Option>\n                  <Option value=\"2017\">2017</Option>\n                </Select>\n              </Form.Item>\n            </div>\n            <div className=\"end-dates\">\n              <Form.Item\n                name=\"end-months\"\n                label=\"End Date\"\n                className=\"row-months\"\n                rules={[\n                  {\n                    required: true,\n                    message: false,\n                  },\n                ]}>\n                <Select\n                  placeholder=\"Months\"\n                  className=\"months-select\"\n                  suffixIcon={<img src={iconSelectArrow} alt=\"\" />}>\n                  <Option value={0}>January</Option>\n                  <Option value={1}>February</Option>\n                  <Option value={2}>March</Option>\n                  <Option value={3}>April</Option>\n                  <Option value={4}>May</Option>\n                  <Option value={5}>June</Option>\n                  <Option value={6}>July</Option>\n                  <Option value={7}>August</Option>\n                  <Option value={8}>September</Option>\n                  <Option value={9}>October</Option>\n                  <Option value={10}>November</Option>\n                  <Option value={11}>December</Option>\n                </Select>\n              </Form.Item>\n              <Form.Item\n                name=\"end-year\"\n                className=\"row-year\"\n                rules={[\n                  {\n                    required: true,\n                    message: false,\n                  },\n                ]}>\n                <Select placeholder=\"Year\" suffixIcon={<img src={iconSelectArrow} alt=\"\" />} className=\"years-select\">\n                  <Option value=\"2021\">2021</Option>\n                  <Option value=\"2020\">2020</Option>\n                  <Option value=\"2019\">2019</Option>\n                  <Option value=\"2018\">2018</Option>\n                  <Option value=\"2017\">2017</Option>\n                </Select>\n              </Form.Item>\n            </div>\n          </div>\n          <div className=\"project__form_inputs\">\n            <Form.Item label=\"Objectives\" name=\"objectives\">\n              <Input.TextArea placeholder=\"Enter objectives\" style={{ height: 112 }} />\n            </Form.Item>\n          </div>\n          <div className=\"project__form_inputs\">\n            <Form.Item label=\"Non-Routine Challenges\" name=\"challenges\">\n              <Input.TextArea placeholder=\"Enter challenges\" style={{ height: 156 }} />\n            </Form.Item>\n          </div>\n          <Form.Item hidden name=\"id\">\n            <Input />\n          </Form.Item>\n          {/* <div className=\"project__form_submit\">\n            {length === 1 ? (\n              <>\n                <Button\n                  type=\"button\"\n                  onClick={() => {\n                    add();\n                  }}>\n                  Add One More Project\n                </Button>\n                <Form.Item>\n                  <Button type=\"primary\" htmlType=\"submit\">\n                    Add Project to Dashboard\n                  </Button>\n                </Form.Item>\n              </>\n            ) : (\n              <Button\n                type=\"button\"\n                className=\"remove-project\"\n                loading={loaderOnRemove}\n                onClick={() => {\n                  onDeleteProject(field.name);\n                }}>\n                Remove\n              </Button>\n            )}\n          </div> */}\n        </div>\n      </div>\n      {!isRemoved && (\n        <div className=\"project__docs\">\n          <h3>Add Related Documents</h3>\n          <Form.Item name=\"status\" className=\"hidden\">\n            <Input hidden />\n          </Form.Item>\n          {project.status && (\n            <div className=\"step-file--status\">\n              <div className={`status ${statusName(project.status).class}`}>{statusName(project.status).name}</div>\n            </div>\n          )}\n          <div className=\"project__docs_list\">\n            <Form.Item name=\"documents\" valuePropName=\"fileList\" getValueFromEvent={normFile} className=\"documents\">\n              <Upload\n                customRequest={customRequest}\n                itemRender={(originNode, file, currFileList, actions) => (\n                  <ProjectFileListItem originNode={originNode} file={file} fileList={currFileList} actions={actions} />\n                )}\n                showUploadList={true}\n                onRemove={onRemoveDocument}\n                accept=\"application/pdf, application/msword,\n            application/vnd.openxmlformats-officedocument.wordprocessingml.document,\n            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\">\n                <img src={iconUpload} alt=\"\" />\n                <span>Add the Document</span>\n              </Upload>\n            </Form.Item>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Project;\n","import React, { useEffect, useState } from 'react';\nimport { Link, useParams, useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Form, notification, Button, Modal, Skeleton, Upload } from 'antd';\nimport { getTechnicalClaimStep, addDocumentToProject, setNewProject, editProject } from '../../core/adminServices';\n\nimport actions from '../../core/actions';\nimport { CloseIconModal } from '../../components/icons';\nimport Project from './Project';\nimport iconBack from '../../assets/img/arrow-left.svg';\nimport iconPdf from '../../assets/img/icon-pdf.svg';\nimport iconDownload from '../../assets/img/icon-download.svg';\nimport iconUpload from '../../assets/img/icon-upload-blue.svg';\nimport iconSelectArrow from '../../assets/img/iceon-select-arrow.svg';\nimport './style.scss';\nimport DocumentViewer from '../../components/DocumentViewer';\n\nconst { Dragger } = Upload;\n\nconst AdminProjectsPage = () => {\n  const [currentProject, setCurrentProject] = useState(null);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [loader, setLoader] = useState(false);\n  const [isRemoved, setIsRemoved] = useState(false);\n  const [formLength, setFormLength] = useState(1);\n  const projectsList = useSelector((state) => state.projects.projectsList);\n  const { isVisibleProjectPage } = useSelector((state) => state.modal);\n  const { climeId, id } = useParams();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [form] = Form.useForm();\n  const { blurActivePrPage } = bindActionCreators(actions, dispatch);\n\n  useEffect(() => {\n    if (id) {\n      if (projectsList) {\n        setCurrentProject(projectsList.filter((item) => item.id == id)[0]);\n      } else {\n        const { addProjectsDetails } = bindActionCreators(actions, dispatch);\n        getTechnicalClaimStep(climeId).then((data) => {\n          addProjectsDetails(data.documents);\n          setCurrentProject(data.documents.filter((item) => item.id == id)[0]);\n        });\n      }\n    } else {\n      setCurrentProject({});\n    }\n  }, [id]);\n\n  useEffect(() => {\n    if (currentProject) initialValue();\n  }, [currentProject]);\n\n  const customRequest = (e) => {\n    if (id) {\n      addDocumentToProject(climeId, id, e.file, 1).then((data) => {\n        setCurrentProject(data);\n      });\n    } else {\n      const form = { main_document: e.file };\n      setNewProject(climeId, form).then((data) => {\n        setCurrentProject(data);\n      });\n    }\n    e.onSuccess('ok');\n  };\n\n  const onFinish = (formValues) => {\n    setLoader(true);\n    addProject(formValues);\n  };\n\n  var getDaysInMonth = (month, year) => new Date(year, month, 0).getDate();\n\n  const addProject = (project) => {\n    const data = {\n      title: project.title,\n      objectives: project.objectives,\n      challanges: project.challenges,\n    };\n    if (project['start-months'] >= 0 && project['start-year'] && project['end-months'] >= 0 && project['end-year']) {\n      data.start_date = Date.parse(`${project['start-months'] + 1}/01/${project['start-year']}`);\n      data.end_date = Date.parse(\n        `${project['end-months'] + 1}/${getDaysInMonth(project['end-months'] + 1, project['end-year'])}/${\n          project['end-year']\n        }`,\n      );\n    }\n    if (project.documents && !project.id) {\n      const docs = [];\n      project.documents.forEach((doc) => {\n        docs.push(doc.originFileObj);\n      });\n      data.documents = docs;\n    }\n\n    if (currentProject.id) {\n      editProject(climeId, currentProject.id, data).then(() => {\n        notification.success({\n          description: 'Project was updated successfully',\n        });\n        history.push(`/admin/active-claim/${climeId}`);\n      });\n    } else {\n      setNewProject(climeId, data).then(() => {\n        notification.success({\n          description: 'Project was added successfully',\n        });\n        history.push(`/admin/active-claim/${climeId}`);\n      });\n    }\n  };\n\n  const initialValue = () => {\n    let result = {};\n    if (currentProject) {\n      result = {\n        challenges: currentProject?.challanges,\n        documents: currentProject?.documents,\n        id: currentProject?.id,\n        objectives: currentProject?.objectives,\n        status: currentProject?.status,\n        title: currentProject?.title,\n      };\n    }\n    result['start-months'] = currentProject?.start_date\n      ? new Date(Number(currentProject?.start_date)).getMonth()\n      : null;\n    result['start-year'] = currentProject?.start_date\n      ? new Date(Number(currentProject?.start_date)).getFullYear()\n      : null;\n    result['end-months'] = currentProject?.end_date ? new Date(Number(currentProject?.end_date)).getMonth() : null;\n    result['end-year'] = currentProject?.end_date ? new Date(Number(currentProject?.end_date)).getFullYear() : null;\n\n    form.setFieldsValue(result);\n  };\n\n  const onBack = () => {\n    if (!isRemoved && (!currentProject.title?.length || !currentProject.start_date || !currentProject.end_date)) {\n      setModalVisible(true);\n      blurActivePrPage();\n    } else {\n      history.push(`/admin/active-claim/${climeId}`);\n    }\n  };\n\n  return (\n    <div\n      className=\"projects\"\n      style={{\n        filter: isVisibleProjectPage ? 'blur(3px)' : 'blur(0px)',\n      }}>\n      <header>\n        <div className=\"projects__header_wrapper\">\n          <Button type=\"link\" onClick={onBack} className=\"header--back\">\n            <img src={iconBack} alt=\"\" />\n            <span>To Dashboard</span>\n          </Button>\n        </div>\n      </header>\n      <div className=\"projects__wrapper\">\n        <div className=\"projects-list\">\n          {!currentProject ? (\n            <Skeleton active />\n          ) : (\n            <Form name=\"dynamic_form_item\" layout=\"vertical\" form={form} requiredMark={false} onFinish={onFinish}>\n              <Project\n                onRemove={() => {\n                  setIsRemoved(true);\n                  setCurrentProject({});\n                }}\n                isRemoved={isRemoved}\n                form={form}\n                project={currentProject}\n              />\n              <div className=\"project__form_submit-external\" style={{ marginTop: formLength ? 0 : 56 }}>\n                {isRemoved ? (\n                  <Button\n                    type=\"primary\"\n                    onClick={() => {\n                      setIsRemoved(false);\n                      history.push(`/admin/project/${climeId}`);\n                    }}>\n                    Add Project\n                  </Button>\n                ) : (\n                  <Form.Item>\n                    <Button type=\"primary\" htmlType=\"submit\" loading={loader}>\n                      {id ? 'Save changes' : 'Add Project to Dashboard'}\n                    </Button>\n                  </Form.Item>\n                )}\n              </div>\n            </Form>\n          )}\n          {/* <Project /> */}\n        </div>\n        <div className=\"projects__viewer\">\n          {!isRemoved && (\n            <div className=\"projects__viewer_document\">\n              {!currentProject ? (\n                <Skeleton active />\n              ) : currentProject.doc_url ? (\n                <DocumentViewer url={currentProject.doc_url} />\n              ) : (\n                <Dragger\n                  className=\"projects__viewer_dragger\"\n                  customRequest={customRequest}\n                  showUploadList={false}\n                  accept=\"application/pdf, application/msword,\n              application/vnd.openxmlformats-officedocument.wordprocessingml.document,\n              application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\">\n                  <img src={iconPdf} alt=\"\" />\n                  <span>There are no documents yet</span>\n                </Dragger>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n      <Modal\n        title=\"Basic Modal\"\n        className=\"goback__modal\"\n        visible={modalVisible}\n        width={700}\n        onCancel={() => {\n          setModalVisible(false);\n          blurActivePrPage();\n        }}\n        footer={false}\n        title={false}\n        closeIcon={<CloseIconModal />}>\n        <h2>You haven’t filled requested fields</h2>\n        <div className=\"technical__modal_description\">\n          <p>\n            Please, fill them in case you want to keep this project. If you go back to dashboard, the project will be\n            deleted.\n          </p>\n        </div>\n        <div className=\"technical__modal_actions\">\n          <Button\n            type=\"button\"\n            onClick={() => {\n              setModalVisible(false);\n              blurActivePrPage();\n            }}>\n            Keep project\n          </Button>\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              history.push(`/admin/active-claim/${climeId}`);\n              blurActivePrPage();\n            }}>\n            Delete and go to Dashboard\n          </Button>\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nexport default AdminProjectsPage;\n","import React, { useEffect } from 'react';\nimport Layout from '../../components/LayoutGuest/Layout';\nimport './style.scss';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nconst DocSign = () => {\n  const { id_status } = useSelector((state) => state.user?.data?.profile);\n  const history = useHistory();\n  useEffect(() => {\n    if (!!id_status) {\n      history.push('/active-claims');\n    }\n  }, []);\n\n  const { manager } = useSelector((state) => state?.user?.data);\n\n  return (\n    <Layout isLogged={false} className=\"hello-page\" mode=\"registration\">\n      <div className=\"wrapper_doc\">\n        <h2>Final step</h2>\n        <p className=\"text\">\n          In order to start the claim process please book a meeting with one of our business developers who will be able\n          to take you through the steps required to begin our standard consulting terms and claim process.\n          <br /> We will want a schedule a call button here.\n        </p>\n        <p className=\"manager_info\">\n          Contact our Manager <strong>{manager.name}</strong>\n        </p>\n        <div className=\"wrapper_blocks\">\n          <div className=\"block_email\">\n            <span>Email:</span>\n            <span>{manager.email}</span>\n          </div>\n          <div className=\"block_phone\">\n            <span>Phone:</span>\n            <span>{manager.phone}</span>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default DocSign;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Skeleton } from 'antd';\n\nimport Layout from '../../components/LayoutDashboard/Layout';\nimport { getCompletedClaimData } from '../../core/services';\n\nimport './style.scss';\n\nconst CompletedClaimsPage = () => {\n  const [completedClaimsData, setCompletedClaimsData] = useState(null);\n  const user = useSelector((state) => state.user.currentCompany);\n\n  useEffect(() => {\n    if (user) {\n      getCompletedClaimData(user.id).then((data) => {\n        setCompletedClaimsData(data);\n      });\n    }\n  }, [user]);\n\n  return (\n    <Layout isLogged={false} className=\"dashboard\">\n      <div className=\"future-claims\">\n        {!completedClaimsData ? (\n          <Skeleton active />\n        ) : (\n          <ul className=\"future-claims__list\">\n            {completedClaimsData.map((item) => (\n              <li key={`claim-${item.id}`} className=\"future-claim\">\n                <div className=\"future-claim--title\">{item.title}</div>\n                <div className=\"future-claim--row\">\n                  <span>R&D Tax Relief Claim</span>\n                  <b>{item.start_date}</b>\n                </div>\n                <div className=\"future-claim--row\">\n                  <span>Estimated completion</span>\n                  <b>{item.end_date}</b>\n                </div>\n                <div className=\"future-claim--row\">\n                  <span>Estimated benefit</span>\n                  <b>£ {item.estimated_benefit}</b>\n                </div>\n                <div className=\"future-claim--row\">\n                  <span>Consultant fee</span>\n                  <b>20%</b>\n                </div>\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    </Layout>\n  );\n};\n\nexport default CompletedClaimsPage;\n","import React, { useState, useEffect } from 'react';\nimport Layout from '../../components/LayoutDashboard/Layout';\nimport { Form, Button, Input } from 'antd';\nimport { useHistory } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nimport { sendApproveReport } from '../../core/services';\n\nimport { CongrCard1, CongrCard2, CongrCard3 } from '../../components/icons';\n\nimport './style.scss';\n\nconst CongratulationsPage = () => {\n  const [loading, setLoading] = useState(false);\n  const [isSended, setIsSended] = useState(false);\n  const [form] = Form.useForm();\n  const finalReport = useSelector((state) => state.claims.finalReport);\n  const history = useHistory();\n\n  useEffect(() => {\n    if (!finalReport) history.push('/active-claims');\n  }, []);\n\n  const convertDate = (date) => {\n    function convertDate(inputFormat) {\n      function pad(s) {\n        return s < 10 ? '0' + s : s;\n      }\n      var d = new Date(inputFormat);\n      return [pad(d.getDate()), pad(d.getMonth() + 1), d.getFullYear()].join('/');\n    }\n    return convertDate(date);\n  };\n\n  const onFinishName = (value) => {\n    setLoading(true);\n    sendApproveReport(finalReport.claimId, value)\n      .then((data) => {\n        setLoading(false);\n        setIsSended(true);\n      })\n      .catch((error) => {\n        setLoading(false);\n      });\n  };\n\n  return (\n    <Layout className=\"dashboard\">\n      <div className=\"congrat_wrapper\">\n        <h2>Congratulations!</h2>\n        <div className=\"cards_wrapper\">\n          <div className=\"card card1\">\n            <h3>{finalReport?.final_benefit_amount} £</h3>\n            <p>Final benefit amount</p>\n            <div className=\"circle\">\n              <CongrCard1 />\n            </div>\n          </div>\n          <div className=\"card card2\">\n            <h3>\n              {finalReport?.time_taken_to_complete} {finalReport?.time_taken_to_complete > 1 ? 'days' : 'day'}\n            </h3>\n            <p>Time taken to complete report</p>\n            <div className=\"circle\">\n              <CongrCard2 />\n            </div>\n          </div>\n          <div className=\"card card3\">\n            <h3>{convertDate(finalReport?.estimated_payment_date)}</h3>\n            <p>Estimated payment date</p>\n            <div className=\"circle\">\n              <CongrCard3 />\n            </div>\n          </div>\n        </div>\n        <div className=\"email_block\">\n          {!isSended ? (\n            <Form name=\"name\" layout=\"vertical\" form={form} requiredMark={true} onFinish={onFinishName}>\n              <Form.Item\n                name=\"email\"\n                rules={[\n                  {\n                    type: 'email',\n                    required: true,\n                    message: 'Please input your email!',\n                  },\n                ]}>\n                <Input placeholder=\"Enter the email\" />\n              </Form.Item>\n\n              <Form.Item className=\"registration--submit\">\n                <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\n                  Send to Accountant\n                </Button>\n              </Form.Item>\n            </Form>\n          ) : (\n            <div className=\"email_block-text\">\n              We sent all the documents to your accountant and created new claim automatically. If you have any\n              questions or need any help — contact us.\n            </div>\n          )}\n        </div>\n      </div>\n    </Layout>\n  );\n};\nexport default CongratulationsPage;\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport PrivateRoute from './PrivatRouter';\nimport PrivateAdminRoute from './PrivatAdminRouter';\nimport CoreRouter from './CoreRouter';\nimport WelcomePage from '../../pages/WelcomePage';\nimport LoginPage from '../../pages/Login';\nimport ActiveClaimsPage from '../../pages/ActiveClaimsPage';\nimport FutureClaimsPage from '../../pages/FutureClaimsPage';\nimport DocumentPage from '../../pages/DocumentPage';\nimport ProjectsPage from '../../pages/ProjectsPage';\n// import ProfilePage from '../../pages/ProfilePage';\nimport ChangePasswordPage from '../../pages/ChangePasswordPage';\nimport ResetPasswordPage from '../../pages/ResetPasswordPage';\nimport CreatePasswordPage from '../../pages/CreatePasswordPage';\nimport AddProjectPage from '../../pages/AddProjectPage';\nimport DocumentsPage from '../../pages/DocumentsPage';\nimport NoFoundDoc from '../../pages/NoFoundDoc';\nimport AdminProfilePage from '../../pages/AdminProfilePage';\nimport AdminActiveClaimsPage from '../../pages/AdminActiveClaimsPage';\nimport AdminClientsPage from '../../pages/AdminClientsPage';\nimport AdminSettings from '../../pages/AdminSettings';\nimport AdminAddClient from '../../pages/AdminAddClient';\nimport AdminAddComany from '../../pages/AdminAddComany';\nimport AdminDocumentPage from '../../pages/AdminDocumentPage';\nimport AdminProjectsPage from '../../pages/AdminProjectsPage';\nimport DocSign from '../../pages/DocSign';\nimport CompletedClaimsPage from '../../pages/CompletedClaimsPage';\nimport CongratulationsPage from '../../pages/CongratulationsPage';\n\n//TODO Lazy\nfunction lazyWithPreload(factory) {\n  const Component = React.lazy(factory);\n  Component.preload = factory;\n  return Component;\n}\n\nconst ProfilePage = lazyWithPreload(() => import('../../pages/ProfilePage'));\n\nconst routes = () => {\n  return (\n    <React.Suspense fallback=\"\">\n      <CoreRouter>\n        <Route exact path=\"/\" component={WelcomePage} />\n        <Route exact path=\"/welcome/\" component={WelcomePage} />\n        <Route exact path=\"/sign-in/\" component={LoginPage} />\n        <PrivateRoute exact path=\"/docSign\" component={DocSign} />\n        <PrivateRoute exact path=\"/active-claims/\" component={ActiveClaimsPage} />\n        <PrivateRoute exact path=\"/active-claims/congratulations\" component={CongratulationsPage} />\n        <PrivateRoute exact path=\"/future-claims/\" component={FutureClaimsPage} />\n        <PrivateRoute exact path=\"/completed-claims/\" component={CompletedClaimsPage} />\n        <PrivateRoute exact path=\"/document/:climeId/:id/\" component={DocumentPage} />\n        <PrivateRoute exact path=\"/document/notFound/\" component={NoFoundDoc} />\n        <PrivateRoute exact path=\"/project/:climeId/:id\" component={ProjectsPage} />\n        <PrivateRoute exact path=\"/project/:climeId/\" component={ProjectsPage} />\n        <PrivateRoute exact path=\"/profile/\" component={ProfilePage} />\n        <PrivateRoute exact path=\"/profile/change-password/\" component={ChangePasswordPage} />\n        <Route exact path=\"/reset-password/\" component={ResetPasswordPage} />\n        <Route exact path=\"/create-password/\" component={CreatePasswordPage} />\n        <PrivateRoute exact path=\"/profile/add-project/\" component={AddProjectPage} />\n        <PrivateRoute exact path=\"/documents/:step\" component={DocumentsPage} />\n        <PrivateAdminRoute exact path=\"/admin/clients\" component={AdminClientsPage} />\n        <PrivateAdminRoute exact path=\"/admin/client/:id\" component={AdminProfilePage} />\n        <PrivateAdminRoute exact path=\"/admin/active-claim/:id\" component={AdminActiveClaimsPage} />\n        <PrivateAdminRoute exact path=\"/admin/document/:climeId/:id/\" component={AdminDocumentPage} />\n        <PrivateAdminRoute exact path=\"/admin/project/:climeId/:id\" component={AdminProjectsPage} />\n        <PrivateAdminRoute exact path=\"/admin/project/:climeId/\" component={AdminProjectsPage} />\n        <PrivateAdminRoute exact path=\"/admin/settings\" component={AdminSettings} />\n        <PrivateAdminRoute exact path=\"/admin/add-client\" component={AdminAddClient} />\n        <PrivateAdminRoute exact path=\"/admin/add-company/:clientId\" component={AdminAddComany} />\n\n        {/* <PrivateRoute exact path='/replies/' component={Login} /> */}\n      </CoreRouter>\n    </React.Suspense>\n  );\n};\n\nexport default routes;\n","import React from 'react';\nimport lockr from 'lockr';\nimport { notification } from 'antd';\nimport { IconWarning } from '../../components/icons';\n\nconst { LOCALSTORAGE_EXPIRES_TIME } = require('../constants').default;\n\nconst onlyAuthorisedAllowed = () => {\n  const response = lockr.get('auth-key');\n  if (response) {\n    const authDate = lockr.get('session-token-expiry');\n    if (authDate) {\n      const aDate = new Date(authDate);\n      const aNow = new Date();\n      const milliseconds = aNow - aDate;\n      const difference = Math.floor(milliseconds / 1000 / 60);\n      if (difference >= LOCALSTORAGE_EXPIRES_TIME) {\n        notification.error({\n          className: 'error-message',\n          description: 'Session expired. Please login again.',\n          icon: <IconWarning />,\n        });\n        lockr.flush();\n        return false;\n      }\n    } else {\n      notification.error({\n        className: 'error-message',\n        description: 'Session expired. Please login again.',\n        icon: <IconWarning />,\n      });\n      return false;\n    }\n    return true;\n  }\n  return false;\n};\n\nconst initialState = {\n  isloggedIn: onlyAuthorisedAllowed(),\n  isAdmin: false,\n  data: null,\n  companies: null,\n  currentCompany: null,\n  activeClaimId: null,\n  loader: false,\n  error: null,\n  success: false,\n  prevRout: null,\n};\n\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'FETCH_LOGIN_REQUEST':\n      return {\n        ...state,\n        //isloggedIn: false,\n        loader: true,\n        error: null,\n        success: false,\n      };\n\n    case 'FETCH_LOGIN_SUCCESS':\n      return {\n        ...state,\n        isloggedIn: action.payload,\n        loader: false,\n        error: null,\n        success: true,\n      };\n\n    case 'FETCH_LOGIN_FAILURE':\n      return {\n        ...state,\n        isloggedIn: false,\n        loader: false,\n        error: action.payload,\n        success: false,\n      };\n\n    case 'FETCH_USER_DATA_SUCCESS':\n      return {\n        ...state,\n        data: action.payload,\n        loader: false,\n        error: null,\n        success: true,\n      };\n\n    case 'FETCH_USER_COMPANIES_SUCCESS':\n      return {\n        ...state,\n        companies: action.payload,\n        // currentCompany: action.payload[0],\n        loader: false,\n        error: null,\n        success: true,\n      };\n\n    case 'SET-USER-ACTIVE-CLIME-ID':\n      return {\n        ...state,\n        activeClaimId: action.payload,\n        loader: false,\n        error: null,\n        success: true,\n      };\n\n    case 'SET_USER_CURRENT_COMPANY':\n      return {\n        ...state,\n        currentCompany: action.payload,\n      };\n\n    case 'SET_USER_IS_ADMIN':\n      return {\n        ...state,\n        isAdmin: true,\n      };\n\n    case 'USER-LOG-OUT':\n      return {\n        isloggedIn: false,\n        isAdmin: false,\n        data: null,\n        companies: null,\n        currentCompany: null,\n        activeClaimId: null,\n        loader: false,\n        error: null,\n        success: false,\n      };\n\n    case 'SET_PREV_ROUT':\n      return {\n        ...state,\n        prevRout: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","const initialState = {\n  loader: false,\n  error: null,\n  success: false,\n  name: '',\n  number: '',\n  email: '',\n  industry: [],\n  password: '',\n  staffing_costs: 0,\n  materials_costs: 0,\n  subcontracting_costs: 0,\n  software_costs: 0,\n  industriesList: [],\n  showEstimate: null,\n};\n\nconst registrationReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'FETCH_REGISTER_REQUEST':\n      return {\n        ...state,\n        isloggedIn: false,\n        loader: true,\n        error: null,\n        success: false,\n      };\n\n    case 'FETCH_REGISTER_SUCCESS':\n      return {\n        ...state,\n        isloggedIn: action.payload,\n        loader: false,\n        error: null,\n        success: true,\n      };\n\n    case 'FETCH_REGISTER_FAILURE':\n      return {\n        ...state,\n        isloggedIn: false,\n        loader: false,\n        error: action.payload,\n        success: false,\n      };\n    case 'FETCH_REGISTER_UPDATE_STATE':\n      return {\n        ...state,\n        ...action.payload,\n      };\n\n    case 'REGISTER_SET_ALL_INDUSTRIES':\n      return {\n        ...state,\n        industriesList: action.payload,\n      };\n    case 'REGISTRATION_CHANGE_ESTIMATE':\n      return {\n        ...state,\n        showEstimate: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default registrationReducer;\n","export const initialState = {\n  isBlur: false,\n  visibleModal: false,\n  isVisibleNotifications: false,\n  isVisibleSubMenu: [],\n  isVisibleModalDelete: false,\n  isVisibleModalDeleteDocs: false,\n  isVisibleBlurSheduleCall: false,\n  isVisibleActiveTechnical: false,\n  isVisibleActiveSteps: false,\n  isVisibleProjectPage: false,\n  pageAdminClientsGLOBAL: null,\n};\n\nexport const modalReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case 'SET_IS_BLUR':\n      return {\n        ...state,\n        isBlur: payload,\n      };\n    case 'SHOW_MODAL':\n      return {\n        ...state,\n        visibleModal: true,\n      };\n    case 'CLOSE_MODAL':\n      return {\n        ...state,\n        visibleModal: false,\n      };\n    case 'SHOW_MODAL_NOTIFICATIONS':\n      return {\n        ...state,\n        isVisibleNotifications: true,\n      };\n    case 'CLOSE_MODAL_NOTIFICATIONS':\n      return {\n        ...state,\n        isVisibleNotifications: false,\n      };\n    case 'SHOW_SUBMENU':\n      return {\n        ...state,\n        isVisibleSubMenu: payload,\n      };\n\n    case 'CLOSE_SUBMENU':\n      return {\n        ...state,\n        isVisibleSubMenu: [],\n      };\n    case 'SHOW_MODAL_DELETE':\n      return {\n        ...state,\n        isVisibleModalDelete: true,\n      };\n\n    case 'CLOSE_MODAL_DELETE':\n      return {\n        ...state,\n        isVisibleModalDelete: false,\n      };\n\n    case 'SHOW_MODAL_DELETE_DOCS':\n      return {\n        ...state,\n        isVisibleModalDeleteDocs: true,\n      };\n\n    case 'CLOSE_MODAL_DELETE_DOCS':\n      return {\n        ...state,\n        isVisibleModalDeleteDocs: false,\n      };\n    case 'SHOW_BLUR_SHEDULE_CALL':\n      return {\n        ...state,\n        isVisibleBlurSheduleCall: true,\n      };\n\n    case 'CLOSE_BLUR_SHEDULE_CALL':\n      return {\n        ...state,\n        isVisibleBlurSheduleCall: false,\n      };\n    case 'SHOW_BLUR_ACTIVE_TECHNICALS':\n      return {\n        ...state,\n        isVisibleActiveTechnical: true,\n      };\n    case 'CLOSE_BLUR_ACTIVE_TECHNICALS':\n      return {\n        ...state,\n        isVisibleActiveTechnical: false,\n      };\n    case 'BLUR_ACTIVE_STEPS':\n      return {\n        ...state,\n        isVisibleActiveSteps: !state.isVisibleActiveSteps,\n      };\n    case 'BLUR_ACTIVE_PR_PAGE':\n      return {\n        ...state,\n        isVisibleProjectPage: !state.isVisibleProjectPage,\n      };\n    case 'SET_CURRENT_PAGE':\n      return {\n        ...state,\n        pageAdminClientsGLOBAL: payload,\n      };\n    case 'USER-LOG-OUT':\n      return {\n        pageAdminClientsGLOBAL: null,\n      };\n\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n\nexport default modalReducer;\n","export const initialState = {\n  projectsList: null,\n};\n\nexport const projectsReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case 'ADD_PROJECTS_DETAILS':\n      return {\n        projectsList: payload,\n      };\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n\nexport default projectsReducer;\n","export const initialState = {\n  activeClaimStatus: {\n    introduction: false,\n    financial: false,\n    technical: false,\n    deliverables: false,\n    submission: false,\n  },\n  finalReport: null,\n};\n\nexport const claimsReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case 'SET_STEP_STATUS':\n      return {\n        ...state,\n        activeClaimStatus: {\n          ...state.activeClaimStatus,\n          [payload.name]: payload.status,\n        },\n      };\n\n    case 'SET_FINAL_REPORT':\n      return {\n        ...state,\n        finalReport: payload,\n      };\n\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n\nexport default claimsReducer;\n","import { combineReducers } from 'redux';\n\nimport userReducer from './userReducer';\nimport registrationReducer from './registrationReducer';\nimport modalReducer from './modalReducer';\nimport projectsReducer from './projectsReducer';\nimport claimsReducer from './claimsReducer';\n\nconst appReducer = combineReducers({\n  user: userReducer,\n  registration: registrationReducer,\n  modal: modalReducer,\n  projects: projectsReducer,\n  claims: claimsReducer,\n});\n\nconst rootReducer = (state, action) => {\n  return appReducer(state, action);\n};\n\nexport default rootReducer;\n","import { createStore } from 'redux';\n//import thunkMiddleware from 'redux-thunk';\n\nimport reducer from './core/reducers';\n\nconst store = createStore(reducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nstore.subscribe(() => {\n  console.log(store.getState());\n});\n\nexport default store;\n","import React from 'react';\nimport './style.scss';\nimport { GranterLogo, DevicesOther } from '../icons';\nimport { Link } from 'react-router-dom';\n\nconst Plug = () => {\n  return (\n    <div className=\"fix_plug\">\n      <div className=\"wrapper_plug\">\n        <header>\n          <div className=\"logo\">\n            <GranterLogo />\n          </div>\n          <h1>Granter</h1>\n        </header>\n        <div className=\"devices_info\">\n          <div className=\"devices_other\">\n            <DevicesOther />\n          </div>\n          <div className=\"info\">\n            <h3>Please, use your computer to work with Granter.</h3>\n          </div>\n        </div>\n        <footer>\n          <div className=\"wrapper\">\n            <Link to=\"\">About Us</Link>\n            <Link to=\"\">Terms and Conditions</Link>\n            <Link to=\"\">Need Help?</Link>\n          </div>\n        </footer>\n      </div>\n    </div>\n  );\n};\n\nexport default Plug;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Routes from './core/routes';\nimport store from './store.js';\nimport './index.scss';\nimport { Provider } from 'react-redux';\nimport Plug from './components/Plug';\n//import reportWebVitals from \"./reportWebVitals\";\n\n//const actions = bindActionCreators();\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router basename=\"/\">\n      <Routes />\n      <Plug />\n    </Router>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}